/*
 * Alerts API
 *  ## Overview Manage all alerts, alert rules and alert suppression windows.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api;

import com.thousandeyes.ApiException;
import com.thousandeyes.api.model.CreateAlertRule201Response;
import com.thousandeyes.api.model.Error;
import com.thousandeyes.api.model.GetAlertRuleDetails200Response;
import com.thousandeyes.api.model.GetAlertsRules200Response;
import com.thousandeyes.api.model.RuleDetailUpdate;
import java.net.URI;
import com.thousandeyes.api.model.UnauthorizedError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AlertRulesApi
 */
@Disabled
public class AlertRulesApiTest {

    private final AlertRulesApi api = new AlertRulesApi();

    /**
     * Create alert rule
     *
     * Creates a new alert rule in your account, using the provided POST data. The &#x60;Edit alert rules&#x60; permission is required to create an alert rule. Note: Assigning an alert rule to a test during creation requires the &#x60;Edit tests&#x60; permission.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAlertRuleTest() throws ApiException {
        RuleDetailUpdate ruleDetailUpdate = null;
        String aid = null;
        CreateAlertRule201Response response = api.createAlertRule(ruleDetailUpdate, aid);
        // TODO: test validations
    }

    /**
     * Delete alert rule
     *
     * Deletes an alert rule from your account. Users must have both &#x60;Edit alert rules&#x60; and &#x60;Edit tests&#x60; permissions,  especially if the rule is linked to any tests. Without these permissions, an error occurs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAlertRuleTest() throws ApiException {
        String ruleId = null;
        String aid = null;
        api.deleteAlertRule(ruleId, aid);
        // TODO: test validations
    }

    /**
     * Retrieve alert rule
     *
     * Returns detailed information about an alert rule using the &#x60;ruleId&#x60;. If the &#x60;ruleId&#x60; doesnâ€™t exist or is inaccessible by your account, an empty response is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlertRuleDetailsTest() throws ApiException {
        String ruleId = null;
        String aid = null;
        GetAlertRuleDetails200Response response = api.getAlertRuleDetails(ruleId, aid);
        // TODO: test validations
    }

    /**
     * List alert rules
     *
     * Returns a list of alert rules. Default rules for each test type are indicated with a boolean response (true or false); these default alert rules automatically apply to their respective test types.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlertsRulesTest() throws ApiException {
        String aid = null;
        GetAlertsRules200Response response = api.getAlertsRules(aid);
        // TODO: test validations
    }

    /**
     * Update alert rule
     *
     * Modifies an existing alert rule in your account, using the provided POST data. The &#x60;Edit alert rules&#x60; permission is required to modify an alert rule.  Note: Assigning an alert rule to a test during creation requires the &#x60;Edit tests&#x60; permission.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAlertRuleTest() throws ApiException {
        String ruleId = null;
        RuleDetailUpdate ruleDetailUpdate = null;
        String aid = null;
        CreateAlertRule201Response response = api.updateAlertRule(ruleId, ruleDetailUpdate, aid);
        // TODO: test validations
    }

}
