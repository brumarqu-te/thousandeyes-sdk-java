/*
 * Test Results API
 * Get test result metrics for Cloud and Enterprise Agent tests.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api;

import com.thousandeyes.ApiException;
import com.thousandeyes.api.model.Error;
import com.thousandeyes.api.model.GetTestResultPageLoad200Response;
import com.thousandeyes.api.model.GetTestResultPageLoadComponentDetail200Response;
import java.time.OffsetDateTime;
import com.thousandeyes.api.model.UnauthorizedError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebPageLoadTestMetricsApi
 */
@Disabled
public class WebPageLoadTestMetricsApiTest {

    private final WebPageLoadTestMetricsApi api = new WebPageLoadTestMetricsApi();

    /**
     * Get page load server test results
     *
     * Returns results for page load server tests with a focus on page load times and DOM for a web page. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestResultPageLoadTest() throws ApiException {
        String testId = null;
        String aid = null;
        String window = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String cursor = null;
        GetTestResultPageLoad200Response response = api.getTestResultPageLoad(testId, aid, window, startDate, endDate, cursor);
        // TODO: test validations
    }

    /**
     * Get page load server test results by agent and round
     *
     * Returns test results for a given agent and round in [HAR (http archive)](http://www.softwareishard.com/blog/har-12-spec/) format. These results contain a list of components and their load times in a page load test, similar to the waterfall view for a page load test. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestResultPageLoadComponentDetailTest() throws ApiException {
        String testId = null;
        String agentId = null;
        String roundId = null;
        String aid = null;
        GetTestResultPageLoadComponentDetail200Response response = api.getTestResultPageLoadComponentDetail(testId, agentId, roundId, aid);
        // TODO: test validations
    }

}
