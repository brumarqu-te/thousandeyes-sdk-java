/*
 * Usage API
 * ## Overview These usage endpoints define the following operations: * **Usage**: Retrieve usage data for the specified time period (default is one month).          * Users must have the `View Billing` permission to access this endpoint.     * This endpoint offers visibility across all account groups within the organization.     * Users with `View Billing` permission in multiple organizations should query the endpoint with the `aid` query string parameter (see optional parameters) for each organization.  * **Quotas**: Obtain organization and account usage quotas. Additionally, users with the appropriate permissions can create, update, or delete these quotas.          * Users must have the necessary permissions to perform quota-related actions.  Refer to the API definitions below for detailed usage instructions and optional parameters.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.thousandeyes.JSON;

/**
 * UsageUsageQuota
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-30T09:45:30.044048Z[Europe/London]")
public class UsageUsageQuota {
  public static final String SERIALIZED_NAME_MONTH_START = "monthStart";
  @SerializedName(SERIALIZED_NAME_MONTH_START)
  private OffsetDateTime monthStart;

  public static final String SERIALIZED_NAME_MONTH_END = "monthEnd";
  @SerializedName(SERIALIZED_NAME_MONTH_END)
  private OffsetDateTime monthEnd;

  public static final String SERIALIZED_NAME_CLOUD_UNITS_INCLUDED = "cloudUnitsIncluded";
  @SerializedName(SERIALIZED_NAME_CLOUD_UNITS_INCLUDED)
  private Long cloudUnitsIncluded;

  public static final String SERIALIZED_NAME_ENDPOINT_AGENTS_INCLUDED = "endpointAgentsIncluded";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_AGENTS_INCLUDED)
  private Long endpointAgentsIncluded;

  public static final String SERIALIZED_NAME_ENDPOINT_AGENTS_ESSENTIALS_INCLUDED = "endpointAgentsEssentialsIncluded";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_AGENTS_ESSENTIALS_INCLUDED)
  private Long endpointAgentsEssentialsIncluded;

  public static final String SERIALIZED_NAME_ENDPOINT_AGENTS_EMBEDDED_INCLUDED = "endpointAgentsEmbeddedIncluded";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_AGENTS_EMBEDDED_INCLUDED)
  private Long endpointAgentsEmbeddedIncluded;

  public static final String SERIALIZED_NAME_ENTERPRISE_AGENTS_INCLUDED = "enterpriseAgentsIncluded";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_AGENTS_INCLUDED)
  private Long enterpriseAgentsIncluded;

  public UsageUsageQuota() {
  }

  public UsageUsageQuota monthStart(OffsetDateTime monthStart) {
    
    this.monthStart = monthStart;
    return this;
  }

   /**
   * Beginning of usage period in UTC (ISO date-time format).
   * @return monthStart
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getMonthStart() {
    return monthStart;
  }


  public void setMonthStart(OffsetDateTime monthStart) {
    this.monthStart = monthStart;
  }


  public UsageUsageQuota monthEnd(OffsetDateTime monthEnd) {
    
    this.monthEnd = monthEnd;
    return this;
  }

   /**
   * End of usage period in UTC (ISO date-time format)..
   * @return monthEnd
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getMonthEnd() {
    return monthEnd;
  }


  public void setMonthEnd(OffsetDateTime monthEnd) {
    this.monthEnd = monthEnd;
  }


  public UsageUsageQuota cloudUnitsIncluded(Long cloudUnitsIncluded) {
    
    this.cloudUnitsIncluded = cloudUnitsIncluded;
    return this;
  }

   /**
   * Monthly number of cloud units allocated, as part of the contract.
   * @return cloudUnitsIncluded
  **/
  @javax.annotation.Nullable
  public Long getCloudUnitsIncluded() {
    return cloudUnitsIncluded;
  }


  public void setCloudUnitsIncluded(Long cloudUnitsIncluded) {
    this.cloudUnitsIncluded = cloudUnitsIncluded;
  }


  public UsageUsageQuota endpointAgentsIncluded(Long endpointAgentsIncluded) {
    
    this.endpointAgentsIncluded = endpointAgentsIncluded;
    return this;
  }

   /**
   * Monthly number of endpoint agents allocated, as part of the contract.
   * @return endpointAgentsIncluded
  **/
  @javax.annotation.Nullable
  public Long getEndpointAgentsIncluded() {
    return endpointAgentsIncluded;
  }


  public void setEndpointAgentsIncluded(Long endpointAgentsIncluded) {
    this.endpointAgentsIncluded = endpointAgentsIncluded;
  }


  public UsageUsageQuota endpointAgentsEssentialsIncluded(Long endpointAgentsEssentialsIncluded) {
    
    this.endpointAgentsEssentialsIncluded = endpointAgentsEssentialsIncluded;
    return this;
  }

   /**
   * Monthly number of endpoint agents essentials allocated, as part of the contract.
   * @return endpointAgentsEssentialsIncluded
  **/
  @javax.annotation.Nullable
  public Long getEndpointAgentsEssentialsIncluded() {
    return endpointAgentsEssentialsIncluded;
  }


  public void setEndpointAgentsEssentialsIncluded(Long endpointAgentsEssentialsIncluded) {
    this.endpointAgentsEssentialsIncluded = endpointAgentsEssentialsIncluded;
  }


  public UsageUsageQuota endpointAgentsEmbeddedIncluded(Long endpointAgentsEmbeddedIncluded) {
    
    this.endpointAgentsEmbeddedIncluded = endpointAgentsEmbeddedIncluded;
    return this;
  }

   /**
   * Number of embedded endpoint agents allocated monthly, as specified in the contract.
   * @return endpointAgentsEmbeddedIncluded
  **/
  @javax.annotation.Nullable
  public Long getEndpointAgentsEmbeddedIncluded() {
    return endpointAgentsEmbeddedIncluded;
  }


  public void setEndpointAgentsEmbeddedIncluded(Long endpointAgentsEmbeddedIncluded) {
    this.endpointAgentsEmbeddedIncluded = endpointAgentsEmbeddedIncluded;
  }


  public UsageUsageQuota enterpriseAgentsIncluded(Long enterpriseAgentsIncluded) {
    
    this.enterpriseAgentsIncluded = enterpriseAgentsIncluded;
    return this;
  }

   /**
   * Monthly number of enterprise agents allocated, as part of the contract. Returns non-zero value only for organizations with legacy billing.
   * @return enterpriseAgentsIncluded
  **/
  @javax.annotation.Nullable
  public Long getEnterpriseAgentsIncluded() {
    return enterpriseAgentsIncluded;
  }


  public void setEnterpriseAgentsIncluded(Long enterpriseAgentsIncluded) {
    this.enterpriseAgentsIncluded = enterpriseAgentsIncluded;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageUsageQuota usageUsageQuota = (UsageUsageQuota) o;
    return Objects.equals(this.monthStart, usageUsageQuota.monthStart) &&
        Objects.equals(this.monthEnd, usageUsageQuota.monthEnd) &&
        Objects.equals(this.cloudUnitsIncluded, usageUsageQuota.cloudUnitsIncluded) &&
        Objects.equals(this.endpointAgentsIncluded, usageUsageQuota.endpointAgentsIncluded) &&
        Objects.equals(this.endpointAgentsEssentialsIncluded, usageUsageQuota.endpointAgentsEssentialsIncluded) &&
        Objects.equals(this.endpointAgentsEmbeddedIncluded, usageUsageQuota.endpointAgentsEmbeddedIncluded) &&
        Objects.equals(this.enterpriseAgentsIncluded, usageUsageQuota.enterpriseAgentsIncluded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(monthStart, monthEnd, cloudUnitsIncluded, endpointAgentsIncluded, endpointAgentsEssentialsIncluded, endpointAgentsEmbeddedIncluded, enterpriseAgentsIncluded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageUsageQuota {\n");
    sb.append("    monthStart: ").append(toIndentedString(monthStart)).append("\n");
    sb.append("    monthEnd: ").append(toIndentedString(monthEnd)).append("\n");
    sb.append("    cloudUnitsIncluded: ").append(toIndentedString(cloudUnitsIncluded)).append("\n");
    sb.append("    endpointAgentsIncluded: ").append(toIndentedString(endpointAgentsIncluded)).append("\n");
    sb.append("    endpointAgentsEssentialsIncluded: ").append(toIndentedString(endpointAgentsEssentialsIncluded)).append("\n");
    sb.append("    endpointAgentsEmbeddedIncluded: ").append(toIndentedString(endpointAgentsEmbeddedIncluded)).append("\n");
    sb.append("    enterpriseAgentsIncluded: ").append(toIndentedString(enterpriseAgentsIncluded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("monthStart");
    openapiFields.add("monthEnd");
    openapiFields.add("cloudUnitsIncluded");
    openapiFields.add("endpointAgentsIncluded");
    openapiFields.add("endpointAgentsEssentialsIncluded");
    openapiFields.add("endpointAgentsEmbeddedIncluded");
    openapiFields.add("enterpriseAgentsIncluded");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UsageUsageQuota
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UsageUsageQuota.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsageUsageQuota is not found in the empty JSON string", UsageUsageQuota.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UsageUsageQuota.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UsageUsageQuota` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsageUsageQuota.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsageUsageQuota' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsageUsageQuota> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsageUsageQuota.class));

       return (TypeAdapter<T>) new TypeAdapter<UsageUsageQuota>() {
           @Override
           public void write(JsonWriter out, UsageUsageQuota value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UsageUsageQuota read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UsageUsageQuota given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UsageUsageQuota
  * @throws IOException if the JSON string is invalid with respect to UsageUsageQuota
  */
  public static UsageUsageQuota fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsageUsageQuota.class);
  }

 /**
  * Convert an instance of UsageUsageQuota to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

