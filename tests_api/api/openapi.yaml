openapi: 3.0.1
info:
  description: |2-

    ### Overview
    This API supports listing, creating, editing, and deleting Cloud and Enterprise Agent (CEA) based tests.
  title: Tests API
  version: 7.0.0
externalDocs:
  description: Find out more about Cloud and Enterprise Agent-Based Tests
  url: https://docs.thousandeyes.com/product-documentation/internet-and-wan-monitoring/tests#cloud-and-enterprise-agent-based-tests
servers:
- description: Thousandeyes API production URL
  url: https://api.thousandeyes.com
security:
- BearerAuth:
  - read
tags:
- description: Get all tests
  name: All Test Types
- description: Agent to Server test management operations
  name: Agent to Server
- description: Agent to Agent test management operations
  name: Agent to Agent
- description: BGP test management operations
  name: BGP
- description: DNS Server test management operations
  name: DNS Server
- description: DNS Trace test management operations
  name: DNS Trace
- description: DNSSEC test management operations
  name: DNSSEC
- description: HTTP Server test management operations
  name: HTTP Server
- description: Page Load test management operations
  name: Page Load
- description: Web Transactions test management operations
  name: Web Transaction
- description: FTP Server test management operations
  name: FTP Server
- description: SIP Server test management operations
  name: SIP Server
paths:
  /v7/tests:
    get:
      description: Returns configured tests and saved events.
      operationId: getTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List configured tests
      tags:
      - All Test Types
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/bgp:
    get:
      description: Returns a list of BGP tests and saved events.
      operationId: getBgpTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBgpTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List BGP tests
      tags:
      - BGP
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new BGP test. This method requires Account Admin permissions.
      operationId: createBgpTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBgpTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BgpTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create BGP test
      tags:
      - BGP
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/bgp/{testId}:
    delete:
      description: Deletes a BGP test. This method requires Account Admin permissions.
      operationId: deleteBgpTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete BGP test
      tags:
      - BGP
      x-accepts: application/json
    get:
      description: "Returns details for a BGP test, including name, intervals, targets,\
        \ alert rules and agents."
      operationId: getBgpTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBgpTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get BGP test
      tags:
      - BGP
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a BGP test. This method requires Account Admin permissions.
        The target test cannot be a live share or saved event.
      operationId: updateBgpTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBgpTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBgpTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update BGP test
      tags:
      - BGP
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/agent-to-server:
    get:
      description: Returns a list of Agent to Server tests and saved events.
      operationId: getAgentToServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAgentToServerTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Agent to Server tests
      tags:
      - Agent to Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new Agent to Server test. This method requires Account
        Admin permissions.
      operationId: createAgentToServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgentToServerTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToServerTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Agent to Server test
      tags:
      - Agent to Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/agent-to-server/{testId}:
    delete:
      description: Deletes an Agent to Server test. This method requires Account Admin
        permissions.
      operationId: deleteAgentToServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Agent to Server test
      tags:
      - Agent to Server
      x-accepts: application/json
    get:
      description: "Returns details for a Agent to Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getAgentToServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAgentToServerTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Agent to Server test
      tags:
      - Agent to Server
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates an Agent to Server test. This method requires Account Admin
        permissions.
      operationId: updateAgentToServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgentToServerTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAgentToServerTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Agent to Server test
      tags:
      - Agent to Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/agent-to-agent:
    get:
      description: Returns a list of Agent to Agent tests and saved events.
      operationId: getAgentToAgentTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAgentToAgentTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Agent to Agent tests
      tags:
      - Agent to Agent
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new Agent to Agent test. This method requires Account
        Admin permissions.
      operationId: createAgentToAgentTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgentToAgentTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToAgentTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Agent to Agent test
      tags:
      - Agent to Agent
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/agent-to-agent/{testId}:
    delete:
      description: Deletes the specified Agent to Agent test. This method requires
        Account Admin permissions.
      operationId: deleteAgentToAgentTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Agent to Agent test
      tags:
      - Agent to Agent
      x-accepts: application/json
    get:
      description: "Returns details for a Agent to Agent test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getAgentToAgentTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAgentToAgentTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Agent to Agent test
      tags:
      - Agent to Agent
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a Agent to Agent test. This method requires Account Admin
        permissions.
      operationId: updateAgentToAgentTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgentToAgentTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAgentToAgentTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Agent to Agent test
      tags:
      - Agent to Agent
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dns-server:
    get:
      description: Returns a list of all DNS Server tests and saved events.
      operationId: getDNSServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDNSServerTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List DNS Server tests
      tags:
      - DNS Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new DNS Server test. This method requires Account Admin
        permissions.
      operationId: createDNSServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDnsServerTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsServerTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNS Server test
      tags:
      - DNS Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dns-server/{testId}:
    delete:
      description: 'Deletes the specified DNS Server test. This method requires Account
        Admin permissions. '
      operationId: deleteDnsServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete DNS Server test
      tags:
      - DNS Server
      x-accepts: application/json
    get:
      description: "Returns details for a DNS Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getDNSServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDNSServerTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get DNS Server test
      tags:
      - DNS Server
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a DNS Server test. The target test cannot be a live share
        or saved event. This method requires Account Admin permissions.
      operationId: updateDNSServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDnsServerTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDNSServerTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update DNS Server test
      tags:
      - DNS Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dns-trace:
    get:
      description: Returns a list of all DNS Trace tests and saved events.
      operationId: getDnsTraceTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDnsTraceTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List DNS Trace tests
      tags:
      - DNS Trace
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: 'Creates a new DNS Trace test. This method requires Account Admin
        permissions. '
      operationId: createDnsTraceTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDnsTraceTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsTraceTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNS Trace test
      tags:
      - DNS Trace
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dns-trace/{testId}:
    delete:
      description: 'Deletes the specified DNS Trace test. This method requires Account
        Admin permissions. '
      operationId: deleteDnsTraceTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete DNS Trace test
      tags:
      - DNS Trace
      x-accepts: application/json
    get:
      description: "Returns details for a DNS Trace test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getDnsTraceTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDnsTraceTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get DNS Trace test
      tags:
      - DNS Trace
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: 'Updates a DNS Trace test. The target test cannot be a live share
        or saved event. This method requires Account Admin permissions. '
      operationId: updateDnsTraceTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDnsTraceTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDnsTraceTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update DNS Trace test
      tags:
      - DNS Trace
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dnssec:
    get:
      description: Returns a list of all DNS Sec tests and saved events.
      operationId: getDnsSecTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDnsSecTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List DNS Sec tests
      tags:
      - DNSSEC
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: 'Creates a new DNSSEC test. This method requires Account Admin
        permissions. '
      operationId: createDnsSecTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDnsSecTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsSecTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNSSEC test
      tags:
      - DNSSEC
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dnssec/{testId}:
    delete:
      description: Deletes the specified DNSSEC test. This method requires Account
        Admin permissions.
      operationId: deleteDnsSecTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete DNSSEC test
      tags:
      - DNSSEC
      x-accepts: application/json
    get:
      description: "Returns details for a DNSSEC test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getDnsSecTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDnsSecTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get DNSSEC test
      tags:
      - DNSSEC
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a DNSSEC test. The target test cannot be a live share or
        saved event. This method requires Account Admin permissions.
      operationId: updateDnsSecTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDnsSecTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDnsSecTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update DNSSEC test
      tags:
      - DNSSEC
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/http-server:
    get:
      description: Returns a list of all HTTP Server tests and saved events.
      operationId: getHttpServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getHttpServerTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List HTTP Server tests
      tags:
      - HTTP Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: 'Creates a new HTTP Server test. This method requires Account Admin
        permissions. '
      operationId: createHttpServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHttpServerTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HttpServerTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create HTTP Server test
      tags:
      - HTTP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/http-server/{testId}:
    delete:
      description: Deletes the specified HTTP Server test. This method requires Account
        Admin permissions.
      operationId: deleteHttpServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete HTTP Server test
      tags:
      - HTTP Server
      x-accepts: application/json
    get:
      description: "Returns details for a HTTP Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getHttpServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getHttpServerTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get HTTP Server test
      tags:
      - HTTP Server
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a HTTP Server test. The target test cannot be a live share
        or saved event. This method requires Account Admin permissions.
      operationId: updateHttpServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHttpServerTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getHttpServerTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update HTTP Server test
      tags:
      - HTTP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/page-load:
    get:
      description: Returns a list of all Page Load tests and saved events.
      operationId: getPageLoadTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPageLoadTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Page Load tests
      tags:
      - Page Load
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new Page Load test. This method requires Account Admin
        permissions.
      operationId: createPageLoadTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePageLoadTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageLoadTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Page Load test
      tags:
      - Page Load
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/page-load/{testId}:
    delete:
      description: 'Deletes the specified Page Load test. This method requires Account
        Admin permissions. '
      operationId: deletePageLoadTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Page Load test
      tags:
      - Page Load
      x-accepts: application/json
    get:
      description: "Returns details for a Page Load test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getPageLoadTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPageLoadTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Page Load test
      tags:
      - Page Load
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a Page Load test. The target test cannot be a live share
        or saved event. This method requires Account Admin permissions.
      operationId: updatePageLoadTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePageLoadTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPageLoadTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Page Load test
      tags:
      - Page Load
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/web-transactions:
    get:
      description: Returns a list of all Web Transactions tests and saved events.
      operationId: getWebTransactionsTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getWebTransactionsTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Web Transactions tests
      tags:
      - Web Transaction
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new Web Transactions test. This method requires Account
        Admin permissions.
      operationId: createWebTransactionsTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebTransactionTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WebTransactionTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Web Transactions test
      tags:
      - Web Transaction
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/web-transactions/{testId}:
    delete:
      description: Deletes the specified Web Transactions test. This method requires
        Account Admin permissions.
      operationId: deleteWebTransactionsTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Web Transactions test
      tags:
      - Web Transaction
      x-accepts: application/json
    get:
      description: "Returns details for a Web Transactions test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getWebTransactionsTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getWebTransactionsTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Web Transactions test
      tags:
      - Web Transaction
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a Web Transactions test. The target test cannot be a live
        share or saved event. This method requires Account Admin permissions.
      operationId: updateWebTransactionsTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebTransactionTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getWebTransactionsTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Web Transactions test
      tags:
      - Web Transaction
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/ftp-server:
    get:
      description: Returns a list of FTP Server tests and saved events.
      operationId: getFtpServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFtpServerTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List FTP Server tests
      tags:
      - FTP Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new FTP Server test. This method requires Account Admin
        permissions.
      operationId: createFtpServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFtpServerTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FtpServerTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create FTP Server test
      tags:
      - FTP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/ftp-server/{testId}:
    delete:
      description: Deletes the specified FTP Server test. This method requires Account
        Admin permissions.
      operationId: deleteFTPServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Delete FTP Server test
      tags:
      - FTP Server
      x-accepts: application/json
    get:
      description: "Returns details for a FTP Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getFtpServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFtpServerTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get FTP Server test
      tags:
      - FTP Server
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a FTP Server test. The target test cannot be a live share
        or saved event. This method requires Account Admin permissions.
      operationId: updateFtpServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFtpServerTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFtpServerTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update FTP Server test
      tags:
      - FTP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/sip-server:
    get:
      description: Returns a list of SIP Server tests and saved events.
      operationId: getSipServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSipServerTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List SIP Server tests
      tags:
      - SIP Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new SIP Server test. This method requires Account Admin
        permissions.
      operationId: createSipServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSipServerTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SipServerTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create SIP Server test
      tags:
      - SIP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/sip-server/{testId}:
    delete:
      description: Deletes the specified SIP Server test. This method requires Account
        Admin permissions.
      operationId: deleteSipServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Delete SIP Server test
      tags:
      - SIP Server
      x-accepts: application/json
    get:
      description: "Returns details for a SIP Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getSipServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSipServerTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get SIP Server test
      tags:
      - SIP Server
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a SIP Server test. The target test cannot be a live share
        or saved event. This method requires Account Admin permissions.
      operationId: updateSipServerTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSipServerTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSipServerTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update SIP Server test
      tags:
      - SIP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/voice:
    get:
      description: Returns a list of Voice tests and saved events.
      operationId: getVoiceTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getVoiceTests_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Voice tests
      tags:
      - Voice
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new Voice test. This method requires Account Admin permissions.
      operationId: createVoiceTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceTest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoiceTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Voice test
      tags:
      - Voice
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/voice/{testId}:
    delete:
      description: Deletes the specified Voice test. This method requires Account
        Admin permissions.
      operationId: deleteVoiceTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Voice test
      tags:
      - Voice
      x-accepts: application/json
    get:
      description: "Returns details for a Voice test, including name, intervals, targets,\
        \ alert rules and agents."
      operationId: getVoiceTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getVoiceTest_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Voice test
      tags:
      - Voice
      x-accepts: "application/hal+json,application/problem+json"
    put:
      description: Updates a Voice test. The target test cannot be a live share or
        saved event. This method requires Account Admin permissions.
      operationId: updateVoiceTest
      parameters:
      - description: ID of the test
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceTest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getVoiceTest_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Voice test
      tags:
      - Voice
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/network/path-vis/interface-groups:
    get:
      description: "Returns a list of all path visualization interface groups. For\
        \ more information about interface groups, see https://docs.thousandeyes.com/product-documentation/end-user-monitoring/viewing-data/endpoint-agent-views-reference#grouping."
      operationId: getPathVisInterfaceGroups
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPathVisInterfaceGroups_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List interface groups for path visualization
      tags:
      - Path Visualization Interface Groups
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: Creates a new path visualization interface group.
      operationId: createPathVisInterfaceGroups
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceGroup'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InterfaceGroup'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create interface group for path visualization
      tags:
      - Path Visualization Interface Groups
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/network/path-vis/interface-groups/{interfaceGroupId}:
    delete:
      description: Deletes a path visualization interface group.
      operationId: deletePathVisInterfaceGroup
      parameters:
      - description: ID of the network path vis interface group
        explode: false
        in: path
        name: interfaceGroupId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete interface group
      tags:
      - Path Visualization Interface Groups
      x-accepts: application/json
    put:
      description: Updates a path visualization interface group..
      operationId: updatePathVisInterfaceGroup
      parameters:
      - description: ID of the network path vis interface group
        explode: false
        in: path
        name: interfaceGroupId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceGroup'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/updatePathVisInterfaceGroup_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update interface group
      tags:
      - Path Visualization Interface Groups
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
components:
  headers:
    Location:
      description: The absolute path to created resource.
      schema:
        example: https://api.thousandeyes.com/v7/link/to/resource/id
        format: uri
        type: string
  parameters:
    TestIdPath:
      description: ID of the test
      explode: false
      in: path
      name: testId
      required: true
      schema:
        example: "281474976710706"
        type: string
      style: simple
    InterfaceGroupId:
      description: ID of the network path vis interface group
      explode: false
      in: path
      name: interfaceGroupId
      required: true
      schema:
        example: "281474976710706"
        type: string
      style: simple
    expand:
      description: "Optional parameter on whether or not to expand the test sub-resources.\
        \ By default no expansion is going to take place if the query parameter is\
        \ not present. If the user wishes to expand the `agents` sub-resource, they\
        \ need to pass the `?expand=agent` query."
      explode: false
      in: query
      name: expand
      required: false
      schema:
        example:
        - agent
        - monitor
        items:
          $ref: '#/components/schemas/Expand'
        type: array
      style: form
    AccountGroupId:
      description: A unique identifier associated with your account group. You can
        retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note that
        you must be assigned to the target account group. Specifying this parameter
        without being assigned to the target account group will result in an error
        response.
      in: query
      name: aid
      required: false
      schema:
        example: "2067"
        type: string
  responses:
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Insufficient permissions to query endpoint
    "404":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: URI Resource Not Found
            status: 404
            detail: Details explaining if the 404 error is related to an invalid URI
              or a wrong ID
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Not found
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Exhausted rate limit for the organization
    "500":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Internal server error
            status: 500
            detail: Optional detail about the internal error message.
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    "502":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Gateway
    GeneralError:
      description: An error occurred
    "400":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Request validation failed. There are invalid or missing fields
            status: 400
            detail: Invalid field value for field `expand`
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    "204":
      content:
        application/json: {}
      description: No content
  schemas:
    Expand:
      enum:
      - agent
      - alert-rule
      - monitor
      - label
      - shared-with-account
      type: string
    Tests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/SimpleTest'
          type: array
      type: object
    TestRequest:
      allOf:
      - $ref: '#/components/schemas/BaseRequest'
      - properties:
          agents:
            description: Contains list of object with required `agentId` and optional
              `sourceIpAddress`
            items:
              $ref: '#/components/schemas/TestRequest_allOf_agents'
            readOnly: false
            type: array
            writeOnly: true
        type: object
    BaseRequest:
      properties:
        labels:
          description: Contains list of test label IDs (get `labelId` from `/labels`
            endpoint)
          example:
          - "9842"
          - "1283"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
        sharedWithAccounts:
          description: Contains list of account group IDs. Test is shared with the
            listed account groups (get `aid` from `/account-groups` endpoint)
          example:
          - "2087"
          - "100"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
        alertRules:
          description: "List of alert rules IDs to apply to the test (get `ruleId`\
            \ from `/alerts/rules` endpoint. If `alertsEnabled` is set to `true` and\
            \ `alertRules` is not included on test creation or update, applicable\
            \ user default alert rules will be used)"
          example:
          - "344753"
          - "212697"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
      type: object
    MonitorsRequest:
      properties:
        monitors:
          description: Contains list of BGP monitor IDs (get `monitorId` from `/monitors`
            endpoint)
          example:
          - "17410"
          - "5"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
      type: object
    BgpTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/BgpTest'
          type: array
      type: object
    UpdateBgpTest:
      allOf:
      - $ref: '#/components/schemas/BgpTest'
      - $ref: '#/components/schemas/BaseRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    AgentToServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/AgentToServerTest'
          type: array
      type: object
    UpdateAgentToServerTest:
      allOf:
      - $ref: '#/components/schemas/AgentToServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    AgentToAgentTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/AgentToAgentTest'
          type: array
      type: object
    UpdateAgentToAgentTest:
      allOf:
      - $ref: '#/components/schemas/AgentToAgentTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    DnsServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/DnsServerTest'
          type: array
      type: object
    UpdateDnsServerTest:
      allOf:
      - $ref: '#/components/schemas/DnsServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    DnsTraceTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/DnsTraceTest'
          type: array
      type: object
    UpdateDnsTraceTest:
      allOf:
      - $ref: '#/components/schemas/DnsTraceTest'
      - $ref: '#/components/schemas/TestRequest'
    DnsSecTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/DnsSecTest'
          type: array
      type: object
    UpdateDnsSecTest:
      allOf:
      - $ref: '#/components/schemas/DnsSecTest'
      - $ref: '#/components/schemas/TestRequest'
    HttpServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/HttpServerTest'
          type: array
      type: object
    UpdateHttpServerTest:
      allOf:
      - $ref: '#/components/schemas/HttpServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    PageLoadTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/PageLoadTest'
          type: array
      type: object
    UpdatePageLoadTest:
      allOf:
      - $ref: '#/components/schemas/PageLoadTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    WebTransactionTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/WebTransactionTest'
          type: array
      type: object
    UpdateWebTransactionTest:
      allOf:
      - $ref: '#/components/schemas/WebTransactionTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    FtpServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/FtpServerTest'
          type: array
      type: object
    UpdateFtpServerTest:
      allOf:
      - $ref: '#/components/schemas/FtpServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    SipServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/SipServerTest'
          type: array
      type: object
    UpdateSipServerTest:
      allOf:
      - $ref: '#/components/schemas/SipServerTest'
      - $ref: '#/components/schemas/TestRequest'
    VoiceTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/VoiceTest'
          type: array
      type: object
    UpdateVoiceTest:
      allOf:
      - $ref: '#/components/schemas/VoiceTest'
      - $ref: '#/components/schemas/TestRequest'
    InterfaceGroups:
      properties:
        pathVisInterfaceGroups:
          items:
            $ref: '#/components/schemas/InterfaceGroup'
          type: array
      type: object
    InterfaceGroup:
      example:
        groupName: PathVis Interface Group
        rdnsRegexes:
        - aggr403b-1.iad3.rackspace.net
        - aggr403c-1.iad3.rackspace.net
        groupId: "281474976710706"
        ipAddresses:
        - 1.1.1.1
        - 8.8.8.8
        aid: "1123"
      properties:
        aid:
          description: Account Group Id
          example: "1123"
          readOnly: true
          type: string
        groupId:
          description: Group ID
          example: "281474976710706"
          readOnly: true
          type: string
        groupName:
          description: Name of the path visualization interface group
          example: PathVis Interface Group
          type: string
        ipAddresses:
          description: Array of IP addresses associated with the interface group
          example:
          - 1.1.1.1
          - 8.8.8.8
          items:
            type: string
          type: array
        rdnsRegexes:
          description: Array of RDNS Regexes associated with the interface group
          example:
          - aggr403b-1.iad3.rackspace.net
          - aggr403c-1.iad3.rackspace.net
          items:
            type: string
          readOnly: true
          type: array
      type: object
    SelfLinks:
      properties:
        _links:
          $ref: '#/components/schemas/SelfLinks__links'
      readOnly: true
      type: object
    Link:
      description: A hyperlink from the containing resource to a URI.
      properties:
        href:
          description: "Its value is either a URI [RFC3986] or a URI template [RFC6570]."
          example: https://api.thousandeyes.com/v7/link/to/resource/id
          type: string
        templated:
          description: Should be true when the link object's "href" property is a
            URI template.
          type: boolean
        type:
          description: Used as a hint to indicate the media type expected when dereferencing
            the target resource.
          type: string
        deprecation:
          description: Its presence indicates that the link is to be deprecated at
            a future date. Its value is a URL that should provide further information
            about the deprecation.
          type: string
        name:
          description: Its value may be used as a secondary key for selecting link
            objects that share the same relation type.
          type: string
        profile:
          description: A URI that hints about the profile of the target resource.
          type: string
        title:
          description: Intended for labelling the link with a human-readable identifier
          type: string
        hreflang:
          description: Indicates the language of the target resource
          type: string
      required:
      - href
      type: object
    UnauthorizedError:
      properties:
        error:
          example: invalid_token
          type: string
        error_description:
          example: Invalid access token
          type: string
      type: object
    Error:
      properties:
        type:
          description: "A URI reference that identifies the problem type. When this\
            \ member is not present, its value is assumed to be \"about:blank\"."
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem.
          type: string
      type: object
    BgpTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
          includeCoveredPrefixes:
            description: Indicate if queries for subprefixes detected under this prefix
              should included.
            example: true
            type: boolean
          prefix:
            description: "a.b.c.d is a network address, with the prefix length defined\
              \ as e. Prefixes can be any length from 8 to 24."
            type: string
          usePublicBGP:
            $ref: '#/components/schemas/TestUsePublicBgp'
          alertsEnabled:
            description: Indicates if alerts are enabled.
            example: true
            type: boolean
          alertRules:
            description: A list of enabled alert rule objects.
            items:
              $ref: '#/components/schemas/AlertRule'
            type: array
          createdBy:
            $ref: '#/components/schemas/TestCreatedBy'
          createdDate:
            $ref: '#/components/schemas/TestCreatedDate'
          type:
            example: bgp
            readOnly: true
            type: string
        required:
        - prefix
        type: object
    InstantTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - properties:
          labels:
            $ref: '#/components/schemas/TestLabels'
          sharedWithAccounts:
            $ref: '#/components/schemas/TestSharedAccounts'
        type: object
    UnexpandedInstantTest:
      properties:
        createdBy:
          description: User that created the test.
          example: user@user.com
          readOnly: true
          type: string
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: A description of the test.
          example: ThousandEyes Test
          type: string
        liveShare:
          description: Indicates if the test is shared with the account group.
          example: false
          readOnly: true
          type: boolean
        modifiedBy:
          description: User that modified the test.
          example: user@user.com
          readOnly: true
          type: string
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        savedEvent:
          description: Indicates if the test is a saved event.
          readOnly: true
          type: boolean
        testId:
          description: Each test is assigned an unique ID; this is used to access
            test information and results from other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        testName:
          description: The name of the test. Test name must be unique.
          example: ThousandEyes Test
          type: string
        type:
          $ref: '#/components/schemas/TestType'
        _links:
          $ref: '#/components/schemas/UnexpandedInstantTest__links'
      type: object
    TestCreatedBy:
      description: User that created the test.
      example: user@user.com
      readOnly: true
      type: string
    TestCreatedDate:
      description: UTC created date (ISO date-time format).
      example: 2022-07-17T22:00:54Z
      format: date-time
      readOnly: true
      type: string
    TestType:
      description: "This is a read only value, as test type is implicit in the test\
        \ creation url."
      enum:
      - agent-to-agent
      - agent-to-server
      - bgp
      - http-server
      - page-load
      - web-transactions
      - ftp-server
      - dns-trace
      - dns-server
      - dnssec
      - sip-server
      - voice
      example: agent-to-server
      readOnly: true
      type: string
    TestResults:
      description: Reference to the test results.
      items:
        $ref: '#/components/schemas/Link'
      type: array
    TestLabels:
      items:
        $ref: '#/components/schemas/TestLabels_inner'
      readOnly: true
      type: array
    TestSharedAccounts:
      items:
        $ref: '#/components/schemas/TestSharedAccounts_inner'
      readOnly: true
      type: array
    TestBgpMonitors:
      description: Contains list of enabled BGP monitors.
      items:
        $ref: '#/components/schemas/Monitor'
      readOnly: true
      type: array
    TestUsePublicBgp:
      description: Indicate if all available public BGP monitors should be used.
      example: false
      type: boolean
    AgentToServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/AgentToServerInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
        required:
        - interval
        type: object
    BaseTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - properties:
          alertRules:
            description: Contains list of enabled alert rule objects.
            items:
              $ref: '#/components/schemas/AlertRule'
            type: array
        type: object
    UnexpandedTest:
      properties:
        interval:
          $ref: '#/components/schemas/TestInterval'
        alertsEnabled:
          description: Indicates if alerts are enabled.
          example: true
          type: boolean
        enabled:
          default: true
          description: Test is enabled.
          example: true
          type: boolean
      type: object
    TestInterval:
      description: Interval between test runs in seconds.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1800
      - 3600
      example: 120
      type: integer
    AgentToServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          continuousMode:
            description: "To enable continuous monitoring, set this parameter to `true`\
              \ to. \nWhen continuous monitoring is enabled, the following actions\
              \ occur:\n* `fixedPacketRate` is enforced\n* `bandwidthMeasurements`\
              \ are disabled\n* If the `protocol` is set to `tcp`, `probeMode` is\
              \ set to `syn`.\n"
            example: false
            type: boolean
          fixedPacketRate:
            description: "If continuousMode is `false`, set the fixedPacketRate to\
              \ a value between 10-100. If `continuousMode` is `true`, set the `fixedPacketRate`\
              \ to `1`"
            example: 25
            maximum: 100
            minimum: 0
            type: integer
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          port:
            $ref: '#/components/schemas/TestPort'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          server:
            description: Target name or IP address.
            example: www.thousandeyes.com
            type: string
          dscp:
            $ref: '#/components/schemas/TestDscp'
          dscpId:
            $ref: '#/components/schemas/TestDscpId'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          pingPayloadSize:
            description: "Payload size (not total packet size) for the end-to-end\
              \ metric's probes, ping payload size allows values from 0 to 1400 bytes.\
              \ When set to null, payload sizes are 0 bytes for ICMP-based tests and\
              \ 1 byte for TCP-based tests."
            maximum: 1400
            minimum: 0
            type: integer
          networkMeasurements:
            default: false
            description: View packet loss in 1-second intervals. This is only available
              for 1-minute interval tests. Set to `true` to enable network measurements.
            type: boolean
          type:
            example: agent-to-server
            readOnly: true
            type: string
        required:
        - agents
        - server
        type: object
    TestAgents:
      description: Contains list of agents.
      items:
        $ref: '#/components/schemas/Agent'
      readOnly: true
      type: array
    TestBandwidthMeasurements:
      description: "Set to `true` to enable bandwidth measurements, only applies to\
        \ Enterprise agents assigned to the test."
      example: true
      type: boolean
    TestMtuMeasurements:
      description: Set `true` to measure MTU sizes on network from agents to the target.
      example: false
      type: boolean
    TestNumPathTraces:
      default: 3
      description: Number of path traces executed by the agent.
      maximum: 10
      minimum: 3
      type: integer
    TestPathTraceMode:
      default: classic
      description: Select `inSession` to perform the path trace within a TCP session.
      enum:
      - classic
      - in-session
      type: string
    TestPort:
      default: 49153
      description: Target port.
      maximum: 65535
      minimum: 1
      type: integer
    TestProbeMode:
      default: auto
      description: "Probe mode used by network test, only valid when the protocol\
        \ is set to TCP."
      enum:
      - auto
      - sack
      - syn
      type: string
    TestProtocol:
      default: tcp
      description: "Protocol used by dependent network tests (end-to-end, path trace,\
        \ PMTUD)."
      enum:
      - tcp
      - icmp
      type: string
    TestDscp:
      description: DSCP label.
      example: Best Effort (DSCP 0)
      readOnly: true
      type: string
    TestDscpId:
      default: "0"
      description: "DSCP ID [to see list for acceptable values](https://docs.thousandeyes.com/product-documentation/tests/dscp-options-in-network-tests)"
      enum:
      - "0"
      - "8"
      - "16"
      - "24"
      - "32"
      - "40"
      - "48"
      - "56"
      - "10"
      - "12"
      - "14"
      - "18"
      - "20"
      - "22"
      - "26"
      - "28"
      - "30"
      - "34"
      - "36"
      - "38"
      - "46"
      - "44"
      type: string
    TestIpv6Policy:
      default: use-agent-policy
      description: IP version policy. Overrides the IPv6 policy configured at the
        agent level.
      enum:
      - force-ipv4
      - prefer-ipv6
      - force-ipv6
      - use-agent-policy
      type: string
    TestBgpMeasurements:
      default: true
      description: Set to `true` to enable bgp measurements.
      type: boolean
    AgentToAgentTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/AgentToAgentInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
        required:
        - interval
        type: object
    AgentToAgentInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          direction:
            $ref: '#/components/schemas/TestDirection'
          dscp:
            $ref: '#/components/schemas/TestDscp'
          dscpId:
            $ref: '#/components/schemas/TestDscpId'
          mss:
            description: "Maximum segment size, in bytes."
            maximum: 1400
            minimum: 20
            type: integer
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          port:
            $ref: '#/components/schemas/TestPort'
          protocol:
            $ref: '#/components/schemas/AgentToAgentTestProtocol'
          targetAgentId:
            description: '`agentId` of the target agent for the test.'
            example: "2954"
            type: string
          throughputMeasurements:
            default: false
            description: Enable or disable throughput measurements. Throughput measurements
              cannot be enabled when the source or target of the test is a cloud agent.
            type: boolean
          throughputDuration:
            default: 10000
            description: The throughput duration.
            maximum: 30000
            minimum: 5000
            type: integer
          throughputRate:
            description: "The throughput rate, only applicable for UDP protocol."
            maximum: 1000
            minimum: 8
            type: integer
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: agent-to-agent
            readOnly: true
            type: string
        required:
        - agents
        - targetAgentId
        type: object
    TestDirection:
      default: to-target
      description: "Direction of the test, which affects how results are shown."
      enum:
      - to-target
      - from-target
      - bidirectional
      type: string
    AgentToAgentTestProtocol:
      default: tcp
      enum:
      - tcp
      - udp
      type: string
    TestFixedPacketRate:
      description: Sets packets rate sent to measure the network in packets per second.
      example: 50
      maximum: 100
      minimum: 0
      type: integer
    DnsServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/DnsServerInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
        required:
        - interval
        type: object
    DnsServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          dnsServers:
            items:
              $ref: '#/components/schemas/TestDnsServer'
            type: array
          dnsTransportProtocol:
            $ref: '#/components/schemas/TestDnsTransportProtocol'
          domain:
            $ref: '#/components/schemas/TestDomain'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          recursiveQueries:
            description: Set true to run query with RD (recursion desired) flag enabled.
            example: true
            type: boolean
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          dnsQueryClass:
            $ref: '#/components/schemas/DnsQueryClass'
          type:
            example: dns-server
            readOnly: true
            type: string
        required:
        - agents
        - dnsServers
        - domain
        type: object
    TestDnsServer:
      properties:
        serverId:
          description: Unique identifier of the DNS server.
          example: "1447"
          type: string
        serverName:
          description: Fully qualified domain name (FQDN) of DNS server.
          example: dns-example.net
          type: string
      type: object
    TestDnsTransportProtocol:
      default: udp
      description: Transport protocol used for DNS requests.
      enum:
      - udp
      - tcp
      type: string
    TestDomain:
      description: "The target record for the test, with the record type suffixed.\
        \ If no record type is specified, the test defaults to an ANY record."
      example: www.thousandeyes.com
      type: string
    TestNetworkMeasurements:
      default: true
      description: Enable or disable network measurements. Set to true to enable or
        false to disable network measurements.
      type: boolean
    DnsQueryClass:
      description: "Domain class used by this test. 'in' stands for Internet, while\
        \ 'ch' stands for Chaos."
      enum:
      - in
      - ch
      type: string
    DnsTraceTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/DnsTraceInstantTest'
      - required:
        - interval
        type: object
    DnsTraceInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          dnsTransportProtocol:
            $ref: '#/components/schemas/TestDnsTransportProtocol'
          domain:
            $ref: '#/components/schemas/TestDomain'
          dnsQueryClass:
            $ref: '#/components/schemas/DnsQueryClass'
          type:
            example: dns-trace
            readOnly: true
            type: string
        required:
        - agents
        - domain
        type: object
    DnsSecTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/DnsSecInstantTest'
      - required:
        - interval
        type: object
    DnsSecInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          domain:
            $ref: '#/components/schemas/TestDomain'
          dnsQueryClass:
            $ref: '#/components/schemas/DnsQueryClass'
          type:
            example: dnssec
            readOnly: true
            type: string
        required:
        - agents
        - domain
        type: object
    HttpServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/HttpServerInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
        required:
        - interval
        type: object
    HttpServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authType:
            $ref: '#/components/schemas/TestAuthType'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          clientCertificate:
            $ref: '#/components/schemas/TestClientCertificate'
          contentRegex:
            description: "Content regex, this field does not require escaping."
            example: (regex)+
            type: string
          headers:
            $ref: '#/components/schemas/TestHeaders'
          customHeaders:
            $ref: '#/components/schemas/TestCustomHeaders'
          desiredStatusCode:
            default: "200"
            description: Specify the HTTP status code value that indicates a successful
              response.
            type: string
          downloadLimit:
            description: Specifies maximum number of bytes to download from the target
              object.
            example: 2048
            type: integer
          dnsOverride:
            description: IP address to use for DNS override.
            example: 8.8.8.8
            format: ipv4
            type: string
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpTimeLimit:
            $ref: '#/components/schemas/TestHttpTimeLimit'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          includeHeaders:
            $ref: '#/components/schemas/TestIncludeHeaders'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          postBody:
            description: "Enter the body for the HTTP POST request in this field.\
              \ No special escaping is necessary. If the post body is provided with\
              \ content, the `requestMethod` is automatically set to POST."
            example: "{ \"example\" : \"value\"}"
            type: string
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          sslVersionId:
            $ref: '#/components/schemas/TestSslVersionId'
          url:
            $ref: '#/components/schemas/TestUrl'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
          username:
            $ref: '#/components/schemas/TestUsername'
          verifyCertificate:
            $ref: '#/components/schemas/TestVerifyCertificate'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to `false`."
            type: boolean
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: http-server
            readOnly: true
            type: string
        required:
        - agents
        - url
        type: object
    TestAuthType:
      default: none
      description: HTTP authentication type.
      enum:
      - none
      - basic
      - ntlm
      - kerberos
      type: string
    TestClientCertificate:
      description: "String representation (containing newline characters) of client\
        \ certificate, the private key must be placed first, then the certificate."
      example: |
        -----BEGIN PRIVATE KEY-----
        MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
        -----END PRIVATE KEY-----
        -----BEGIN CERTIFICATE-----
        MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
        -----END CERTIFICATE-----
      type: string
    TestHeaders:
      description: HTTP request headers used.
      example:
      - "header1: value1"
      - "header2: value2"
      items:
        type: string
      type: array
    TestCustomHeaders:
      example:
        root:
          header1: value1
        domains:
          domain1.com:
            header2: value2
        all:
          header3: value3
      properties:
        root:
          $ref: '#/components/schemas/TestCustomHeaders_root'
        domains:
          additionalProperties:
            $ref: '#/components/schemas/MapItem'
          description: Use these HTTP headers for the specified domains.
          type: object
        all:
          $ref: '#/components/schemas/TestCustomHeaders_all'
      type: object
    MapItem:
      properties:
        key:
          type: string
        value:
          type: string
    TestHttpTargetTime:
      description: "Target time for HTTP server completion, specified in milliseconds."
      example: 100
      maximum: 5000
      minimum: 100
      type: integer
    TestHttpTimeLimit:
      default: 5
      description: HTTP time limit in seconds.
      maximum: 60
      minimum: 5
      type: integer
    TestHttpVersion:
      default: 2
      description: "HTTP protocol version. Set to '2' to prefer HTTP/2, or '1' to\
        \ use only HTTP/1.1."
      maximum: 2
      minimum: 1
      type: integer
    TestIncludeHeaders:
      default: true
      description: Set to `true` to capture response headers for objects loaded by
        the test.
      type: boolean
    TestPassword:
      description: Password for Basic/NTLM authentication.
      example: password
      type: string
    TestSslVersion:
      description: Reflects the verbose SSL protocol version used by a test.
      example: Auto
      readOnly: true
      type: string
    TestSslVersionId:
      description: |
        SSL version options:

        * Use '0' for automatic selection.
        * Use '3' for SSLv3.
        * Use '4' for TLS v1.0.
        * Use '5' for TLS v1.1.
        * Use '6' for TLS v1.2.
      enum:
      - "0"
      - "3"
      - "4"
      - "5"
      - "6"
      example: "0"
      type: string
    TestUrl:
      description: Target for the test.
      example: www.thousandeyes.com
      type: string
    TestUseNtlm:
      description: "Set to true to use NTLM, false to use Basic Authentication. Requires\
        \ username and password to be set."
      example: false
      type: boolean
    TestUserAgent:
      description: User-agent string to be provided during the test.
      example: curl
      type: string
    TestUsername:
      description: Username for Basic/NTLM authentication.
      example: username
      type: string
    TestVerifyCertificate:
      default: false
      description: Ignore or acknowledge certificate errors. Set to false to ignore
        certificate errors.
      type: boolean
    PageLoadTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/PageLoadInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
          httpInterval:
            $ref: '#/components/schemas/TestHttpInterval'
          subinterval:
            $ref: '#/components/schemas/TestSubInterval'
        required:
        - httpInterval
        - interval
        type: object
    PageLoadInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authType:
            $ref: '#/components/schemas/TestAuthType'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          clientCertificate:
            $ref: '#/components/schemas/TestClientCertificate'
          contentRegex:
            description: Verify content using a regular expression. This field does
              not require escaping.
            example: (regex)+
            type: string
          customHeaders:
            $ref: '#/components/schemas/TestCustomHeaders'
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to false."
            type: boolean
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpTimeLimit:
            $ref: '#/components/schemas/TestHttpTimeLimit'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          includeHeaders:
            $ref: '#/components/schemas/TestIncludeHeaders'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pageLoadTargetTime:
            description: "Target time for page load completion, specified in seconds\
              \ and cannot exceed the `pageLoadTimeLimit`."
            example: 10
            maximum: 30
            minimum: 1
            type: integer
          pageLoadTimeLimit:
            default: 10
            description: Page load time limit. Must be larger than the `httpTimeLimit`.
            maximum: 60
            minimum: 5
            type: integer
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          sslVersionId:
            $ref: '#/components/schemas/TestSslVersionId'
          url:
            $ref: '#/components/schemas/TestUrl'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
          username:
            $ref: '#/components/schemas/TestUsername'
          verifyCertificate:
            $ref: '#/components/schemas/TestVerifyCertificate'
          blockDomains:
            $ref: '#/components/schemas/TestBlockDomains'
          disableScreenshot:
            $ref: '#/components/schemas/TestDisableScreenshot'
          allowMicAndCamera:
            $ref: '#/components/schemas/TestAllowMicAndCamera'
          allowGeolocation:
            $ref: '#/components/schemas/TestAllowGeolocation'
          browserLanguage:
            $ref: '#/components/schemas/TestBrowserLanguage'
          pageLoadingStrategy:
            $ref: '#/components/schemas/TestPageLoadingStrategy'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: page-load
            readOnly: true
            type: string
        required:
        - agents
        - url
        type: object
    TestBlockDomains:
      description: Domains or full object URLs to be excluded from metrics and waterfall
        data for transaction tests.
      example: domain.com/
      type: string
    TestDisableScreenshot:
      default: false
      description: Enables or disables screenshots on error. Set true to not capture
      type: boolean
    TestAllowMicAndCamera:
      default: false
      description: Set true allow the use of a fake mic and camera in the browser.
      type: boolean
    TestAllowGeolocation:
      default: false
      description: Set true to use the agent’s geolocation by the web page.
      type: boolean
    TestBrowserLanguage:
      description: Set one of the available browser language that you want to use
        to configure the browser.
      example: en-US
      type: string
    TestPageLoadingStrategy:
      default: normal
      description: "* `normal`: The test waits until the entire page is fully loaded,\
        \ including the downloading and parsing of HTML content as well as all associated\
        \ resources, before advancing to the next action in the transaction test script.\
        \ \n* `eager`: The test waits for the DOMContentLoaded event, indicating that\
        \ HTML content is downloaded and parsed, and the document reaches the \"interactive\"\
        \ readiness state, before proceeding to the next action in the test script.\n\
        * `none`: The test only waits for the download of HTML content. Once the HTML\
        \ is downloaded, the test continues to the next action in the transaction\
        \ test script without waiting for additional resources.\n"
      enum:
      - normal
      - eager
      - none
      type: string
    TestHttpInterval:
      description: HTTP test run interval. The interval between HTTP test runs in
        seconds cannot exceed the specified interval value and defaults to the same
        value as the interval if not set.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1800
      - 3600
      example: 120
      type: integer
    TestSubInterval:
      description: Subinterval for round-robin testing (in seconds). Must be less
        than or equal to interval and must evenly divide interval.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1200
      - 1800
      - 3600
      example: 60
      type: integer
    WebTransactionTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/WebTransactionInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
          subinterval:
            $ref: '#/components/schemas/TestSubInterval'
        required:
        - interval
        type: object
    WebTransactionInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authType:
            $ref: '#/components/schemas/TestAuthType'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          clientCertificate:
            $ref: '#/components/schemas/TestClientCertificate'
          contentRegex:
            description: Verify content using a regular expression. This field does
              not require escaping.
            example: (regex)+
            type: string
          credentials:
            description: Contains a list of credential IDs (get `credentialId` from
              `/credentials` endpoint).
            example:
            - "3247"
            - "1051"
            items:
              type: string
            type: array
          customHeaders:
            $ref: '#/components/schemas/TestCustomHeaders'
          desiredStatusCode:
            default: "200"
            description: Specify the HTTP status code value that indicates a successful
              response.
            type: string
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to false."
            type: boolean
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpTimeLimit:
            $ref: '#/components/schemas/TestHttpTimeLimit'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          includeHeaders:
            $ref: '#/components/schemas/TestIncludeHeaders'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          sslVersionId:
            $ref: '#/components/schemas/TestSslVersionId'
          targetTime:
            description: "Target time for completion, defaults to 50% of time limit\
              \ specified in seconds."
            example: 1
            maximum: 60
            minimum: 1
            type: integer
          timeLimit:
            default: 30
            description: Time limit for transaction in seconds.
            maximum: 180
            minimum: 5
            type: integer
          transactionScript:
            description: JavaScript of a web transaction test. Quotes must be escaped
              (precede " characters with \ ).
            example: "if (true) { return true; }"
            type: string
          url:
            $ref: '#/components/schemas/TestUrl'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
          username:
            $ref: '#/components/schemas/TestUsername'
          verifyCertificate:
            $ref: '#/components/schemas/TestVerifyCertificate'
          blockDomains:
            $ref: '#/components/schemas/TestBlockDomains'
          disableScreenshot:
            $ref: '#/components/schemas/TestDisableScreenshot'
          allowMicAndCamera:
            $ref: '#/components/schemas/TestAllowMicAndCamera'
          allowGeolocation:
            $ref: '#/components/schemas/TestAllowGeolocation'
          browserLanguage:
            $ref: '#/components/schemas/TestBrowserLanguage'
          pageLoadingStrategy:
            $ref: '#/components/schemas/TestPageLoadingStrategy'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: web-transactions
            readOnly: true
            type: string
        required:
        - agents
        - transactionScript
        - url
        type: object
    FtpServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/FtpServerInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
        required:
        - interval
        type: object
    FtpServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          downloadLimit:
            description: Specify maximum number of bytes to download from the target
              object.
            example: 1048576
            type: integer
          ftpTargetTime:
            description: Target time for operation completion; specified in milliseconds.
            maximum: 6000
            minimum: 1000
            type: integer
          ftpTimeLimit:
            default: 10
            description: Set the time limit for the test in seconds.
            maximum: 60
            minimum: 10
            type: integer
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          requestType:
            $ref: '#/components/schemas/FtpServerRequestType'
          url:
            $ref: '#/components/schemas/TestUrl'
          useActiveFtp:
            default: false
            description: Explicitly set the flag to use active FTP.
            type: boolean
          useExplicitFtps:
            description: "Use explicit FTPS (ftp over SSL). By default, tests will\
              \ autodetect when it is appropriate to use FTPS."
            example: false
            type: boolean
          username:
            $ref: '#/components/schemas/TestUsername'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          type:
            example: ftp-server
            readOnly: true
            type: string
        required:
        - agents
        - password
        - requestType
        - url
        - username
        type: object
    FtpServerRequestType:
      description: Set the type of activity for the test.
      enum:
      - download
      - upload
      - list
      type: string
    SipServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/SipServerInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
        required:
        - interval
        type: object
    SipServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authUser:
            description: Username for authentication with SIP server.
            example: username
            type: string
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          optionsRegex:
            description: "Options regex, this field does not require escaping."
            example: "[\"a-z\"]"
            type: string
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          port:
            $ref: '#/components/schemas/TestPort'
          protocol:
            $ref: '#/components/schemas/SipTestProtocol'
          registerEnabled:
            default: false
            description: Set to true to perform SIP registration on the test target
              with the SIP REGISTER command.
            type: boolean
          sipRegistrar:
            description: "SIP server to be tested, specified by domain name or IP\
              \ address."
            example: voice.thousandeyes.com
            type: string
          sipTargetTime:
            description: Target time for test completion in milliseconds.
            maximum: 5000
            minimum: 100
            type: integer
          sipTimeLimit:
            default: 5
            description: Time limit in milliseconds.
            maximum: 10
            minimum: 5
            type: integer
          targetSipCredentials:
            $ref: '#/components/schemas/TestSipCredentials'
          user:
            description: "Username for SIP registration, should be unique within a\
              \ ThousandEyes account group."
            example: username
            type: string
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          type:
            example: sip-server
            readOnly: true
            type: string
        required:
        - agents
        - port
        - targetSipCredentials
        type: object
    SipTestProtocol:
      default: tcp
      description: Transport layer for SIP communication.
      enum:
      - tcp
      - tls
      - udp
      type: string
    TestSipCredentials:
      properties:
        authUser:
          description: Username for authentication with SIP server.
          example: username
          type: string
        password:
          description: Password for authentication with SIP server.
          example: password
          type: string
        port:
          description: Port number for the chosen protocol.
          example: 1024
          maximum: 65535
          minimum: 1024
          type: integer
        protocol:
          $ref: '#/components/schemas/SipTestProtocol'
        sipRegistrar:
          description: "SIP server to be tested, specified by domain name or IP address."
          example: sip.thousandeyes.com
          type: string
        user:
          description: "Username for SIP registration, should be unique within a ThousandEyes\
            \ account group."
          example: username
          type: string
      required:
      - port
      type: object
    VoiceTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/VoiceInstantTest'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
        required:
        - interval
        type: object
    VoiceInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          codec:
            description: Codec label
            example: G.711 @ 64 Kbps
            readOnly: true
            type: string
          codecId:
            description: "Coded ID, [see the list of acceptable values](https://docs.thousandeyes.com/product-documentation/internet-and-wan-monitoring/tests/working-with-test-settings#rtp-stream-advanced-settings-tab)"
            example: "0"
            type: string
          dscp:
            $ref: '#/components/schemas/TestDscp'
          dscpId:
            $ref: '#/components/schemas/TestDscpId'
          duration:
            default: 5
            description: Duration of the test in seconds.
            maximum: 30
            minimum: 5
            type: integer
          jitterBuffer:
            default: 40
            description: De-jitter buffer size in seconds.
            maximum: 150
            minimum: 0
            type: integer
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          port:
            description: Port number for the chosen protocol.
            example: 1024
            maximum: 65535
            minimum: 1024
            type: integer
          targetAgentId:
            description: Agent ID of the target agent for the test.
            example: "281474976710706"
            type: string
          type:
            example: voice
            readOnly: true
            type: string
        required:
        - agents
        - targetAgentId
        type: object
    SimpleTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      description: "Each test includes additional fields depending on its `type`.\
        \ Refer `/tests/{type}` endpoint to know the set of fields returned by a given\
        \ `type`."
    AlertRule:
      properties:
        ruleId:
          description: Unique ID of the rule
          example: "127094"
          readOnly: true
          type: string
        ruleName:
          description: Name of the alert rule
          example: The End of the Internet
          readOnly: true
          type: string
        expression:
          description: String expression of alert rule
          example: ((hops((hopDelay >= 100 ms))))
          readOnly: true
          type: string
        direction:
          $ref: '#/components/schemas/TestDirection'
        isDefault:
          description: "Alert rules allow up to 1 alert rule to be selected as a default\
            \ for each type. By checking the default option, this alert rule will\
            \ be automatically included on subsequently created tests that test a\
            \ metric used in alerting here"
          example: true
          readOnly: true
          type: boolean
        alertType:
          $ref: '#/components/schemas/AlertType'
        minimumSources:
          description: The minimum number of agents or monitors that must meet the
            specified criteria in order to trigger the alert
          example: 10
          readOnly: true
          type: integer
        minimumSourcesPct:
          description: the minimum percentage of all assigned agents or monitors that
            must meet the specified criteria in order to trigger the alert
          example: 99
          readOnly: true
          type: integer
        roundsViolatingMode:
          $ref: '#/components/schemas/AlertRoundsViolationMode'
        roundsViolatingOutOf:
          description: Specifies the divisor (y value) for the “X of Y times” condition.
          example: 5
          readOnly: true
          type: integer
        roundsViolatingRequired:
          description: Specifies the numerator (x value) for the “X of Y times” condition
          example: 2
          readOnly: true
          type: integer
      type: object
    RuleId:
      description: Unique ID of the rule
      example: "127094"
      readOnly: true
      type: string
    AlertDirection:
      $ref: '#/components/schemas/TestDirection'
    AlertType:
      description: "Type of alert being triggered. In multi-layered tests, this value\
        \ represents the layer the alert relates to. See [Alert Details](https://developer.thousandeyes.com/v7/alerts/#/alert-details)\
        \ documentation for a list of possible values"
      enum:
      - page-load
      - http-server
      - end-to-end-server
      - end-to-end-agent
      - voice
      - dns-server
      - dns-trace
      - dnssec
      - bgp
      - path-trace
      - ftp
      - sip-server
      - transactions
      - web-transactions
      - agent
      - network-outage
      - application-outage
      - device-device
      - device-interface
      - endpoint-network-server
      - endpoint-http-server
      - endpoint-path-trace
      - endpoint-browser-sessions-agent
      - endpoint-browser-sessions-application
      - unknown
      example: http-server
      type: string
    AlertRoundsViolationMode:
      description: '`exact` requires that the same agent(s) meet the threshold in
        consecutive rounds; default is `any`'
      enum:
      - exact
      - any
      example: exact
      readOnly: true
      type: string
    Monitor:
      properties:
        countryId:
          description: Country ID
          example: GB
          readOnly: true
          type: string
        monitorId:
          description: BGP monitor ID
          example: "1234"
          readOnly: true
          type: string
        ipAddress:
          description: IP address of the BGP monitor
          example: 4.69.184.193
          type: string
        network:
          description: Name of the autonomous system in which the monitor is found
          example: "Level 3 Communications, Inc. (AS 3356)"
          type: string
        monitorType:
          $ref: '#/components/schemas/MonitorType'
        monitorName:
          description: Display name of the BGP monitor
          example: "Seattle, WA"
          type: string
      type: object
    MonitorType:
      description: Type of monitor
      enum:
      - public
      - private
      type: string
    Agent:
      allOf:
      - $ref: '#/components/schemas/AgentBase'
      - properties:
          agentId:
            description: Unique ID of the agent.
            example: "281474976710706"
            readOnly: true
            type: string
          agentName:
            description: Name of the agent.
            example: thousandeyes-stg-va-254
            type: string
          agentType:
            $ref: '#/components/schemas/CloudEnterpriseAgentType'
          location:
            description: Location of the agent.
            example: San Francisco Bay Area
            readOnly: true
            type: string
          countryId:
            description: 2-digit ISO country code
            example: US
            readOnly: true
            type: string
          enabled:
            description: Flag indicating if the agent is enabled.
            example: true
            type: boolean
          verifySslCertificates:
            description: Flag indicating if has normal SSL operations or  if instead
              it's set to ignore SSL errors on browserbot-based tests.
            example: true
            readOnly: true
            type: boolean
        type: object
      type: object
    AgentBase:
      properties:
        ipAddresses:
          description: Array of private IP addresses.
          example:
          - 99.139.65.220
          - 99.139.65.221
          items:
            format: ipv4
            type: string
          readOnly: true
          type: array
        publicIpAddresses:
          description: Array of public IP addresses.
          example:
          - 192.168.1.78
          - 192.168.1.79
          items:
            format: ipv4
            type: string
          readOnly: true
          type: array
        network:
          description: Network (including ASN) of agent’s public IP.
          example: "AT&T Services, Inc. (AS 7018)"
          readOnly: true
          type: string
      type: object
    CloudEnterpriseAgentType:
      description: Type of the agent.
      enum:
      - cloud
      - enterprise-cluster
      - enterprise
      example: enterprise-cluster
      readOnly: true
      type: string
    getTests_200_response:
      allOf:
      - $ref: '#/components/schemas/Tests'
      - $ref: '#/components/schemas/SelfLinks'
    getBgpTests_200_response:
      allOf:
      - $ref: '#/components/schemas/BgpTests'
      - $ref: '#/components/schemas/SelfLinks'
    getBgpTest_200_response:
      allOf:
      - $ref: '#/components/schemas/BgpTest'
      - $ref: '#/components/schemas/SelfLinks'
    getAgentToServerTests_200_response:
      allOf:
      - $ref: '#/components/schemas/AgentToServerTests'
      - $ref: '#/components/schemas/SelfLinks'
    getAgentToServerTest_200_response:
      allOf:
      - $ref: '#/components/schemas/AgentToServerTest'
      - $ref: '#/components/schemas/SelfLinks'
    getAgentToAgentTests_200_response:
      allOf:
      - $ref: '#/components/schemas/AgentToAgentTests'
      - $ref: '#/components/schemas/SelfLinks'
    getAgentToAgentTest_200_response:
      allOf:
      - $ref: '#/components/schemas/AgentToAgentTest'
      - $ref: '#/components/schemas/SelfLinks'
    getDNSServerTests_200_response:
      allOf:
      - $ref: '#/components/schemas/DnsServerTests'
      - $ref: '#/components/schemas/SelfLinks'
    getDNSServerTest_200_response:
      allOf:
      - $ref: '#/components/schemas/DnsServerTest'
      - $ref: '#/components/schemas/SelfLinks'
    getDnsTraceTests_200_response:
      allOf:
      - $ref: '#/components/schemas/DnsTraceTests'
      - $ref: '#/components/schemas/SelfLinks'
    getDnsTraceTest_200_response:
      allOf:
      - $ref: '#/components/schemas/DnsTraceTest'
      - $ref: '#/components/schemas/SelfLinks'
    getDnsSecTests_200_response:
      allOf:
      - $ref: '#/components/schemas/DnsSecTests'
      - $ref: '#/components/schemas/SelfLinks'
    getDnsSecTest_200_response:
      allOf:
      - $ref: '#/components/schemas/DnsSecTest'
      - $ref: '#/components/schemas/SelfLinks'
    getHttpServerTests_200_response:
      allOf:
      - $ref: '#/components/schemas/HttpServerTests'
      - $ref: '#/components/schemas/SelfLinks'
    getHttpServerTest_200_response:
      allOf:
      - $ref: '#/components/schemas/HttpServerTest'
      - $ref: '#/components/schemas/SelfLinks'
    getPageLoadTests_200_response:
      allOf:
      - $ref: '#/components/schemas/PageLoadTests'
      - $ref: '#/components/schemas/SelfLinks'
    getPageLoadTest_200_response:
      allOf:
      - $ref: '#/components/schemas/PageLoadTest'
      - $ref: '#/components/schemas/SelfLinks'
    getWebTransactionsTests_200_response:
      allOf:
      - $ref: '#/components/schemas/WebTransactionTests'
      - $ref: '#/components/schemas/SelfLinks'
    getWebTransactionsTest_200_response:
      allOf:
      - $ref: '#/components/schemas/WebTransactionTest'
      - $ref: '#/components/schemas/SelfLinks'
    getFtpServerTests_200_response:
      allOf:
      - $ref: '#/components/schemas/FtpServerTests'
      - $ref: '#/components/schemas/SelfLinks'
    getFtpServerTest_200_response:
      allOf:
      - $ref: '#/components/schemas/FtpServerTest'
      - $ref: '#/components/schemas/SelfLinks'
    getSipServerTests_200_response:
      allOf:
      - $ref: '#/components/schemas/SipServerTests'
      - $ref: '#/components/schemas/SelfLinks'
    getSipServerTest_200_response:
      allOf:
      - $ref: '#/components/schemas/SipServerTest'
      - $ref: '#/components/schemas/SelfLinks'
    getVoiceTests_200_response:
      allOf:
      - $ref: '#/components/schemas/VoiceTests'
      - $ref: '#/components/schemas/SelfLinks'
    getVoiceTest_200_response:
      allOf:
      - $ref: '#/components/schemas/VoiceTest'
      - $ref: '#/components/schemas/SelfLinks'
    getPathVisInterfaceGroups_200_response:
      allOf:
      - $ref: '#/components/schemas/InterfaceGroups'
      - $ref: '#/components/schemas/SelfLinks'
    updatePathVisInterfaceGroup_200_response:
      allOf:
      - $ref: '#/components/schemas/InterfaceGroup'
      - $ref: '#/components/schemas/SelfLinks'
    TestRequest_allOf_agents:
      example: "{\"agentId\":\"125\",\"sourceIpAddress\":\"1.1.1.1\"}"
      properties:
        agentId:
          description: Agent Id (get `agentId` from `/agents` endpoint)
          type: string
        sourceIpAddress:
          description: IP address from `ipAddresses` of Agent Details for interface
            selection (get `ipAddresses` from `/agents` endpoint)
          type: string
      type: object
    SelfLinks__links:
      description: A links object containing the self link.
      properties:
        self:
          $ref: '#/components/schemas/Link'
      readOnly: true
      type: object
    UnexpandedInstantTest__links_self:
      allOf:
      - description: Reference to the test.
        example:
          href: "https://api.thousandeyes.com/v7/tests/{type}/281474976710706"
      - $ref: '#/components/schemas/Link'
    UnexpandedInstantTest__links_testResults:
      example:
      - href: https://api.thousandeyes.com/v7/test-results/281474976710706/network
      - href: https://api.thousandeyes.com/v7/test-results/281474976710706/pathvis
      oneOf:
      - $ref: '#/components/schemas/TestResults'
      - $ref: '#/components/schemas/Link'
    UnexpandedInstantTest__links:
      description: A list of links that can be accessed to get more information
      properties:
        self:
          $ref: '#/components/schemas/UnexpandedInstantTest__links_self'
        testResults:
          $ref: '#/components/schemas/UnexpandedInstantTest__links_testResults'
      readOnly: true
      type: object
    TestLabels_inner:
      example:
        labelId: "961"
        name: Artem label
        isBuiltIn: false
      properties:
        labelId:
          description: Label ID.
          type: string
        name:
          description: Name of the label.
          type: string
        isBuiltIn:
          description: "Value indicating if the label in question is BuiltIn (Account\
            \ Admin, Organization Admin, Regular User)."
          type: boolean
      type: object
    TestSharedAccounts_inner:
      properties:
        aid:
          description: Account group ID.
          example: "105"
          type: string
        name:
          description: Account group name.
          example: Account name
          type: string
      type: object
    TestCustomHeaders_root:
      allOf:
      - description: Use these HTTP headers for root server request.
      - $ref: '#/components/schemas/MapItem'
    TestCustomHeaders_all:
      allOf:
      - description: Use these HTTP headers for all domains.
      - $ref: '#/components/schemas/MapItem'
  securitySchemes:
    BearerAuth:
      description: Bearer authentication token
      scheme: bearer
      type: http

