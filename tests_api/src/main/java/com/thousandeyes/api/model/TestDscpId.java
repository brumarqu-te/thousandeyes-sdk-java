/*
 * Tests API
 *  ### Overview This API supports listing, creating, editing, and deleting Cloud and Enterprise Agent (CEA) based tests.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * DSCP ID [to see list for acceptable values](https://docs.thousandeyes.com/product-documentation/tests/dscp-options-in-network-tests)
 */
@JsonAdapter(TestDscpId.Adapter.class)
public enum TestDscpId {
  
  _0("0"),
  
  _8("8"),
  
  _16("16"),
  
  _24("24"),
  
  _32("32"),
  
  _40("40"),
  
  _48("48"),
  
  _56("56"),
  
  _10("10"),
  
  _12("12"),
  
  _14("14"),
  
  _18("18"),
  
  _20("20"),
  
  _22("22"),
  
  _26("26"),
  
  _28("28"),
  
  _30("30"),
  
  _34("34"),
  
  _36("36"),
  
  _38("38"),
  
  _46("46"),
  
  _44("44");

  private String value;

  TestDscpId(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TestDscpId fromValue(String value) {
    for (TestDscpId b : TestDscpId.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TestDscpId> {
    @Override
    public void write(final JsonWriter jsonWriter, final TestDscpId enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TestDscpId read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TestDscpId.fromValue(value);
    }
  }
}

