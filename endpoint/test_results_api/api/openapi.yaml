openapi: 3.0.1
info:
  description: Retrieve results for scheduled and dynamic tests on endpoint agents.
  title: Endpoint Test Results API
  version: 7.0.0
servers:
- description: Thousandeyes API production URL
  url: https://api.thousandeyes.com
security:
- BearerAuth:
  - read
paths:
  /v7/endpoint/test-results/scheduled-tests/{testId}/network/filter:
    post:
      description: |
        Returns network metrics (loss, latency, and jitter) from each endpoint agent, for each roundId within the specified time window, as determined by search filters. If a time frame is provided, the rounds relevant to that time frame are returned, and the order is not predefined unless the user specifies a sort order in the filter.
        When no time frame is provided, the latest rounds are returned.
      operationId: post-fetch-test-result-metrics
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestsDataRoundsSearch'
        description: Tests data search filters.
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/post_fetch_test_result_metrics_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve network scheduled test results
      tags:
      - Network Scheduled Tests Results
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/scheduled-tests/network/filter:
    post:
      description: |
        Returns network metrics, including loss, latency, and jitter, for multiple test IDs obtained from each endpoint agent. It allows you to specify a time window using search filters to retrieve metrics for specific round IDs within that time frame. The default order of results is unspecified unless you include a sorting preference in the filter.
        When no time frame is provided, the API returns metrics for the most recent rounds. Access to all accounts associated with the specified test IDs is required to use this endpoint.
      operationId: post-fetch-test-result-metrics-multi-test
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Maximum number of objects to return.
        in: query
        name: max
        schema:
          example: 5
          type: number
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTestIdTestsDataRoundsSearch'
        description: Test data search filters.
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/post_fetch_test_result_metrics_multi_test_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve network scheduled test results from multiple tests
      tags:
      - Network Scheduled Tests Results
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/scheduled-tests/{testId}/pathvis:
    get:
      description: |
        Returns a summary of the path visualization data collected from each endpoint agent to the destination. In each path visualization attempt, one attempt is made to reach the destination. Each set of data is summarized, based on response time, number of hops, and response time to the target. A time frame must be specified, or the most recent round within last 2 hours is returned.
      operationId: get-test-result-network-pathvis
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_test_result_network_pathvis_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve pathvis network scheduled test results
      tags:
      - Network Scheduled Tests Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/scheduled-tests/{testId}/pathvis/agent/{agentId}/round/{roundId}:
    get:
      description: |
        Returns a hop-by-hop summary of the path trace data collected during path visualization. In each round, one path discovery attempt is made to reach the destination. The entire path is returned. A `roundId` must be specified.
      operationId: get-test-result-pathvis-agent-round
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: Agent ID
        in: path
        name: agentId
        required: true
        schema:
          example: "11"
          type: string
      - description: Round ID
        in: path
        name: roundId
        required: true
        schema:
          example: "1384309800"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_test_result_pathvis_agent_round_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve pathvis network scheduled test results details
      tags:
      - Network Scheduled Tests Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/scheduled-tests/{testId}/http-server:
    get:
      description: |
        Returns component-level (DNS, Connect, Wait and Receive) timing for the load of an object over HTTP.
      operationId: get-test-result-http-server
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      - description: "This parameter is optional and determines whether to expand\
          \ resources related to test results. By default, no expansion occurs when\
          \ this query parameter is omitted. To expand a specific resource, such as\
          \ \"header,\" append `?expand=header` to the query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - header
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_test_result_http_server_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve HTTP server scheduled test results
      tags:
      - Web HTTP Server Scheduled Test Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/dynamic-tests/{testId}/network/filter:
    post:
      description: |
        Returns network metrics (`loss`, `latency`, `jitter` and `bandwidth`) from each endpoint agent, for each `roundId` in the requested window. When Time Frame is provided the rounds specific to the time frame is returned and the order is not pre-defined unless a user specifies the sort order in filter. When no time frame is provided the latest rounds are returned.
      operationId: post-fetch-dynamic-test-result-metrics
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicTestsDataRoundSearch'
        description: Tests data search filters.
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/post_fetch_dynamic_test_result_metrics_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve network dynamic test results
      tags:
      - Network Dynamic Tests Results
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/dynamic-tests/{testId}/pathvis:
    get:
      description: |
        Returns a summary of the path visualization data collected from each endpoint agent to the destination. In each path visualization attempt, one attempt is made to reach the destination. Each set of data is summarized, based on response time, number of hops, and response time to the target. A time frame must be specified, or the most recent round within last 2 hours will be returned.
      operationId: get-dynamic-test-result-network-pathvis
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_dynamic_test_result_network_pathvis_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve pathvis network dynamic test results
      tags:
      - Network Dynamic Tests Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/dynamic-tests/{testId}/pathvis/agent/{agentId}/round/{roundId}:
    get:
      description: |
        Returns a hop-by-hop summary of the path trace data collected during path visualization. In each round, one path discovery attempt is made to reach the destination. The entire path is returned. A `roundId` must be specified.
      operationId: get-dynamic-test-result-pathvis-agent-round
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: Agent ID
        in: path
        name: agentId
        required: true
        schema:
          example: "11"
          type: string
      - description: Round ID
        in: path
        name: roundId
        required: true
        schema:
          example: "1384309800"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_dynamic_test_result_pathvis_agent_round_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve pathvis network dynamic test results details
      tags:
      - Network Dynamic Tests Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/real-user-tests/filter:
    post:
      description: |
        Returns a list of all endpoint real user tests.
        Results from the last round are provided unless an explicit start and end is provided with `startDate`, `endDate` or `window` optional parameters.

        ## Request body filters
        This endpoint supports complex filtering using the request body.
        It is important these filters remain unaltered when making use of pagination, otherwise the results will not be coherent with the original request.

        ### Multiple filter fields
        When multiple filter fields are provided, a logical `AND` is applied between the filters.
         ```
        curl --location --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/filter'
        --header 'Authorization: Bearer $token'
        --header 'Content-Type: application/json'
        --data-raw '{
          "searchFilters": {
            "platform": [ "mac" ],
            "domain": [ "thousandeyes.com" ]
          }}'
        ```

        ### Filter field with multiple values
        When a filter field contains multiple values, a logical `OR` is applied between the filter values.
         ```
        curl --location --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/filter'
        --header 'Authorization: Bearer $token'
        --header 'Content-Type: application/json'
        --data-raw '{
            "searchFilters": {
              "networkId": [ "660b34109d12", "660b34109d15" ]
            }
          }'
        ```

        ### Combination of request parameters and body filters
        ```
        curl --location --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/filter?window=1w'
        --header 'Authorization: Bearer $token'
        --header 'Content-Type: application/json'
        --data-raw '{
            "searchFilters": {
              "platform": [ "mac" ],
              "domain": [ "thousandeyes.com" ],
              "networkId": [ "660b34109d12", "660b34109d15" ]
            }
          }'
        ```

        Returns a `results` array of endpoint real user tests.
        Either the latest results, or based on the time range and body filters specified.
      operationId: get-endpoint-real-user-tests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_endpoint_real_user_tests_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_real_user_tests_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: List endpoint real user tests
      tags:
      - Real User Tests Results
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/real-user-tests/{id}:
    get:
      description: |
        Provides details for an endpoint real user test. Returns a results array containing detailed information about endpoint real user tests."
      operationId: get-endpoint-real-user-test-details
      parameters:
      - description: The real user test id.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 07625:1490529480:h3qJQTpl
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_real_user_test_details_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve endpoint real user test
      tags:
      - Real User Tests Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/real-user-tests/pages/filter:
    post:
      description: "Returns a list of all endpoint real user tests visited pages.\
        \ \nSessions from the last round are provided unless an explicit start and\
        \ end is provided with `startDate`, `endDate` or `window` optional parameters.\n\
        \n## Request body filters\nThis endpoint supports complex filtering using\
        \ the request body.\nIt is important these filters remain unaltered when making\
        \ use of pagination, otherwise the results will not be coherent with the original\
        \ request.\n\n### Multiple filter fields\nWhen multiple filter fields are\
        \ provided, a logical `AND` is applied between the filters.\n ```\ncurl --location\
        \ --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/pages/filter'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"platform\": [ \"mac\" ],\n  \
        \  \"domain\": [ \"thousandeyes.com\" ]\n  }}'\n```\n\n### Filter field with\
        \ multiple values\nWhen a filter field contains multiple values, a logical\
        \ `OR` is applied between the filter values.\n ```\ncurl --location --request\
        \ POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/pages/filter'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"networkId\": [ \"660b34109d12\"\
        , \"660b34109d15\" ]\n  }}'\n```\n\n### Combination of request parameters\
        \ and body filters\n```\ncurl --location --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/pages/filter?window=1w'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"platform\": [ \"mac\" ],\n  \
        \  \"domain\": [ \"thousandeyes.com\" ],\n    \"networkId\": [ \"660b34109d12\"\
        , \"660b34109d15\" ]\n  }}'\n```\n\nReturns a `results` array of user loaded\
        \ pages in an endpoint real user test. \nPages shown are from the latest round,\
        \ or based on the time range specified.\n"
      operationId: get-endpoint-real-user-tests-pages
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointRealUserTestResultRequestFilter'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_real_user_tests_pages_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: List endpoint real user tests visited pages
      tags:
      - Real User Tests Results
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/real-user-tests/{id}/pages/{pageId}:
    get:
      description: "Returns details for endpoint real user test web page request.\
        \ \nProvides complete waterfall information with all object requests.\n\n\
        Sends back detailed endpoint real user test web page request.\n\nReturned\
        \ object has a single field: `har` which is an HAR object according to the\
        \ HTTP Archive 1.2 specifications. \n[You can read more about the specification](http://www.softwareishard.com/blog/har-12-spec/).\n\
        \nIn addition to standard fields, the object har includes a custom property\
        \ `systemMetrics` which contain metrics about CPU and physical memory usage.\
        \ \nCheck `SystemMetrics` on schemas tab for more information.\n"
      operationId: get-endpoint-real-user-test-pages-details
      parameters:
      - description: The real user test id.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 07625:1490529480:h3qJQTpl
          type: string
        style: simple
      - description: Web page ID
        in: path
        name: pageId
        required: true
        schema:
          example: "281474976710706"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_real_user_test_pages_details_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve endpoint real user test page
      tags:
      - Real User Tests Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/real-user-tests/networks/filter:
    post:
      description: "Returns a list of all endpoint real user tests. \nSessions from\
        \ the last round are provided unless an explicit start and end is provided\
        \ with `startDate`, `endDate` or `window` optional parameters.\n\n## Request\
        \ body filters\nThis endpoint supports complex filtering using the request\
        \ body.\nIt is important these filters remain unaltered when making use of\
        \ pagination, otherwise the results will not be coherent with the original\
        \ request.\n\n### Multiple filter fields\nWhen multiple filter fields are\
        \ provided, a logical `AND` is applied between the filters.\n ```\ncurl --location\
        \ --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/networks/filter'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n   \"searchFilters\": {\n    \"platform\": [ \"mac\" ],\n \
        \   \"domain\": [ \"thousandeyes.com\" ]\n  }}'\n```\n\n### Filter field with\
        \ multiple values\nWhen a filter field contains multiple values, a logical\
        \ `OR` is applied between the filter values.\n ```\ncurl --location --request\
        \ POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/networks/filter'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"networkId\": [ \"660b34109d12\"\
        , \"660b34109d15\" ]\n  }}'\n```\n\n### Combination of request parameters\
        \ and body filters\n```\ncurl --location --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/networks/filter?window=1w'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"platform\": [ \"mac\" ],\n  \
        \  \"domain\": [ \"thousandeyes.com\" ],\n    \"networkId\": [ \"660b34109d12\"\
        , \"660b34109d15\" ]\n  }}'\n```\n\nReturns a `results` array of endpoint\
        \ real user tests. \nNetwork sessions shown are from the latest round, or\
        \ based on the time range specified.\n"
      operationId: get-endpoint-real-user-tests-network
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_endpoint_real_user_tests_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_real_user_tests_network_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: List endpoint real user tests
      tags:
      - Real User Tests Results
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/local-networks:
    get:
      description: |
        Returns a list of all the networks used by endpoint agents.

        Sends back a `localNetworks` array.
      operationId: get-endpoint-local-networks
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_local_networks_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: List local networks
      tags:
      - Local Network Tests Results
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/local-networks/topologies/filter:
    post:
      description: "Returns a list of all endpoint local network topologies probes.\
        \ \nResults from the last round are provided unless an explicit start and\
        \ end is provided with `startDate`, `endDate` or `window` optional parameters.\n\
        \n## Request body filters\nThis endpoint supports complex filtering using\
        \ the request body.\nIt is important these filters remain unaltered when making\
        \ use of pagination, otherwise the results will not be coherent with the original\
        \ request.\n\n### Multiple filter fields\nWhen multiple filter fields are\
        \ provided, a logical `AND` is applied between the filters.\n ```\ncurl --location\
        \ --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/local-networks/topologies/filter'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"platform\": [ \"mac\" ],\n  \
        \  \"domain\": [ \"thousandeyes.com\" ]\n  }}'\n```\n\n### Filter field with\
        \ multiple values\nWhen a filter field contains multiple values, a logical\
        \ `OR` is applied between the filter values.\n ```\ncurl --location --request\
        \ POST 'https://api.thousandeyes.com/v7/endpoint/test-results/local-networks/topologies/filter'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"networkId\": [ \"660b34109d12\"\
        , \"660b34109d15\" ]\n  }}'\n```\n\n### Combination of request parameters\
        \ and body filters\n```\ncurl --location --request POST 'https://api.thousandeyes.com/v7/endpoint/test-results/local-networks/topologies/filter?window=12h'\n\
        --header 'Authorization: Bearer $token'\n--header 'Content-Type: application/json'\n\
        --data-raw '{\n  \"searchFilters\": {\n    \"platform\": [ \"mac\" ],\n  \
        \  \"domain\": [ \"thousandeyes.com\" ],\n    \"networkId\": [ \"660b34109d12\"\
        , \"660b34109d15\" ]\n  }}'\n```\n\n### Warning\nNote that a maximum of 12h\
        \ worth of data can be retrieved at once. \nIf you need more, you need to\
        \ make multiple requests.\n\nReturns a `results` array of network topology\
        \ probes. \nNetwork topology probes shown are from the latest round, or based\
        \ on the time range specified.\n"
      operationId: get-endpoint-local-networks-topologies
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: |-
          A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
          For a precise date range, use `startDate` and `endDate`.
        in: query
        name: window
        schema:
          example: 12h
          pattern: "^\\d+(?:[smhdw]{1})?$"
          type: string
      - description: "Use with the `endDate` parameter. Include the complete time\
          \ (hours, minutes, and seconds) in UTC time zone, following the ISO 8601\
          \ date-time format. See the example for reference. Please note that this\
          \ parameter can't be used with `window`."
        in: query
        name: startDate
        schema:
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
      - description: "Defaults to current time the request is made. Use with the `startDate`\
          \ parameter. Include the complete time (hours, minutes, and seconds) in\
          \ UTC time zone, following the ISO 8601 date-time format. See the example\
          \ for reference. Please note that this parameter can't be used with `window`."
        in: query
        name: endDate
        schema:
          example: 2022-07-18T22:00:54Z
          format: date-time
          type: string
      - description: (Optional) Opaque cursor used for pagination. Clients should
          use `_links` instead of this parameter.
        in: query
        name: cursor
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_endpoint_local_networks_topologies_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_local_networks_topologies_200_response'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: List endpoint network topologies probes
      tags:
      - Local Network Tests Results
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/test-results/local-networks/topologies/{networkTopologyId}:
    get:
      description: |
        Returns detailed data of a local network topology.
      operationId: get-endpoint-local-network-topology-details
      parameters:
      - description: The network topology ID.
        explode: false
        in: path
        name: networkTopologyId
        required: true
        schema:
          example: 00160:39c518560de9:1491651900:236e6f18
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/get_endpoint_local_network_topology_details_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
      summary: Retrieve endpoint local network topology
      tags:
      - Local Network Tests Results
      x-accepts: "application/hal+json,application/problem+json"
components:
  parameters:
    NetworkTopologyIdPath:
      description: The network topology ID.
      explode: false
      in: path
      name: networkTopologyId
      required: true
      schema:
        example: 00160:39c518560de9:1491651900:236e6f18
        type: string
      style: simple
    IdPath:
      description: The real user test id.
      explode: false
      in: path
      name: id
      required: true
      schema:
        example: 07625:1490529480:h3qJQTpl
        type: string
      style: simple
    HttpServerExpand:
      description: "This parameter is optional and determines whether to expand resources\
        \ related to test results. By default, no expansion occurs when this query\
        \ parameter is omitted. To expand a specific resource, such as \"header,\"\
        \ append `?expand=header` to the query."
      explode: false
      in: query
      name: expand
      required: false
      schema:
        example:
        - header
        items:
          $ref: '#/components/schemas/Expand'
        type: array
      style: form
    TestIdPath:
      description: Test ID
      in: path
      name: testId
      required: true
      schema:
        example: "202701"
        type: string
    AccountGroupId:
      description: A unique identifier associated with your account group. You can
        retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note that
        you must be assigned to the target account group. Specifying this parameter
        without being assigned to the target account group will result in an error
        response.
      in: query
      name: aid
      required: false
      schema:
        example: "2067"
        type: string
    Window:
      description: |-
        A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: `s` for seconds (default if no type is specified), `m` for minutes, `h` for hours, `d` for days, and `w` for weeks.
        For a precise date range, use `startDate` and `endDate`.
      in: query
      name: window
      schema:
        example: 12h
        pattern: "^\\d+(?:[smhdw]{1})?$"
        type: string
    StartDate:
      description: "Use with the `endDate` parameter. Include the complete time (hours,\
        \ minutes, and seconds) in UTC time zone, following the ISO 8601 date-time\
        \ format. See the example for reference. Please note that this parameter can't\
        \ be used with `window`."
      in: query
      name: startDate
      schema:
        example: 2022-07-17T22:00:54Z
        format: date-time
        type: string
    EndDate:
      description: "Defaults to current time the request is made. Use with the `startDate`\
        \ parameter. Include the complete time (hours, minutes, and seconds) in UTC\
        \ time zone, following the ISO 8601 date-time format. See the example for\
        \ reference. Please note that this parameter can't be used with `window`."
      in: query
      name: endDate
      schema:
        example: 2022-07-18T22:00:54Z
        format: date-time
        type: string
    PaginationCursor:
      description: (Optional) Opaque cursor used for pagination. Clients should use
        `_links` instead of this parameter.
      in: query
      name: cursor
      schema:
        type: string
        example: null
    PaginationMax:
      description: (Optional) Maximum number of objects to return.
      in: query
      name: max
      schema:
        example: 5
        type: number
    AgentIdPath:
      description: Agent ID
      in: path
      name: agentId
      required: true
      schema:
        example: "11"
        type: string
    RoundIdPath:
      description: Round ID
      in: path
      name: roundId
      required: true
      schema:
        example: "1384309800"
        type: string
    PageIdPath:
      description: Web page ID
      in: path
      name: pageId
      required: true
      schema:
        example: "281474976710706"
        type: string
  responses:
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Insufficient permissions to query endpoint
    "404":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: URI Resource Not Found
            status: 404
            detail: Details explaining if the 404 error is related to an invalid URI
              or a wrong ID
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Not found
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Exhausted rate limit for the organization
    "500":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Internal server error
            status: 500
            detail: Optional detail about the internal error message.
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    "502":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Gateway
    "400":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Request validation failed. There are invalid or missing fields
            status: 400
            detail: Invalid field value for field `expand`
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
  schemas:
    AgentId:
      description: "Unique ID of endpoint agent, from `/endpoint/agents` endpoint."
      example: 861b7557-cd57-4bbb-b648-00bddf88ef49
      format: uuid
      readOnly: true
      type: string
    RoundId:
      description: Epoch time (seconds) indicating the start time of the round.
      example: 1384309800
      readOnly: true
      type: integer
    TestsDataRoundsSearch:
      example:
        searchSort:
        - sort: null
          order: desc
        - sort: null
          order: desc
        searchFilters:
          agentId:
          - 52455b09-ff1b-4849-8194-99026cc890e0
          - 52455b09-ff1b-4849-8194-99026cc890e0
        thresholdFilter:
          conditionalOperator: null
          filters:
          - name: null
            value: 0.8008281904610115
            operator: null
          - name: null
            value: 0.8008281904610115
            operator: null
      properties:
        searchSort:
          items:
            $ref: '#/components/schemas/TestsDataSearchSort'
          type: array
        thresholdFilter:
          $ref: '#/components/schemas/TestsDataThresholdFilters'
        searchFilters:
          $ref: '#/components/schemas/TestsDataSearchFilter'
      type: object
    MultiTestIdTestsDataRoundsSearch:
      example:
        searchSort:
        - sort: null
          order: desc
        - sort: null
          order: desc
        searchFilters:
          agentId:
          - 52455b09-ff1b-4849-8194-99026cc890e0
          - 52455b09-ff1b-4849-8194-99026cc890e0
          testId:
          - "5"
          - "5"
        thresholdFilter:
          conditionalOperator: null
          filters:
          - name: null
            value: 0.8008281904610115
            operator: null
          - name: null
            value: 0.8008281904610115
            operator: null
      properties:
        searchSort:
          items:
            $ref: '#/components/schemas/TestsDataSearchSort'
          type: array
        thresholdFilter:
          $ref: '#/components/schemas/TestsDataThresholdFilters'
        searchFilters:
          $ref: '#/components/schemas/MultiTestIdTestsDataSearchFilter'
      type: object
    DynamicTestsDataRoundSearch:
      example:
        searchSort:
        - sort: null
          order: desc
        - sort: null
          order: desc
        searchFilters:
          agentId:
          - 52455b09-ff1b-4849-8194-99026cc890e0
          - 52455b09-ff1b-4849-8194-99026cc890e0
          webexConferenceId:
          - 52455b09-ff1b-4849-8194-99026cc890e0
          - 52455b09-ff1b-4849-8194-99026cc890e0
        thresholdFilter:
          conditionalOperator: null
          filters:
          - name: null
            value: 0.8008281904610115
            operator: null
          - name: null
            value: 0.8008281904610115
            operator: null
      properties:
        searchSort:
          items:
            $ref: '#/components/schemas/TestsDataSearchSort'
          type: array
        thresholdFilter:
          $ref: '#/components/schemas/TestsDataThresholdFilters'
        searchFilters:
          $ref: '#/components/schemas/DynamicTestsDataSearchFilter'
      type: object
    TestsDataSearchSort:
      example:
        sort: null
        order: desc
      properties:
        sort:
          $ref: '#/components/schemas/TestsDataSearchSortKey'
        order:
          $ref: '#/components/schemas/SortOrder'
      type: object
    TestsDataSearchSortKey:
      enum:
      - round-id
      - loss
      - latency
      - jitter
      - cpu
      - memory
      - signal-quality
      type: string
    TestsDataThresholdFilters:
      description: All filters are applied based on the conditional operator (and/or).
      example:
        conditionalOperator: null
        filters:
        - name: null
          value: 0.8008281904610115
          operator: null
        - name: null
          value: 0.8008281904610115
          operator: null
      properties:
        filters:
          items:
            $ref: '#/components/schemas/TestsDataThresholdFilter'
          type: array
        conditionalOperator:
          $ref: '#/components/schemas/ConditionalOperator'
      type: object
    TestsDataThresholdFilter:
      description: The metric is filtered based on the threshold value and operator
        provided.
      example:
        name: null
        value: 0.8008281904610115
        operator: null
      properties:
        name:
          $ref: '#/components/schemas/ThresholdFilterName'
        value:
          description: The threshold value.
          format: double
          type: number
        operator:
          $ref: '#/components/schemas/ThresholdFilterOperator'
      type: object
    ThresholdFilterName:
      description: Metric on which the threshold filter is applied.
      enum:
      - loss
      - latency
      - jitter
      - cpu
      - memory
      - signal-quality
      type: string
    ThresholdFilterOperator:
      enum:
      - gte
      - lte
      type: string
    ConditionalOperator:
      enum:
      - and
      - or
      type: string
    TestsDataSearchFilter:
      example:
        agentId:
        - 52455b09-ff1b-4849-8194-99026cc890e0
        - 52455b09-ff1b-4849-8194-99026cc890e0
      properties:
        agentId:
          description: Filter using the `agent-id`.
          items:
            example: 52455b09-ff1b-4849-8194-99026cc890e0
            format: uuid
            type: string
          type: array
      type: object
    MultiTestIdTestsDataSearchFilter:
      example:
        agentId:
        - 52455b09-ff1b-4849-8194-99026cc890e0
        - 52455b09-ff1b-4849-8194-99026cc890e0
        testId:
        - "5"
        - "5"
      properties:
        agentId:
          description: Filter using the `agent-id`.
          items:
            example: 52455b09-ff1b-4849-8194-99026cc890e0
            format: uuid
            type: string
          type: array
        testId:
          items:
            example: "5"
            type: string
          type: array
      type: object
    DynamicTestsDataSearchFilter:
      example:
        agentId:
        - 52455b09-ff1b-4849-8194-99026cc890e0
        - 52455b09-ff1b-4849-8194-99026cc890e0
        webexConferenceId:
        - 52455b09-ff1b-4849-8194-99026cc890e0
        - 52455b09-ff1b-4849-8194-99026cc890e0
      properties:
        agentId:
          description: Filter using the `agent-id`.
          items:
            example: 52455b09-ff1b-4849-8194-99026cc890e0
            format: uuid
            type: string
          type: array
        webexConferenceId:
          description: Filter using the `conference-id` of the webex call.
          items:
            example: 52455b09-ff1b-4849-8194-99026cc890e0
            format: uuid
            type: string
          type: array
      type: object
    TestResult:
      allOf:
      - properties:
          agentId:
            $ref: '#/components/schemas/AgentId'
          aid:
            $ref: '#/components/schemas/AccountGroupId'
          roundId:
            $ref: '#/components/schemas/RoundId'
          serverIp:
            description: IP address of target server.
            example: 185.199.108.153
            readOnly: true
            type: string
          systemMetrics:
            $ref: '#/components/schemas/SystemMetrics'
          vpnProfile:
            $ref: '#/components/schemas/VpnProfile'
        type: object
    NetworkTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/NetworkTestResult'
          type: array
        test:
          $ref: '#/components/schemas/EndpointScheduledTest'
      type: object
    MultiTestIdNetworkTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/NetworkTestResult'
          type: array
      type: object
    NetworkTestResult:
      allOf:
      - $ref: '#/components/schemas/TestResult'
      - properties:
          networkProfile:
            $ref: '#/components/schemas/NetworkProfile'
          avgLatency:
            description: Average RTT for packets sent to destination.
            example: 167.04
            format: double
            readOnly: true
            type: number
          errorDetails:
            description: "Error details, if an error was encountered."
            example: Error
            readOnly: true
            type: string
          jitter:
            description: Standard deviation of latency.
            example: 0.076808
            format: double
            readOnly: true
            type: number
          isIcmpBlocked:
            $ref: '#/components/schemas/IcmpBlocked'
          loss:
            description: Percentage of packets not reaching destination.
            example: 0.0
            format: double
            readOnly: true
            type: number
          maxLatency:
            description: Maximum RTT for packets sent to destination.
            example: 168.0
            format: double
            readOnly: true
            type: number
          minLatency:
            description: Minimum RTT for packets sent to destination.
            example: 167.0
            format: double
            readOnly: true
            type: number
        type: object
    SystemMetrics:
      properties:
        startTimeMs:
          description: "The start time of metrics collection, expressed in milliseconds\
            \ since the Epoch."
          example: 1581508857327
          format: integer
          readOnly: true
          type: number
        endTimeMs:
          description: "The end time of metrics collection, expressed in milliseconds\
            \ since the Epoch."
          example: 1581508867333
          format: integer
          readOnly: true
          type: number
        cpuUtilization:
          $ref: '#/components/schemas/CpuUtilization'
        physicalMemoryUsedBytes:
          $ref: '#/components/schemas/PhysicalMemoryUsedBytes'
        physicalMemoryTotalBytes:
          description: Total physical memory of the system.
          example: 1024
          format: long
          readOnly: true
          type: number
      type: object
    CpuUtilization:
      properties:
        min:
          description: The minimum sampled usage value recorded during the monitored
            period.
          example: 0.22
          format: double
          maximum: 1.0
          minimum: 0.0
          readOnly: true
          type: number
        max:
          description: The maximum sampled usage value recorded during the monitored
            period.
          example: 0.75
          format: double
          maximum: 1.0
          minimum: 0.0
          readOnly: true
          type: number
        mean:
          description: The mean (average) sampled usage value recorded during the
            monitored period.
          example: 0.55
          format: double
          maximum: 1.0
          minimum: 0.0
          readOnly: true
          type: number
        median:
          description: The median sampled usage value recorded during the monitored
            period.
          example: 0.61
          format: double
          maximum: 1.0
          minimum: 0.0
          readOnly: true
          type: number
        stdDev:
          description: The standard deviation of sampled usage values recorded during
            the monitored period.
          example: 0.01
          format: double
          maximum: 1.0
          minimum: 0.0
          readOnly: true
          type: number
        count:
          description: The total number of samples collected during the monitored
            period.
          example: 150
          format: integer
          readOnly: true
          type: number
      type: object
    PhysicalMemoryUsedBytes:
      properties:
        min:
          description: The minimum sampled memory usage value recorded during the
            monitored period.
          example: 1.2
          format: double
          readOnly: true
          type: number
        max:
          description: The maximum sampled memory usage value recorded during the
            monitored period.
          example: 2.5
          format: double
          readOnly: true
          type: number
        mean:
          description: The mean (average) value of memory usage sampled over the monitored
            period.
          example: 1.77
          format: double
          readOnly: true
          type: number
        median:
          description: The median value of memory usage sampled over the monitored
            period.
          example: 1.85
          format: double
          readOnly: true
          type: number
        stdDev:
          description: The standard deviation of memory usage sampled during the monitored
            period.
          example: 0.25
          format: double
          readOnly: true
          type: number
        count:
          description: The total number of samples collected during the monitored
            period..
          example: 155
          format: integer
          readOnly: true
          type: number
      type: object
    VpnProfile:
      properties:
        vpnClientAddresses:
          description: A list of private IP addresses assigned to the device by the
            VPN server.
          example:
          - 184.81.113.85
          - 13.129.91.62
          items:
            type: string
          readOnly: true
          type: array
        vpnClientNetworkRange:
          description: A list of private networks assigned to the device by the VPN
            server.
          items:
            example: 9.88.37.27
            type: string
          readOnly: true
          type: array
        vpnGatewayAddress:
          description: IP address of the VPN gateway.
          example: 120.98.134.7
          readOnly: true
          type: string
        vpnType:
          $ref: '#/components/schemas/VpnType'
      type: object
    PathVisTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/PathVisTestResult'
          type: array
        test:
          $ref: '#/components/schemas/EndpointScheduledTest'
      type: object
    PathVisTestResult:
      allOf:
      - $ref: '#/components/schemas/PathVisBaseTestResult'
      - properties:
          location:
            description: Geographic location of the pathvis.
            example: San Francisco Area
            readOnly: true
            type: string
          endpoints:
            description: "Shows an iteration of path trace, with each iteration specified\
              \ by a pathId."
            items:
              $ref: '#/components/schemas/PathVisEndpoint'
            type: array
        type: object
    PathVisDetailTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/PathVisDetailTestResult'
          type: array
        test:
          $ref: '#/components/schemas/EndpointScheduledTest'
      type: object
    PathVisDetailTestResult:
      allOf:
      - $ref: '#/components/schemas/PathVisBaseTestResult'
      - properties:
          routes:
            description: "Shows iterations of path trace, with each iteration specified\
              \ by a pathId."
            items:
              $ref: '#/components/schemas/PathVisRoute'
            type: array
          vpnRoutes:
            description: "Shows iterations of the VPN path trace, with each iteration\
              \ specified by a pathId."
            items:
              $ref: '#/components/schemas/PathVisRoute'
            type: array
        type: object
    PathVisBaseTestResult:
      allOf:
      - $ref: '#/components/schemas/TestResult'
      - properties:
          asnDetails:
            $ref: '#/components/schemas/AsnDetails'
          server:
            description: "Target server, including port."
            example: www.google.com:443
            readOnly: true
            type: string
          sourceIp:
            description: IP address of source endpoint agent.
            example: 196.40.106.237
            readOnly: true
            type: string
          sourcePrefix:
            description: IP prefix of source endpoint agent.
            example: 196.40.96.0/20
            readOnly: true
            type: string
        type: object
    AsnDetails:
      properties:
        asName:
          description: Name of the provider.
          example: "ThousandEyes, Inc"
          readOnly: true
          type: string
        asNumber:
          description: Unique number assigned to an organization (also referred to
            as service provider).
          example: 394101
          readOnly: true
          type: number
      type: object
    PathVisRoute:
      properties:
        pathId:
          description: Unique ID of path trace.
          example: "4711301366345855606023718047703941305741293841502186803"
          readOnly: true
          type: string
        hops:
          description: Array of hop objects indicating each step in the traceroute.
          items:
            $ref: '#/components/schemas/PathVisHop'
          type: array
      type: object
    PathVisHop:
      allOf:
      - $ref: '#/components/schemas/Hop'
      - properties:
          rdns:
            description: "Reverse DNS entry of IP, if available."
            example: core-router1.cpt2.host-h.net
            readOnly: true
            type: string
          network:
            description: Autonomous System originating the prefix.
            example: HETZNER (Pty) Ltd (AS 37153)
            readOnly: true
            type: string
          responseTime:
            description: RTT to the hop’s IP in milliseconds.
            example: 1
            readOnly: true
            type: integer
          location:
            description: Location information for the hop.
            example: "Cape Town, South Africa"
            readOnly: true
            type: string
        type: object
    Hop:
      properties:
        hop:
          description: The hop index.
          example: 1
          readOnly: true
          type: integer
        ipAddress:
          description: IP address of the hop.
          example: 196.40.106.237
          readOnly: true
          type: string
        prefix:
          description: Prefix of IP address shown in CIDR.
          example: 196.40.96.0/20
          readOnly: true
          type: string
      type: object
    PathVisEndpoint:
      properties:
        ipAddress:
          description: IP address of the hop destination.
          example: 196.40.106.237
          readOnly: true
          type: string
        numberOfHops:
          description: Number of hops for path trace to destination.
          example: 15
          readOnly: true
          type: integer
        pathId:
          description: Unique ID of path trace.
          example: "1230899668701775614109128428722974545787322404682781961521"
          readOnly: true
          type: string
        responseTime:
          description: RTT of the path trace to the destination in milliseconds.
          example: 1500
          readOnly: true
          type: integer
      type: object
    HttpTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/HttpTestResult'
          type: array
        test:
          $ref: '#/components/schemas/EndpointHttpServerTest'
      type: object
    HttpTestResult:
      allOf:
      - $ref: '#/components/schemas/TestResult'
      - properties:
          networkProfile:
            $ref: '#/components/schemas/NetworkProfile'
          connectTime:
            description: Time required to establish a TCP connection to the server
              in milliseconds.
            example: 2
            readOnly: true
            type: integer
          dnsTime:
            description: Time required to resolve DNS in milliseconds.
            example: 0
            readOnly: true
            type: integer
          errorType:
            $ref: '#/components/schemas/HttpErrorType'
          errorDetails:
            description: "Error details, if an error were encountered."
            readOnly: true
            type: string
          headers:
            $ref: '#/components/schemas/HttpTestResultHeaders'
          numRedirects:
            description: Number of redirects.
            example: 0
            readOnly: true
            type: integer
          receiveTime:
            description: Elapsed time between first and last byte of response in milliseconds.
            example: 1
            readOnly: true
            type: integer
          redirectTime:
            description: Cumulative redirect timing in milliseconds.
            example: 10
            readOnly: true
            type: integer
          responseCode:
            description: HTTP response code.
            example: 200
            readOnly: true
            type: integer
          responseTime:
            description: Time to first byte in milliseconds.
            example: 14
            readOnly: true
            type: integer
          serverIp:
            description: IP address of destination server.
            example: 193.2.1.88
            readOnly: true
            type: string
          sslTime:
            description: Time to negotiate SSL/TLS in milliseconds.
            example: 9
            readOnly: true
            type: integer
          totalTime:
            description: Total time is the response time + receive time.
            example: 15
            readOnly: true
            type: integer
          waitTime:
            description: Time elapsed between completion of request and first byte
              of response in milliseconds.
            example: 3
            readOnly: true
            type: integer
          wireSize:
            description: Size of content in bytes.
            example: 9993
            readOnly: true
            type: integer
        type: object
    HttpErrorType:
      default: connect
      description: Type of error encountered; corresponds to phase of connection.
      enum:
      - connect
      - dns
      - http
      - none
      - send
      - ssl
      - receive
      readOnly: true
      type: string
    HttpTestResultHeaders:
      description: Expandable object containing both request and response headers.
      properties:
        requestHeaders:
          description: "CRLF-delimited list of request headers in `header: value`\
            \ format."
          example: "GET / HTTP/1.1\r\nHost: www.thousandeyes.com\r\nUser-Agent: curl/7.58.0-DEV\r\
            \nAccept: */*\r\nAccept-Encoding: deflate, gzip\r\nX-ThousandEyes-Agent:\
            \ yes\r\n"
          readOnly: true
          type: string
        responseHeaders:
          description: "CRLF-delimited list of response headers in `header: value`\
            \ format."
          example: "HTTP/1.1 200 OK\r\nContent-Type: text/html;charset=UTF-8\r\nContent-Length:\
            \ 9993\r\nConnection: keep-alive\r\nDate: Mon, 04 May 2020 16:13:00 GMT\r\
            \nServer: Apache\r\nContent-Language: en-US\r\nContent-Encoding: gzip\r\
            \nX-Frame-Options: sameorigin\r\nCache-Control: max-age=600, must-revalidate\r\
            \nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options:\
            \ nosniff\r\nX-XSS-Protection: 1; mode=block\r\nVary: Accept-Encoding\r\
            \nX-Cache: Hit from cloudfront\r\nVia: 1.1 7ba3caf71ae7a52dd411d1a543e80cd8.cloudfront.net\
            \ (CloudFront)\r\nX-Amz-Cf-Pop: SFO5-C3\r\nX-Amz-Cf-Id: w4h42tkoJD-rEpkRDZUvnQBmy26GVGe6pUsuRr1Dphf7oajYbjXaOA==\r\
            \nAge: 132\r\n"
          readOnly: true
          type: string
      type: object
    NetworkDynamicTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/NetworkDynamicTestResult'
          type: array
        test:
          $ref: '#/components/schemas/DynamicTest'
      type: object
    NetworkDynamicTestResult:
      allOf:
      - $ref: '#/components/schemas/NetworkTestResult'
      - $ref: '#/components/schemas/DynamicBaseTestResult'
    DynamicBaseTestResult:
      properties:
        application:
          $ref: '#/components/schemas/DynamicTestApplication'
        webex:
          $ref: '#/components/schemas/DynamicBaseTestResult_webex'
      type: object
    PathVisDynamicTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/PathVisDynamicTestResult'
          type: array
        test:
          $ref: '#/components/schemas/DynamicTest'
      type: object
    PathVisDynamicTestResult:
      allOf:
      - $ref: '#/components/schemas/PathVisBaseTestResult'
      - $ref: '#/components/schemas/DynamicBaseTestResult'
      - properties:
          location:
            description: Geographic location of the pathvis.
            example: San Francisco Area
            readOnly: true
            type: string
          endpoints:
            description: "Shows an iteration of path trace, with each iteration specified\
              \ by a pathId."
            items:
              $ref: '#/components/schemas/PathVisEndpoint'
            type: array
        type: object
    PathVisDetailDynamicTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/PathVisDetailDynamicTestResult'
          type: array
        test:
          $ref: '#/components/schemas/DynamicTest'
      type: object
    PathVisDetailDynamicTestResult:
      allOf:
      - $ref: '#/components/schemas/PathVisDetailTestResult'
      - $ref: '#/components/schemas/DynamicBaseTestResult'
    EndpointResultRequestFilter:
      properties:
        location:
          description: Location of the endpoint agent.
          example:
          - San Francisco Bay Area
          - Germany
          items:
            type: string
          type: array
        connection:
          items:
            $ref: '#/components/schemas/InterfaceHardwareType'
          type: array
        platform:
          items:
            $ref: '#/components/schemas/Platform'
          type: array
        gateway:
          description: Endpoint agent default gateway IP address.
          example:
          - 78.153.54.204
          - 78.153.54.206
          items:
            type: string
          type: array
        proxyTarget:
          description: Endpoint agent proxy IP address.
          example:
          - 78.153.54.204
          - 78.153.54.206
          items:
            type: string
          type: array
        vpnTarget:
          description: Endpoint agent VPN endpoint IP address.
          example:
          - 78.153.54.204
          - 78.153.54.206
          items:
            type: string
          type: array
        agentId:
          description: Endpoint agent ID.
          example:
          - 3fde6422-f119-40e1-ae32-d08a1243c038
          - 236e6f18-9637-4a2f-b15f-7aa6a29c9fce
          items:
            format: uuid
            type: string
          type: array
        networkId:
          description: Network ID.
          example:
          - 660b34109d12
          - 660b34109d15
          items:
            type: string
          type: array
        ssid:
          description: WiFi SSID.
          example:
          - wifi-name
          - other-room-wifi
          items:
            type: string
          type: array
        bssid:
          description: WiFi BSSID.
          example:
          - 8c:68:c8:a5:0a:8c
          - 0c:51:01:e4:3e:d0
          items:
            type: string
          type: array
      type: object
    EndpointRealUserTestResultRequestFilter:
      allOf:
      - $ref: '#/components/schemas/EndpointResultRequestFilter'
      - properties:
          destinationIp:
            description: Web site destination IP address.
            example:
            - 84.255.241.1
            - 193.2.1.88
            items:
              type: string
            type: array
          domain:
            description: Web site base domain visited during the session.
            example:
            - thousandeyes.com
            items:
              type: string
            type: array
          trigger:
            description: Real user test trigger.
            example:
            - user
            items:
              $ref: '#/components/schemas/Trigger'
            type: array
          visitedSite:
            description: Web site domain visited during the session.
            example:
            - app.thousandeyes.com
            items:
              type: string
            type: array
        type: object
    Trigger:
      enum:
      - auto
      - user
      type: string
    EndpointRealUserTestBase:
      allOf:
      - properties:
          agentId:
            $ref: '#/components/schemas/AgentId'
          committed:
            description: UTC date when endpoint real user test was committed to the
              controller (ISO date-time format).
            example: 2022-07-17T22:00:54Z
            format: date-time
            readOnly: true
            type: string
          date:
            description: UTC date when endpoint real user test took place (ISO date-time
              format).
            example: 2022-07-17T22:00:54Z
            format: date-time
            readOnly: true
            type: string
          experienceScore:
            description: "Score rating a user’s experience when loading a particular\
              \ page, from 0 (the worst) to 1 (the best). [More details](https://docs.thousandeyes.com/product-documentation/end-user-monitoring/viewing-data/endpoint-agent-views-reference#user-experience-score)."
            example: 0.5
            format: double
            maximum: 1.0
            minimum: 0
            readOnly: true
            type: number
          numberOfPages:
            description: Number of web pages visited on target website.
            example: 2
            readOnly: true
            type: integer
          organizationName:
            description: Name of the AS organization `sourceAddress` belongs to.
            example: T-2 Access Network
            readOnly: true
            type: string
          port:
            description: Port used to visit target website.
            example: 443
            readOnly: true
            type: integer
          protocol:
            description: Protocol used to visit target website.
            example: https
            readOnly: true
            type: string
          roundId:
            $ref: '#/components/schemas/RoundId'
          sourceAddress:
            description: Public IP address of the endpoint agent during the session.
            example: 84.255.241.1
            readOnly: true
            type: string
          id:
            description: Endpoint real user test ID. Each endpoint real user test
              occurrence has a unique ID.
            example: 07625:1490529480:aVDViw0i
            readOnly: true
            type: string
          visitedSite:
            description: Domain used to visit target website.
            example: www.thousandeyes.com
            readOnly: true
            type: string
        type: object
    EndpointRealUserTest:
      allOf:
      - $ref: '#/components/schemas/EndpointRealUserTestBase'
      - properties:
          pageId:
            $ref: '#/components/schemas/EndpointPageId'
        type: object
    EndpointPageId:
      description: Web page ID. The page ID is unique only within an endpoint real
        user test.
      example: C31gBrYJ
      readOnly: true
      type: string
    EndpointRealUserTestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/EndpointRealUserTest'
          type: array
      type: object
    EndpointRealUserTestDetail:
      allOf:
      - $ref: '#/components/schemas/EndpointRealUserTestBase'
      - properties:
          browser:
            $ref: '#/components/schemas/EndpointBrowser'
          coordinates:
            $ref: '#/components/schemas/RealUserTestCoordinates'
          pages:
            description: Web site base domain visited during the session.
            items:
              $ref: '#/components/schemas/RealUserTestPage'
            type: array
          network:
            $ref: '#/components/schemas/RealUserTestNetwork'
        type: object
    EndpointRealUserTestDetailResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/EndpointRealUserTestDetail'
          type: array
      type: object
    EndpointBrowser:
      properties:
        name:
          description: Browser name.
          example: Google Chrome
          readOnly: true
          type: string
        version:
          description: Browser version.
          example: 116.0.0.0
          readOnly: true
          type: string
      type: object
    RealUserTestCoordinates:
      description: "Contains approximate GPS location of the endpoint agent, based\
        \ on endpoint agent’s public IP address."
      properties:
        latitude:
          description: Numeric representations of GPS coordinates.
          example: 46.0552778
          format: double
          readOnly: true
          type: number
        location:
          description: Represents named geographical location.
          example: Slovenia
          readOnly: true
          type: string
        longitude:
          description: Numeric representations of GPS coordinates.
          example: 14.5144444
          format: double
          readOnly: true
          type: number
      type: object
    RealUserTestPage:
      properties:
        pageId:
          description: Web page ID. The page ID is unique only within an endpoint
            real user test.
          example: C31gBrYJ
          readOnly: true
          type: string
        pageTitle:
          description: Web page title.
          example: Network Performance Resources | ThousandEyes
          readOnly: true
          type: string
        pageUrl:
          description: Web page url
          example: https://app.thousandeyes.com/settings/integrations
          readOnly: true
          type: string
        loadDate:
          description: UTC date when page load started (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        responseCode:
          description: HTTP response code.
          example: 200
          readOnly: true
          type: integer
        pageTimings:
          $ref: '#/components/schemas/RealUserTestPage_pageTimings'
      type: object
    RealUserTestNetwork:
      description: Contains details about network profile and conditions during session.
      properties:
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
        systemMetrics:
          $ref: '#/components/schemas/SystemMetrics'
        gatewayPing:
          $ref: '#/components/schemas/RealUserTestNetwork_gatewayPing'
        ping:
          $ref: '#/components/schemas/RealUserTestNetwork_ping'
        traceroute:
          $ref: '#/components/schemas/RealUserTestNetwork_traceroute'
        connectRtt:
          description: Represents the number of milliseconds required to establish
            TCP connectivity with the target.
          example: 77.777
          format: double
          readOnly: true
          type: number
        isIcmpBlocked:
          description: Set to `true` if network target is blocking ICMP echo (ping)
            queries.
          example: true
          readOnly: true
          type: boolean
        errors:
          description: Array of string representing possible network errors.
          example:
          - "ping: Request timed out before getting response"
          items:
            type: string
          readOnly: true
          type: array
        vpnPing:
          $ref: '#/components/schemas/RealUserTestNetwork_vpnPing'
        vpnTraceroute:
          $ref: '#/components/schemas/RealUserTestNetwork_vpnTraceroute'
      type: object
    NetworkInterface:
      properties:
        ipAddress:
          description: Network IP address.
          example: 10.0.0.13
          readOnly: true
          type: string
        subnetMask:
          description: Network subnet mask.
          example: 255.255.255.0
          readOnly: true
          type: string
        publicIpAddress:
          description: Network public IP address.
          example: 84.255.241.1
          readOnly: true
          type: string
        localPrefix:
          description: Network local prefix.
          example: 10.0.0.0
          readOnly: true
          type: string
        publicIpRange:
          description: Network public IP range.
          example: 84.255.241.0-84.255.241.255
          readOnly: true
          type: string
        dnsServers:
          description: Network DNS servers.
          example:
          - 8.8.8.8
          - 8.8.8.4
          items:
            type: string
          readOnly: true
          type: array
        hardwareType:
          $ref: '#/components/schemas/InterfaceHardwareType'
        interfaceName:
          description: Network interface name.
          example: en0
          readOnly: true
          type: string
      type: object
    NetworkProfile:
      allOf:
      - $ref: '#/components/schemas/NetworkInterface'
      - description: Contains basic network connectivity parameters.
        properties:
          error:
            description: Only present when there is an error
            example: An operation timed out.
            readOnly: true
            type: string
          gateway:
            description: Network gateway address.
            example: 10.0.0.1
            readOnly: true
            type: string
          wirelessProfile:
            $ref: '#/components/schemas/NetworkWirelessProfile'
          proxyProfile:
            $ref: '#/components/schemas/NetworkProxyProfile'
          ethernetProfile:
            $ref: '#/components/schemas/EthernetProfile'
          previousInterface:
            $ref: '#/components/schemas/NetworkInterface'
        type: object
    NetworkWirelessProfile:
      properties:
        ssid:
          description: Wireless network SSID.
          example: Internet for the masses
          readOnly: true
          type: string
        bssid:
          description: Wireless network BSSID.
          example: 4c:ba:ba:f4:fa:fa
          readOnly: true
          type: string
        channel:
          description: Wireless network channel.
          example: 1
          readOnly: true
          type: integer
        phyMode:
          description: Wireless network PHY mode.
          example: 802.11n
          readOnly: true
          type: string
        rssi:
          description: Wireless network RSSI.
          example: -38
          readOnly: true
          type: integer
        noise:
          description: Wireless network noise.
          example: -95
          readOnly: true
          type: integer
        quality:
          description: Wireless network quality.
          example: 100
          readOnly: true
          type: integer
        txRate:
          description: Wireless network transmitted rate.
          example: 130
          readOnly: true
          type: integer
        vendor:
          description: Wireless network device vendor.
          example: Cisco
          readOnly: true
          type: string
      type: object
    NetworkProxyProfile:
      properties:
        method:
          description: Proxy profile method.
          example: System
          readOnly: true
          type: string
        proxies:
          items:
            $ref: '#/components/schemas/NetworkProxyProfile_proxies_inner'
          type: array
      type: object
    EthernetProfile:
      properties:
        linkSpeed:
          description: Ethernet profile link speed
          example: 860
          readOnly: true
          type: number
      type: object
    NetworkPing:
      properties:
        avgRtt:
          description: Ping average response time.
          example: 7
          readOnly: true
          type: integer
        maxRtt:
          description: Ping maximum response time.
          example: 66
          readOnly: true
          type: integer
        meanDevRtt:
          description: Ping mean standard deviation response time.
          example: 11
          readOnly: true
          type: integer
        minRtt:
          description: Ping minimum response time.
          example: 1
          readOnly: true
          type: integer
        pktsReceived:
          description: Ping packets received.
          example: 10
          readOnly: true
          type: integer
        pktsSent:
          description: Ping packets sent.
          example: 10
          readOnly: true
          type: integer
        error:
          description: Only present when there is an error.
          example: An operation timed out.
          readOnly: true
          type: string
        infoFlags:
          example:
          - TE_INFO_ICMP_BLOCKED_BY_FIREWALL
          items:
            type: string
          readOnly: true
          type: array
      type: object
    TracerouteHop:
      allOf:
      - $ref: '#/components/schemas/Hop'
      - properties:
          asn:
            description: Unique number assigned to an organization (also referred
              to as service provider).
            example: 34779
            readOnly: true
            type: integer
          delay:
            description: Hop delay
            example: 5
            readOnly: true
            type: integer
          mpls:
            description: Hop Multiprotocol Label Switching.
            example:
            - "L=301472,E=0,S=1,T=1"
            items:
              type: string
            readOnly: true
            type: array
          name:
            description: The hop name.
            example: 89-210-88-65.access.t-2.net
            readOnly: true
            type: string
        type: object
    Traceroute:
      properties:
        destination:
          description: The target IP address.
          example: 13.32.22.232
          readOnly: true
          type: string
        error:
          description: Only present when there is an error
          example: An operation timed out.
          readOnly: true
          type: string
        infoFlags:
          example:
          - TE_INFO_ICMP_BLOCKED_BY_FIREWALL
          items:
            type: string
          readOnly: true
          type: array
        internalErrors:
          example:
          - TE_INFO_ICMP_BLOCKED_BY_FIREWALL
          items:
            type: string
          readOnly: true
          type: array
        hops:
          items:
            $ref: '#/components/schemas/TracerouteHop'
          type: array
      type: object
    RealUserTestPageResult:
      allOf:
      - $ref: '#/components/schemas/RealUserTestPage'
      - properties:
          agentId:
            $ref: '#/components/schemas/AgentId'
          id:
            description: Endpoint real user test ID. Each endpoint real user test
              occurrence has a unique ID.
            example: 07625:1490529480:aVDViw0i
            readOnly: true
            type: string
          roundId:
            $ref: '#/components/schemas/RoundId'
          responseTime:
            description: HTTP server response in milliseconds.
            example: 240
            readOnly: true
            type: integer
          systemMetrics:
            $ref: '#/components/schemas/SystemMetrics'
        type: object
    RealUserTestPageResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/RealUserTestPageResult'
          type: array
      type: object
    EndpointRealUserTestPageResult:
      example:
        har:
          log:
            browser:
              name: Google Chrome
              version: 57.0.2987.98
            creator:
              name: ThousandEyes Endpoint Agent
              version: 0.47.0
            entries:
            - pageref: page_1
              request:
                headers:
                - name: Upgrade-Insecure-Requests
                  value: "1"
                - name: User-Agent
                  value: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36\
                    \ (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36"
                - name: Accept
                  value: "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
                - name: Referer
                  value: https://www.thousandeyes.com/
                - name: Accept-Encoding
                  value: "gzip, deflate, sdch, br"
                - name: Accept-Language
                  value: "en-US,en;q=0.6"
                - name: Cookie
                  value: (removed)
                method: GET
                queryString:
                - name: locale
                  value: en-US
                url: https://www.thousandeyes.com/resources
              response:
                bodySize: 17776
                content:
                  mimeType: text/html;charset=ISO-8859-1
                  size: 17776
                headers:
                - name: Content-Type
                  value: text/html;charset=ISO-8859-1
                - name: Content-Length
                  value: "17776"
                - name: Connection
                  value: keep-alive
                - name: Date
                  value: "Sun, 26 Mar 2017 11:58:54 GMT"
                - name: Server
                  value: Apache
                - name: Cache-Control
                  value: "max-age=600, must-revalidate"
                - name: Content-Language
                  value: en-US
                - name: Content-Encoding
                  value: gzip
                - name: X-Frame-Options
                  value: sameorigin
                - name: Strict-Transport-Security
                  value: max-age=31536000
                - name: Vary
                  value: Accept-Encoding
                - name: X-Cache
                  value: Miss from cloudfront
                - name: Via
                  value: 1.1 5dbe09af3a2c87121e31ffa67f174f66.cloudfront.net (CloudFront)
                - name: X-Amz-Cf-Id
                  value: YkvlkBNKgHt5aMu9vcS22Z8kHn1MUr-8adupwhDk3j9vF-TpSyIxZA==
                headersSize: 527
                redirectURL: ""
                status: 200
                statusText: OK
              serverIPAddress: 13.32.22.80
              startedDateTime: 2017-03-22T11:58:54.123+02:00
              time: 177
              timings:
                blocked: -1
                connect: -1
                dns: -1
                receive: 27
                send: -1
                ssl: -1
                wait: 150
            - pageref: page_1
              request:
                headers:
                - name: User-Agent
                  value: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36\
                    \ (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36"
                - name: Accept
                  value: '*/*'
                - name: Referer
                  value: https://www.thousandeyes.com/resources
                - name: Accept-Encoding
                  value: "gzip, deflate, sdch, br"
                - name: Accept-Language
                  value: "en-US,en;q=0.6"
                method: GET
                queryString: []
                url: https://use.typekit.net/cjy5myw.js
              response:
                bodySize: 0
                content:
                  mimeType: text/javascript;charset=utf-8
                  size: 7814
                headers:
                - name: status
                  value: "200"
                - name: access-control-allow-origin
                  value: '*'
                - name: cache-control
                  value: "public, max-age=600, stale-while-revalidate=604800"
                - name: content-encoding
                  value: gzip
                - name: content-type
                  value: text/javascript;charset=utf-8
                - name: server
                  value: nginx
                - name: status
                  value: 200 OK
                - name: timing-allow-origin
                  value: '*'
                - name: vary
                  value: Accept-Encoding
                - name: content-length
                  value: "7814"
                - name: date
                  value: "Sun, 26 Mar 2017 11:58:43 GMT"
                headersSize: 334
                redirectURL: ""
                status: 200
                statusText: OK
              serverIPAddress: 104.103.103.234
              startedDateTime: 2017-03-22T11:58:54.123+02:00
              time: 72
              timings:
                blocked: -1
                connect: -1
                dns: -1
                receive: 10
                send: -1
                ssl: -1
                wait: 62
            pages:
            - id: page_1
              pageTimings:
                onContentLoad: 874
                onLoad: 3492
              responseCode: 200
              startedDateTime: 2017-03-22T11:58:54.123+02:00
              title: Network Performance Resources | ThousandEyes
            version: "1.2"
            systemMetrics:
              startTimeMs: 1581508857327
              endTimeMs: 1581508867333
              cpuUtilization:
                min: 0.30859375
                max: 0.5625
                mean: 0.38931831001805056
                median: 0.353515625
                stdDev: 0.08389194281742307
                count: 10
              physicalMemoryUsedBytes:
                min: 1.2805128192E10
                max: 1.2825530368E10
                mean: 1.281914582109091E10
                median: 1.2818219008E10
                stdDev: 5741124.05691331
                count: 11
              physicalMemoryTotalBytes: 17069891584
      type: object
    RealUserTestNetworkResult:
      properties:
        agentId:
          description: "Unique ID of endpoint agent, from `/endpoint/agents` endpoint."
          example: 861b7557-cd57-4bbb-b648-00bddf88ef49
          format: uuid
          readOnly: true
          type: string
        date:
          description: UTC date when endpoint real user test took place (ISO date-time
            format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        id:
          description: Endpoint real user test ID. Each endpoint real user test occurrence
            has a unique ID.
          example: 07625:1490529480:aVDViw0i
          readOnly: true
          type: string
        roundId:
          description: Epoch time (seconds) indicating the start time of the round.
          example: 1384309800
          readOnly: true
          type: integer
        destination:
          $ref: '#/components/schemas/NetworkMetrics'
        vpn:
          $ref: '#/components/schemas/NetworkMetrics'
        proxy:
          $ref: '#/components/schemas/NetworkMetrics'
        systemMetrics:
          $ref: '#/components/schemas/SystemMetrics'
      type: object
    NetworkMetrics:
      properties:
        jitter:
          description: Network jitter.
          example: 46
          readOnly: true
          type: integer
        latency:
          description: Network latency.
          example: 150
          readOnly: true
          type: integer
        loss:
          description: Network loss.
          example: 0.1
          format: double
          readOnly: true
          type: number
        target:
          description: Network target IP address.
          example: 54.208.6.220
          readOnly: true
          type: string
      type: object
    RealUserTestNetworkResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/RealUserTestNetworkResult'
          type: array
      type: object
    EndpointNetworkTopologyResultRequestFilter:
      allOf:
      - $ref: '#/components/schemas/EndpointResultRequestFilter'
      - properties:
          type:
            description: Web site base domain visited during the session.
            example:
            - vpn
            - proxy
            items:
              $ref: '#/components/schemas/NetworkTopologyType'
            type: array
        type: object
    NetworkTopologyType:
      enum:
      - vpn
      - proxy
      - gateway
      type: string
    LocalNetworkTopologyResultBase:
      properties:
        agentId:
          description: "Unique ID of endpoint agent, from `/endpoint/agents` endpoint."
          example: 861b7557-cd57-4bbb-b648-00bddf88ef49
          format: uuid
          readOnly: true
          type: string
        date:
          description: UTC date when endpoint network topology took place (ISO date-time
            format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        networkTopologyId:
          description: Network topology ID. Each network topology occurrence has a
            unique ID.
          example: 00160:54c3a4b180c6:1490536500:c7a58c49
          readOnly: true
          type: string
        roundId:
          description: Epoch time (seconds) indicating the start time of the round.
          example: 1384309800
          readOnly: true
          type: integer
        target:
          description: "IP of the target the network topology was performed against.\
            \ This is typically a default gateway, proxy or VPN endpoint."
          example: 10.0.2.2
          readOnly: true
          type: string
        targetPort:
          description: Port of the target the network topology was performed against.
          example: 80
          readOnly: true
          type: number
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkTopologyType'
          readOnly: true
        icmpPing:
          $ref: '#/components/schemas/NetworkPing'
        isIcmpBlocked:
          description: Set to `true` if network target is blocking ICMP echo (ping)
            queries.
          example: true
          readOnly: true
          type: boolean
        tcpConnect:
          $ref: '#/components/schemas/TcpConnect'
        systemMetrics:
          $ref: '#/components/schemas/SystemMetrics'
      type: object
    LocalNetworkTopologyResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/LocalNetworkTopologyResultBase'
          type: array
      type: object
    LocalNetworkResult:
      properties:
        networkId:
          description: The network ID. Each network occurrence has a unique ID.
          example: 006c4fa7a054
          readOnly: true
          type: string
        networkName:
          description: The network name.
          example: 10.5.51.0 (in 178.216.56.0/21)
          readOnly: true
          type: string
        localPrefix:
          description: Network local private address.
          example: 10.5.51.0
          readOnly: true
          type: string
        publicIpRange:
          description: Network public IP range.
          example: 178.216.56.0-178.216.63.255
          readOnly: true
          type: string
      type: object
    LocalNetworkResults:
      properties:
        localNetworks:
          items:
            $ref: '#/components/schemas/LocalNetworkResult'
          type: array
      type: object
    LocalNetworkTopologyResult:
      allOf:
      - $ref: '#/components/schemas/LocalNetworkTopologyResultBase'
      - properties:
          coordinates:
            $ref: '#/components/schemas/RealUserTestCoordinates'
          networkProfile:
            $ref: '#/components/schemas/NetworkProfile'
          icmpTraceroute:
            $ref: '#/components/schemas/Traceroute'
          icmpTraceroutes:
            items:
              $ref: '#/components/schemas/Traceroute'
            type: array
        type: object
    LocalNetworkTopologyDetailResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/LocalNetworkTopologyResult'
          type: array
      type: object
    IcmpBlocked:
      description: Set to `true` if network target is blocking ICMP echo (ping) queries.
      example: true
      readOnly: true
      type: boolean
    EndpointPingDataPointScore:
      properties:
        applicationScore:
          description: "Fine grained score between 0-100 based on metrics (latency,\
            \ jitter, loss)"
          type: number
        quality:
          $ref: '#/components/schemas/ApplicationScoreQuality'
      type: object
    EndpointHttpDataPointScore:
      properties:
        applicationScore:
          description: Fine grained score between 0-100 based on `time to first byte`
            metric
          type: number
        quality:
          $ref: '#/components/schemas/ApplicationScoreQuality'
      type: object
    ApplicationScoreQuality:
      enum:
      - great
      - good
      - poor
      type: string
    TcpConnect:
      properties:
        rtt:
          description: Represents the number of milliseconds required to establish
            TCP connectivity with the target
          example: 77.777
          format: double
          readOnly: true
          type: number
        errorCode:
          description: Only present when there is an error
          example: ERR_TIMED_OUT
          readOnly: true
          type: string
        error:
          description: Only present when there is an error
          example: An operation timed out.
          readOnly: true
          type: string
        infoFlags:
          example:
          - TE_INFO_ICMP_BLOCKED_BY_FIREWALL
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ErrorFlags:
      example:
      - TE_INFO_ICMP_BLOCKED_BY_FIREWALL
      items:
        type: string
      readOnly: true
      type: array
    Expand:
      enum:
      - header
      type: string
    QueryWindow:
      properties:
        startDate:
          description: "(Optional) When passing `window` or `startDate` parameter,\
            \  the client will also receive the `startDate` field indicating the UTC\
            \ start date of the data's time range being retrieved  (ISO date-time\
            \ format)."
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        endDate:
          description: "(Optional) When passing `window` or `endDate` parameter, \
            \ the client will also receive the `endDate` field indicating the UTC\
            \ end date of the data's time range being retrieved  (ISO date-time format)."
          example: 2022-07-18T22:00:54Z
          format: date-time
          readOnly: true
          type: string
      type: object
    StartDate:
      description: "(Optional) When passing `window` or `startDate` parameter,  the\
        \ client will also receive the `startDate` field indicating the UTC start\
        \ date of the data's time range being retrieved  (ISO date-time format)."
      example: 2022-07-17T22:00:54Z
      format: date-time
      readOnly: true
      type: string
    EndDate:
      description: "(Optional) When passing `window` or `endDate` parameter,  the\
        \ client will also receive the `endDate` field indicating the UTC end date\
        \ of the data's time range being retrieved  (ISO date-time format)."
      example: 2022-07-18T22:00:54Z
      format: date-time
      readOnly: true
      type: string
    PaginationNextLink:
      description: A links object containing a related link for forward pagination.
      properties:
        _links:
          $ref: '#/components/schemas/PaginationNextLink__links'
      type: object
    UnauthorizedError:
      properties:
        error:
          example: invalid_token
          type: string
        error_description:
          example: Invalid access token
          type: string
      type: object
    Error:
      properties:
        type:
          description: "A URI reference that identifies the problem type. When this\
            \ member is not present, its value is assumed to be \"about:blank\"."
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem.
          type: string
      type: object
    SelfLinks:
      properties:
        _links:
          $ref: '#/components/schemas/SelfLinks__links'
      readOnly: true
      type: object
    Link:
      description: A hyperlink from the containing resource to a URI.
      properties:
        href:
          description: "Its value is either a URI [RFC3986] or a URI template [RFC6570]."
          example: https://api.thousandeyes.com/v7/link/to/resource/id
          type: string
        templated:
          description: Should be true when the link object's "href" property is a
            URI template.
          type: boolean
        type:
          description: Used as a hint to indicate the media type expected when dereferencing
            the target resource.
          type: string
        deprecation:
          description: Its presence indicates that the link is to be deprecated at
            a future date. Its value is a URL that should provide further information
            about the deprecation.
          type: string
        name:
          description: Its value may be used as a secondary key for selecting link
            objects that share the same relation type.
          type: string
        profile:
          description: A URI that hints about the profile of the target resource.
          type: string
        title:
          description: Intended for labelling the link with a human-readable identifier
          type: string
        hreflang:
          description: Indicates the language of the target resource
          type: string
      required:
      - href
      type: object
    SortOrder:
      description: "Parameter indicates the ascending/descending  order of the sorting,\
        \ using either the asc or desc values."
      enum:
      - asc
      - desc
      example: desc
      type: string
    AccountGroupId:
      properties:
        aid:
          description: A unique identifier associated with your account group. You
            can retrieve your `AccountGroupId` from the `/account-groups` endpoint.
          example: "11"
          type: string
      type: object
    EndpointScheduledTest:
      discriminator:
        mapping:
          agent-to-server: '#/components/schemas/EndpointAgentToServerTest'
          http-server: '#/components/schemas/EndpointHttpServerTest'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/EndpointAgentToServerTest'
      - $ref: '#/components/schemas/EndpointHttpServerTest'
    EndpointAgentToServerTest:
      allOf:
      - $ref: '#/components/schemas/EndpointTest'
      - properties:
          type:
            $ref: '#/components/schemas/EndpointAgentToServerType'
        type: object
    EndpointTest:
      properties:
        _links:
          $ref: '#/components/schemas/EndpointTestLinks'
        agentSelectorConfig:
          $ref: '#/components/schemas/EndpointAgentSelectorConfig'
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        interval:
          $ref: '#/components/schemas/TestInterval'
        isEnabled:
          default: true
          description: Indicates if test is enabled.
          example: true
          readOnly: true
          type: boolean
        isSavedEvent:
          description: Indicates if the test is a saved event.
          example: false
          readOnly: true
          type: boolean
        hasPathTraceInSession:
          description: "Enables \"in session\" path trace. When enabled, this option\
            \ initiates a TCP session with the target server and sends path trace\
            \ packets within the established TCP session."
          example: true
          type: boolean
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        networkMeasurements:
          default: true
          description: Enable or disable network measurements. Set to true to enable
            or false to disable network measurements.
          type: boolean
        port:
          description: "Port number, if not specified, the port is selected based\
            \ on a protocol (HTTP 80, HTTPS 443)."
          example: 80
          type: integer
        protocol:
          $ref: '#/components/schemas/EndpointTestProtocol'
        server:
          description: Target domain name or IP address.
          example: www.example.com
          type: string
        testId:
          description: Each test is assigned a unique ID to access test data from
            other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        aid:
          $ref: '#/components/schemas/EndpointTest_aid'
        testName:
          description: Name of the test.
          example: Test name
          type: string
        type:
          $ref: '#/components/schemas/EndpointScheduledTestType'
      type: object
    EndpointTestLinks:
      description: A list of links that can be accessed to get more information.
      properties:
        self:
          $ref: '#/components/schemas/EndpointTestLinks_self'
        testResults:
          $ref: '#/components/schemas/EndpointTestLinks_testResults'
      type: object
    TestResults:
      description: Reference to the test results.
      items:
        $ref: '#/components/schemas/Link'
      type: array
    EndpointAgentSelectorConfig:
      description: Agents selection object based on agentSelectorType.
      discriminator:
        mapping:
          all-agents: '#/components/schemas/EndpointAllAgentsSelectorConfig'
          specific-agents: '#/components/schemas/EndpointSpecificAgentsSelectorConfig'
          agent-labels: '#/components/schemas/EndpointAgentLabelsSelectorConfig'
        propertyName: agentSelectorType
      oneOf:
      - $ref: '#/components/schemas/EndpointAllAgentsSelectorConfig'
      - $ref: '#/components/schemas/EndpointAgentLabelsSelectorConfig'
      - $ref: '#/components/schemas/EndpointSpecificAgentsSelectorConfig'
      readOnly: true
      type: object
    EndpointAllAgentsSelectorConfig:
      description: Any agent selection object.
      properties:
        agentSelectorType:
          $ref: '#/components/schemas/AllAgentsSelectorType'
        maxMachines:
          description: Maximum number of agents which can execute the test.
          example: 10
          maximum: 5000
          minimum: 1
          type: integer
      readOnly: true
      type: object
    AllAgentsSelectorType:
      default: all-agents
      enum:
      - all-agents
      type: string
    EndpointTestMaxMachines:
      description: Maximum number of agents which can execute the test.
      example: 10
      maximum: 5000
      minimum: 1
      type: integer
    EndpointAgentLabelsSelectorConfig:
      description: Agent labels selection object.
      properties:
        agentSelectorType:
          $ref: '#/components/schemas/AgentLabelsSelectorType'
        maxMachines:
          description: Maximum number of agents which can execute the test.
          example: 10
          maximum: 5000
          minimum: 1
          type: integer
        endpointAgentLabels:
          description: "List of endpoint agent label IDs (obtained from `/endpoint/labels`\
            \ endpoint), required when `agentSelectorType` is set to `agent-labels`."
          example:
          - "567"
          - "214"
          items:
            type: string
          type: array
      readOnly: true
      type: object
    AgentLabelsSelectorType:
      default: agent-labels
      enum:
      - agent-labels
      type: string
    EndpointAgentLabels:
      description: "List of endpoint agent label IDs (obtained from `/endpoint/labels`\
        \ endpoint), required when `agentSelectorType` is set to `agent-labels`."
      example:
      - "567"
      - "214"
      items:
        type: string
      type: array
    EndpointSpecificAgentsSelectorConfig:
      description: Specific agents selection object.
      properties:
        agentSelectorType:
          $ref: '#/components/schemas/SpecificAgentsSelectorType'
        maxMachines:
          description: Maximum number of agents which can execute the test.
          example: 10
          maximum: 5000
          minimum: 1
          type: integer
        agents:
          description: List of endpoint agent IDs (obtained from `/endpoint/agents`
            endpoint). Required when `agentSelectorType` is set to `specific-agent`.
          example:
          - 0a3b9998-dc3a-4ff2-b50d-ac4a7cd986e1
          - 66eec0f1-72b4-4755-aa83-3aed61d17f3c
          items:
            format: uuid
            type: string
          type: array
      readOnly: true
      type: object
    SpecificAgentsSelectorType:
      default: specific-agents
      enum:
      - specific-agents
      type: string
    EndpointTestAgents:
      description: List of endpoint agent IDs (obtained from `/endpoint/agents` endpoint).
        Required when `agentSelectorType` is set to `specific-agent`.
      example:
      - 0a3b9998-dc3a-4ff2-b50d-ac4a7cd986e1
      - 66eec0f1-72b4-4755-aa83-3aed61d17f3c
      items:
        format: uuid
        type: string
      type: array
    TestCreatedDate:
      description: UTC created date (ISO date-time format).
      example: 2022-07-17T22:00:54Z
      format: date-time
      readOnly: true
      type: string
    TestInterval:
      description: Interval between test runs in seconds.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1800
      - 3600
      example: 120
      type: integer
    TestIsEnabled:
      default: true
      description: Indicates if test is enabled.
      example: true
      readOnly: true
      type: boolean
    TestIsSavedEvent:
      description: Indicates if the test is a saved event.
      example: false
      readOnly: true
      type: boolean
    TestHasPathTraceInSession:
      description: "Enables \"in session\" path trace. When enabled, this option initiates\
        \ a TCP session with the target server and sends path trace packets within\
        \ the established TCP session."
      example: true
      type: boolean
    TestNetworkMeasurements:
      default: true
      description: Enable or disable network measurements. Set to true to enable or
        false to disable network measurements.
      type: boolean
    EndpointTestPort:
      description: "Port number, if not specified, the port is selected based on a\
        \ protocol (HTTP 80, HTTPS 443)."
      example: 80
      type: integer
    EndpointTestProtocol:
      default: icmp
      description: Protocol used to perform the test.
      enum:
      - icmp
      - icmp-with-tcp-connect
      - tcp
      - prefer-tcp
      - ast-autodetect
      - autodetect
      type: string
    TestName:
      description: Name of the test.
      example: Test name
      type: string
    EndpointScheduledTestType:
      description: Type of test being queried.
      enum:
      - agent-to-server
      - http-server
      example: agent-to-server
      readOnly: true
      type: string
    EndpointAgentToServerType:
      description: Type of test being queried.
      enum:
      - agent-to-server
      example: agent-to-server
      readOnly: true
      type: string
    EndpointHttpServerTest:
      allOf:
      - $ref: '#/components/schemas/EndpointTest'
      - $ref: '#/components/schemas/EndpointHttpServerBaseTest'
      - properties:
          type:
            $ref: '#/components/schemas/EndpointHttpServerType'
          contentRegex:
            description: "Content regex, this field does not require escaping."
            example: (regex)+
            type: string
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to false."
            type: boolean
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          interval:
            $ref: '#/components/schemas/TestInterval'
          postBody:
            description: "Enter the body for the HTTP POST request in this field.\
              \ No special escaping is necessary. If the post body is provided with\
              \ content, the `requestMethod` is automatically set to POST."
            example: body
            type: string
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
        type: object
    EndpointHttpServerBaseTest:
      properties:
        authType:
          $ref: '#/components/schemas/EndpointTestAuthType'
        hasPathTraceInSession:
          description: "Enables \"in session\" path trace. When enabled, this option\
            \ initiates a TCP session with the target server and sends path trace\
            \ packets within the established TCP session."
          example: true
          type: boolean
        httpTimeLimit:
          description: Maximum amount of time in milliseconds the agents wait before
            a request times out.
          example: 5000
          type: integer
        protocol:
          $ref: '#/components/schemas/EndpointTestProtocol'
        url:
          description: "Test target URL. Optionally, you can specify a protocol (http\
            \ or https). If no protocol is provided, the default `https` protocol\
            \ is used."
          example: www.example.com
          type: string
        username:
          description: Username for Basic/NTLM authentication.
          example: username
          type: string
        sslVersionId:
          $ref: '#/components/schemas/TestSslVersionId'
        tcpProbeMode:
          $ref: '#/components/schemas/TestProbeMode'
        verifyCertificate:
          description: Flag indicating if a certificate should be verified.
          example: false
          type: boolean
      type: object
    EndpointTestAuthType:
      default: none
      description: HTTP authentication type.
      enum:
      - none
      - basic
      - ntlm
      type: string
    TestUsername:
      description: Username for Basic/NTLM authentication.
      example: username
      type: string
    TestSslVersionId:
      description: |
        SSL version options:

        * Use '0' for automatic selection.
        * Use '3' for SSLv3.
        * Use '4' for TLS v1.0.
        * Use '5' for TLS v1.1.
        * Use '6' for TLS v1.2.
      enum:
      - "0"
      - "3"
      - "4"
      - "5"
      - "6"
      example: "0"
      type: string
    TestProbeMode:
      default: auto
      description: "Probe mode used by network test, only valid when the protocol\
        \ is set to TCP."
      enum:
      - auto
      - sack
      - syn
      type: string
    EndpointHttpServerType:
      description: Type of test being queried.
      enum:
      - http-server
      example: http-server
      readOnly: true
      type: string
    TestHttpTargetTime:
      description: "Target time for HTTP server completion, specified in milliseconds."
      example: 100
      maximum: 5000
      minimum: 100
      type: integer
    TestHttpVersion:
      default: 2
      description: "HTTP protocol version. Set to '2' to prefer HTTP/2, or '1' to\
        \ use only HTTP/1.1."
      maximum: 2
      minimum: 1
      type: integer
    TestSslVersion:
      description: Reflects the verbose SSL protocol version used by a test.
      example: Auto
      readOnly: true
      type: string
    TestUseNtlm:
      description: "Set to true to use NTLM, false to use Basic Authentication. Requires\
        \ username and password to be set."
      example: false
      type: boolean
    TestUserAgent:
      description: User-agent string to be provided during the test.
      example: curl
      type: string
    VpnType:
      description: Name of the VPN provider.
      enum:
      - cisco-anyconnect
      - palo-alto-globalprotect
      - ivanti-connect-secure
      - zscaler-internet-access
      - f5-big-ip
      type: string
    DynamicTest:
      properties:
        _links:
          $ref: '#/components/schemas/DynamicTestLinks'
        agentSelectorConfig:
          $ref: '#/components/schemas/EndpointAgentSelectorConfig'
        application:
          $ref: '#/components/schemas/DynamicTestApplication'
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        interval:
          $ref: '#/components/schemas/TestInterval'
        isEnabled:
          default: true
          description: Indicates if test is enabled.
          example: true
          readOnly: true
          type: boolean
        hasPathTraceInSession:
          allOf:
          - $ref: '#/components/schemas/TestHasPathTraceInSession'
          readOnly: true
        hasPing:
          default: true
          description: Optional flag indicating if the test should run ping.
          type: boolean
        hasTraceroute:
          default: true
          description: Optional flag indicating if the test should run traceroute.
          type: boolean
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        networkMeasurements:
          allOf:
          - $ref: '#/components/schemas/TestNetworkMeasurements'
          readOnly: true
        protocol:
          $ref: '#/components/schemas/EndpointTestProtocol'
        tcpProbeMode:
          allOf:
          - $ref: '#/components/schemas/TestProbeMode'
          readOnly: true
        testId:
          description: Each test is assigned a unique ID; this is used to access test
            information and results from other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        aid:
          $ref: '#/components/schemas/EndpointTest_aid'
        testName:
          description: Name of the test.
          example: Test name
          type: string
      type: object
    DynamicTestLinks:
      description: A list of links that can be accessed to get more information.
      properties:
        self:
          $ref: '#/components/schemas/DynamicTestLinks_self'
        testResults:
          $ref: '#/components/schemas/DynamicTestLinks_testResults'
      readOnly: true
      type: object
    DynamicTestApplication:
      description: Which supported application to monitor.
      enum:
      - microsoft-teams
      - webex
      - zoom
      example: webex
      type: string
    TestHasPing:
      default: true
      description: Optional flag indicating if the test should run ping.
      type: boolean
    TestHasTraceRoute:
      default: true
      description: Optional flag indicating if the test should run traceroute.
      type: boolean
    InterfaceHardwareType:
      enum:
      - unknown
      - wireless
      - ethernet
      - modem
      - virtual
      - loopback
      - other
      example: wireless
      type: string
    Platform:
      description: OS platform types
      enum:
      - windows
      - linux
      - mac
      example: mac
      type: string
    post_fetch_test_result_metrics_200_response:
      allOf:
      - $ref: '#/components/schemas/NetworkTestResults'
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/PaginationNextLink'
    post_fetch_test_result_metrics_multi_test_200_response:
      allOf:
      - $ref: '#/components/schemas/MultiTestIdNetworkTestResults'
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/PaginationNextLink'
    get_test_result_network_pathvis_200_response:
      allOf:
      - $ref: '#/components/schemas/PathVisTestResults'
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/PaginationNextLink'
      - $ref: '#/components/schemas/SelfLinks'
    get_test_result_pathvis_agent_round_200_response:
      allOf:
      - $ref: '#/components/schemas/PathVisDetailTestResults'
      - $ref: '#/components/schemas/SelfLinks'
    get_test_result_http_server_200_response:
      allOf:
      - $ref: '#/components/schemas/HttpTestResults'
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/PaginationNextLink'
    post_fetch_dynamic_test_result_metrics_200_response:
      allOf:
      - $ref: '#/components/schemas/NetworkDynamicTestResults'
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/PaginationNextLink'
    get_dynamic_test_result_network_pathvis_200_response:
      allOf:
      - $ref: '#/components/schemas/PathVisDynamicTestResults'
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/PaginationNextLink'
      - $ref: '#/components/schemas/SelfLinks'
    get_dynamic_test_result_pathvis_agent_round_200_response:
      allOf:
      - $ref: '#/components/schemas/PathVisDetailDynamicTestResults'
      - $ref: '#/components/schemas/SelfLinks'
    get_endpoint_real_user_tests_request:
      properties:
        searchFilters:
          $ref: '#/components/schemas/EndpointRealUserTestResultRequestFilter'
      type: object
    get_endpoint_real_user_tests_200_response:
      allOf:
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/EndpointRealUserTestResults'
      - $ref: '#/components/schemas/PaginationNextLink'
    get_endpoint_real_user_test_details_200_response:
      allOf:
      - $ref: '#/components/schemas/EndpointRealUserTestDetailResults'
      - $ref: '#/components/schemas/SelfLinks'
    get_endpoint_real_user_tests_pages_200_response:
      allOf:
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/RealUserTestPageResults'
      - $ref: '#/components/schemas/PaginationNextLink'
    get_endpoint_real_user_test_pages_details_200_response:
      allOf:
      - $ref: '#/components/schemas/EndpointRealUserTestPageResult'
      - $ref: '#/components/schemas/SelfLinks'
    get_endpoint_real_user_tests_network_200_response:
      allOf:
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/RealUserTestNetworkResults'
      - $ref: '#/components/schemas/PaginationNextLink'
    get_endpoint_local_networks_200_response:
      allOf:
      - $ref: '#/components/schemas/LocalNetworkResults'
      - $ref: '#/components/schemas/SelfLinks'
    get_endpoint_local_networks_topologies_request:
      properties:
        searchFilters:
          $ref: '#/components/schemas/EndpointNetworkTopologyResultRequestFilter'
      type: object
    get_endpoint_local_networks_topologies_200_response:
      allOf:
      - $ref: '#/components/schemas/QueryWindow'
      - $ref: '#/components/schemas/LocalNetworkTopologyResults'
      - $ref: '#/components/schemas/PaginationNextLink'
    get_endpoint_local_network_topology_details_200_response:
      allOf:
      - $ref: '#/components/schemas/LocalNetworkTopologyDetailResults'
      - $ref: '#/components/schemas/SelfLinks'
    DynamicBaseTestResult_webex:
      description: Contains object with webex conference information. Only returned
        when `application` == `webex`.
      properties:
        conferenceId:
          description: Webex conference ID.
          example: "225817074608419375"
          readOnly: true
          type: string
        correlationId:
          description: Webex conference correlation ID.
          example: "22581707460321454"
          readOnly: true
          type: string
      type: object
    RealUserTestPage_pageTimings:
      properties:
        onContentLoad:
          description: DOM load time in milliseconds.
          example: 1483
          readOnly: true
          type: integer
        onLoad:
          description: Page load time in milliseconds.
          example: 4569
          readOnly: true
          type: integer
      type: object
    RealUserTestNetwork_gatewayPing:
      allOf:
      - description: Contains numeric parameters representing results of a ping test
          performed against the endpoint agent default gateway.
      - $ref: '#/components/schemas/NetworkPing'
    RealUserTestNetwork_ping:
      allOf:
      - description: Contains number parameters representing results of a ping test
          performed against the target website.
      - $ref: '#/components/schemas/NetworkPing'
    RealUserTestNetwork_traceroute:
      allOf:
      - description: Contains parameters representing results of a trace route test
          performed against the target.
      - $ref: '#/components/schemas/Traceroute'
    RealUserTestNetwork_vpnPing:
      allOf:
      - description: Contains number parameters representing results of a ping test
          performed against the target website on the VPN.
      - $ref: '#/components/schemas/NetworkPing'
    RealUserTestNetwork_vpnTraceroute:
      allOf:
      - description: Contains parameters representing results of a trace route test
          performed against the target on the VPN.
      - $ref: '#/components/schemas/Traceroute'
    NetworkProxyProfile_proxies_inner:
      properties:
        bypass:
          description: Proxy bypass expression.
          example: '*.local;169.254/16'
          readOnly: true
          type: string
        proxy:
          description: Proxy mode.
          example: <direct>
          readOnly: true
          type: string
      type: object
    PaginationNextLink__links:
      properties:
        next:
          $ref: '#/components/schemas/Link'
      type: object
    SelfLinks__links:
      description: A links object containing the self link.
      properties:
        self:
          $ref: '#/components/schemas/Link'
      readOnly: true
      type: object
    EndpointTest_aid:
      allOf:
      - $ref: '#/components/schemas/AccountGroupId'
      - readOnly: true
    EndpointTestLinks_self:
      allOf:
      - description: A reference to the test.
        example:
          href: "https://api.thousandeyes.com/v7/endpoint/tests/{type}/281474976710706"
      - $ref: '#/components/schemas/Link'
    EndpointTestLinks_testResults:
      example:
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/scheduled-tests/281474976710706/network/filter
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/scheduled-tests/281474976710706/pathvis
      oneOf:
      - $ref: '#/components/schemas/TestResults'
      - $ref: '#/components/schemas/Link'
    DynamicTestLinks_self:
      allOf:
      - description: The reference to the test.
        example:
          href: https://api.thousandeyes.com/v7/dynamic-tests/agent-to-server/281474976710706
      - $ref: '#/components/schemas/Link'
    DynamicTestLinks_testResults:
      example:
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/dynamic-tests/281474976710706/network/filter
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/dynamic-tests/281474976710706/pathvis
      oneOf:
      - $ref: '#/components/schemas/TestResults'
      - $ref: '#/components/schemas/Link'
  securitySchemes:
    BearerAuth:
      description: Bearer authentication token
      scheme: bearer
      type: http

