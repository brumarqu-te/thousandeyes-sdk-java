/*
 * Endpoint Test Results API
 * Retrieve results for scheduled and dynamic tests on endpoint agents.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api;

import com.thousandeyes.ApiException;
import com.thousandeyes.api.model.EndpointRealUserTestResultRequestFilter;
import com.thousandeyes.api.model.Error;
import com.thousandeyes.api.model.GetEndpointRealUserTestDetails200Response;
import com.thousandeyes.api.model.GetEndpointRealUserTestPagesDetails200Response;
import com.thousandeyes.api.model.GetEndpointRealUserTests200Response;
import com.thousandeyes.api.model.GetEndpointRealUserTestsNetwork200Response;
import com.thousandeyes.api.model.GetEndpointRealUserTestsPages200Response;
import com.thousandeyes.api.model.GetEndpointRealUserTestsRequest;
import java.time.OffsetDateTime;
import com.thousandeyes.api.model.UnauthorizedError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RealUserTestsResultsApi
 */
@Disabled
public class RealUserTestsResultsApiTest {

    private final RealUserTestsResultsApi api = new RealUserTestsResultsApi();

    /**
     * Retrieve endpoint real user test
     *
     * Provides details for an endpoint real user test. Returns a results array containing detailed information about endpoint real user tests.\&quot; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEndpointRealUserTestDetailsTest() throws ApiException {
        String id = null;
        String aid = null;
        GetEndpointRealUserTestDetails200Response response = api.getEndpointRealUserTestDetails(id, aid);
        // TODO: test validations
    }

    /**
     * Retrieve endpoint real user test page
     *
     * Returns details for endpoint real user test web page request.  Provides complete waterfall information with all object requests.  Sends back detailed endpoint real user test web page request.  Returned object has a single field: &#x60;har&#x60; which is an HAR object according to the HTTP Archive 1.2 specifications.  [You can read more about the specification](http://www.softwareishard.com/blog/har-12-spec/).  In addition to standard fields, the object har includes a custom property &#x60;systemMetrics&#x60; which contain metrics about CPU and physical memory usage.  Check &#x60;SystemMetrics&#x60; on schemas tab for more information. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEndpointRealUserTestPagesDetailsTest() throws ApiException {
        String id = null;
        String pageId = null;
        String aid = null;
        GetEndpointRealUserTestPagesDetails200Response response = api.getEndpointRealUserTestPagesDetails(id, pageId, aid);
        // TODO: test validations
    }

    /**
     * List endpoint real user tests
     *
     * Returns a list of all endpoint real user tests. Results from the last round are provided unless an explicit start and end is provided with &#x60;startDate&#x60;, &#x60;endDate&#x60; or &#x60;window&#x60; optional parameters.  ## Request body filters This endpoint supports complex filtering using the request body. It is important these filters remain unaltered when making use of pagination, otherwise the results will not be coherent with the original request.  ### Multiple filter fields When multiple filter fields are provided, a logical &#x60;AND&#x60; is applied between the filters.  &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/filter&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{   \&quot;searchFilters\&quot;: {     \&quot;platform\&quot;: [ \&quot;mac\&quot; ],     \&quot;domain\&quot;: [ \&quot;thousandeyes.com\&quot; ]   }}&#39; &#x60;&#x60;&#x60;  ### Filter field with multiple values When a filter field contains multiple values, a logical &#x60;OR&#x60; is applied between the filter values.  &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/filter&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{     \&quot;searchFilters\&quot;: {       \&quot;networkId\&quot;: [ \&quot;660b34109d12\&quot;, \&quot;660b34109d15\&quot; ]     }   }&#39; &#x60;&#x60;&#x60;  ### Combination of request parameters and body filters &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/filter?window&#x3D;1w&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{     \&quot;searchFilters\&quot;: {       \&quot;platform\&quot;: [ \&quot;mac\&quot; ],       \&quot;domain\&quot;: [ \&quot;thousandeyes.com\&quot; ],       \&quot;networkId\&quot;: [ \&quot;660b34109d12\&quot;, \&quot;660b34109d15\&quot; ]     }   }&#39; &#x60;&#x60;&#x60;  Returns a &#x60;results&#x60; array of endpoint real user tests. Either the latest results, or based on the time range and body filters specified. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEndpointRealUserTestsTest() throws ApiException {
        String aid = null;
        String window = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String cursor = null;
        GetEndpointRealUserTestsRequest getEndpointRealUserTestsRequest = null;
        GetEndpointRealUserTests200Response response = api.getEndpointRealUserTests(aid, window, startDate, endDate, cursor, getEndpointRealUserTestsRequest);
        // TODO: test validations
    }

    /**
     * List endpoint real user tests
     *
     * Returns a list of all endpoint real user tests.  Sessions from the last round are provided unless an explicit start and end is provided with &#x60;startDate&#x60;, &#x60;endDate&#x60; or &#x60;window&#x60; optional parameters.  ## Request body filters This endpoint supports complex filtering using the request body. It is important these filters remain unaltered when making use of pagination, otherwise the results will not be coherent with the original request.  ### Multiple filter fields When multiple filter fields are provided, a logical &#x60;AND&#x60; is applied between the filters.  &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/networks/filter&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{    \&quot;searchFilters\&quot;: {     \&quot;platform\&quot;: [ \&quot;mac\&quot; ],     \&quot;domain\&quot;: [ \&quot;thousandeyes.com\&quot; ]   }}&#39; &#x60;&#x60;&#x60;  ### Filter field with multiple values When a filter field contains multiple values, a logical &#x60;OR&#x60; is applied between the filter values.  &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/networks/filter&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{   \&quot;searchFilters\&quot;: {     \&quot;networkId\&quot;: [ \&quot;660b34109d12\&quot;, \&quot;660b34109d15\&quot; ]   }}&#39; &#x60;&#x60;&#x60;  ### Combination of request parameters and body filters &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/networks/filter?window&#x3D;1w&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{   \&quot;searchFilters\&quot;: {     \&quot;platform\&quot;: [ \&quot;mac\&quot; ],     \&quot;domain\&quot;: [ \&quot;thousandeyes.com\&quot; ],     \&quot;networkId\&quot;: [ \&quot;660b34109d12\&quot;, \&quot;660b34109d15\&quot; ]   }}&#39; &#x60;&#x60;&#x60;  Returns a &#x60;results&#x60; array of endpoint real user tests.  Network sessions shown are from the latest round, or based on the time range specified. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEndpointRealUserTestsNetworkTest() throws ApiException {
        String aid = null;
        String window = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String cursor = null;
        GetEndpointRealUserTestsRequest getEndpointRealUserTestsRequest = null;
        GetEndpointRealUserTestsNetwork200Response response = api.getEndpointRealUserTestsNetwork(aid, window, startDate, endDate, cursor, getEndpointRealUserTestsRequest);
        // TODO: test validations
    }

    /**
     * List endpoint real user tests visited pages
     *
     * Returns a list of all endpoint real user tests visited pages.  Sessions from the last round are provided unless an explicit start and end is provided with &#x60;startDate&#x60;, &#x60;endDate&#x60; or &#x60;window&#x60; optional parameters.  ## Request body filters This endpoint supports complex filtering using the request body. It is important these filters remain unaltered when making use of pagination, otherwise the results will not be coherent with the original request.  ### Multiple filter fields When multiple filter fields are provided, a logical &#x60;AND&#x60; is applied between the filters.  &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/pages/filter&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{   \&quot;searchFilters\&quot;: {     \&quot;platform\&quot;: [ \&quot;mac\&quot; ],     \&quot;domain\&quot;: [ \&quot;thousandeyes.com\&quot; ]   }}&#39; &#x60;&#x60;&#x60;  ### Filter field with multiple values When a filter field contains multiple values, a logical &#x60;OR&#x60; is applied between the filter values.  &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/pages/filter&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{   \&quot;searchFilters\&quot;: {     \&quot;networkId\&quot;: [ \&quot;660b34109d12\&quot;, \&quot;660b34109d15\&quot; ]   }}&#39; &#x60;&#x60;&#x60;  ### Combination of request parameters and body filters &#x60;&#x60;&#x60; curl --location --request POST &#39;https://api.thousandeyes.com/v7/endpoint/test-results/real-user-tests/pages/filter?window&#x3D;1w&#39; --header &#39;Authorization: Bearer $token&#39; --header &#39;Content-Type: application/json&#39; --data-raw &#39;{   \&quot;searchFilters\&quot;: {     \&quot;platform\&quot;: [ \&quot;mac\&quot; ],     \&quot;domain\&quot;: [ \&quot;thousandeyes.com\&quot; ],     \&quot;networkId\&quot;: [ \&quot;660b34109d12\&quot;, \&quot;660b34109d15\&quot; ]   }}&#39; &#x60;&#x60;&#x60;  Returns a &#x60;results&#x60; array of user loaded pages in an endpoint real user test.  Pages shown are from the latest round, or based on the time range specified. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEndpointRealUserTestsPagesTest() throws ApiException {
        String aid = null;
        String window = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String cursor = null;
        EndpointRealUserTestResultRequestFilter endpointRealUserTestResultRequestFilter = null;
        GetEndpointRealUserTestsPages200Response response = api.getEndpointRealUserTestsPages(aid, window, startDate, endDate, cursor, endpointRealUserTestResultRequestFilter);
        // TODO: test validations
    }

}
