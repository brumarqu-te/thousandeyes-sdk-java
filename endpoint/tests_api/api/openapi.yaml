openapi: 3.0.1
info:
  description: |2-

    ## Overview
    Manage endpoint agent dynamic and scheduled tests using the Endpoint Tests API.
  title: Endpoint Tests API
  version: 7.0.0
externalDocs:
  description: Find out more about Endpoint Agent Scheduled Tests
  url: https://docs.thousandeyes.com/product-documentation/end-user-monitoring/scheduled-tests
servers:
- description: Thousandeyes API production URL
  url: https://api.thousandeyes.com
security:
- BearerAuth:
  - read
paths:
  /v7/endpoint/tests/scheduled-tests:
    get:
      description: Returns a list of all endpoint scheduled tests configured in ThousandEyes.
        This list does not contain saved events.
      operationId: getEndpointTestsList
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getEndpointTestsList_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List endpoint scheduled tests
      tags:
      - List Endpoint Scheduled Tests
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/tests/scheduled-tests/agent-to-server:
    get:
      description: |
        Returns a list of all agent to server endpoint scheduled tests configured in ThousandEyes. This list does not contain saved events.
      operationId: getEndpointAgentToserverTestsList
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getEndpointAgentToserverTestsList_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List agent to server endpoint scheduled tests
      tags:
      - Scheduled Tests - Agent to Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: |
        Creates a new endpoint test in ThousandEyes using properties specified in the POST data.
        Please note that only Account Admins have the authorization to create new tests; regular users are restricted from using POST-based methods.
      operationId: postEndpointAgentToServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointAgentToServerTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postEndpointAgentToServerTest_201_response'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Creates agent to server endpoint scheduled test
      tags:
      - Scheduled Tests - Agent to Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/tests/scheduled-tests/agent-to-server/{testId}:
    get:
      description: Retrieves details of an agent to server endpoint scheduled test.
      operationId: getEndpointAgentToServerDetail
      parameters:
      - description: Unique ID of endpoint test.
        example: 584739201
        explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postEndpointAgentToServerTest_201_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Retrieve agent to server endpoint scheduled test
      tags:
      - Scheduled Tests - Agent to Server
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/tests/scheduled-tests/http-server:
    get:
      description: |
        Returns a list of agent to server endpoint scheduled tests configured in ThousandEyes. This list does not contain saved events.
      operationId: getEndpointHttpserverTestsList
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getEndpointHttpserverTestsList_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List HTTP server endpoint scheduled tests
      tags:
      - Scheduled Tests - HTTP Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: |
        Creates a new HTTP server endpoint test in ThousandEyes, using properties specified in the POST data.
        Please note that only users with Account Admin privileges have the authorization to create new tests; regular users are restricted from using POST-based methods.
      operationId: postEndpointHttpserverTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointHttpServerTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EndpointHttpServerTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create HTTP server endpoint scheduled test
      tags:
      - Scheduled Tests - HTTP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/tests/scheduled-tests/http-server/{testId}:
    get:
      description: Retrieves details of an HTTP Server endpoint scheduled test.
      operationId: getEndpointHttpserverTestDetail
      parameters:
      - description: Unique ID of endpoint test.
        example: 584739201
        explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getEndpointHttpserverTestDetail_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Retrieves HTTP server endpoint scheduled test
      tags:
      - Scheduled Tests - HTTP Server
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/tests/dynamic-tests/agent-to-server:
    get:
      description: Returns a list of all endpoint dynamic tests configured in ThousandEyes.
        This list does not contain saved events.
      operationId: getDynamicTestsList
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDynamicTestsList_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List endpoint dynamic tests
      tags:
      - Dynamic Tests - Agent To Server
      x-accepts: "application/hal+json,application/problem+json"
    post:
      description: |
        Create a new endpoint dynamic test in ThousandEyes using properties specified in the POST data.
        Please note that only Account Admins have the authorization to create new tests; regular users are restricted from using POST-based methods.
      operationId: postDynamicTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DynamicTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create endpoint dynamic test
      tags:
      - Dynamic Tests - Agent To Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/endpoint/tests/dynamic-tests/agent-to-server/{testId}:
    get:
      description: "Returns details of an endpoint dynamic test, including test type,\
        \ name, intervals, targets."
      operationId: getDynamicTestDetail
      parameters:
      - description: Unique ID of endpoint test.
        example: 584739201
        explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDynamicTestDetail_200_response'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Retrieve endpoint dynamic test
      tags:
      - Dynamic Tests - Agent To Server
      x-accepts: "application/hal+json,application/problem+json"
components:
  headers:
    Location:
      description: The absolute path to created resource.
      schema:
        example: https://api.thousandeyes.com/v7/link/to/resource/id
        format: uri
        type: string
  parameters:
    TestId:
      description: Unique ID of endpoint test.
      example: 584739201
      explode: false
      in: path
      name: testId
      required: true
      schema:
        type: string
      style: simple
    AccountGroupId:
      description: A unique identifier associated with your account group. You can
        retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note that
        you must be assigned to the target account group. Specifying this parameter
        without being assigned to the target account group will result in an error
        response.
      in: query
      name: aid
      required: false
      schema:
        example: "2067"
        type: string
  responses:
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Insufficient permissions to query endpoint
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Exhausted rate limit for the organization
    "500":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Internal server error
            status: 500
            detail: Optional detail about the internal error message.
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    "502":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Gateway
    GeneralError:
      description: An error occurred
    "400":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Request validation failed. There are invalid or missing fields
            status: 400
            detail: Invalid field value for field `expand`
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    "404":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: URI Resource Not Found
            status: 404
            detail: Details explaining if the 404 error is related to an invalid URI
              or a wrong ID
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Not found
  schemas:
    DynamicTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/DynamicTest'
          type: array
      type: object
    EndpointTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/EndpointTest'
          type: array
      type: object
    EndpointAgentToServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/EndpointAgentToServerTest'
          type: array
      type: object
    EndpointHttpServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/EndpointHttpServerTest'
          type: array
      type: object
    SelfLinks:
      properties:
        _links:
          $ref: '#/components/schemas/SelfLinks__links'
      readOnly: true
      type: object
    Link:
      description: A hyperlink from the containing resource to a URI.
      properties:
        href:
          description: "Its value is either a URI [RFC3986] or a URI template [RFC6570]."
          example: https://api.thousandeyes.com/v7/link/to/resource/id
          type: string
        templated:
          description: Should be true when the link object's "href" property is a
            URI template.
          type: boolean
        type:
          description: Used as a hint to indicate the media type expected when dereferencing
            the target resource.
          type: string
        deprecation:
          description: Its presence indicates that the link is to be deprecated at
            a future date. Its value is a URL that should provide further information
            about the deprecation.
          type: string
        name:
          description: Its value may be used as a secondary key for selecting link
            objects that share the same relation type.
          type: string
        profile:
          description: A URI that hints about the profile of the target resource.
          type: string
        title:
          description: Intended for labelling the link with a human-readable identifier
          type: string
        hreflang:
          description: Indicates the language of the target resource
          type: string
      required:
      - href
      type: object
    UnauthorizedError:
      properties:
        error:
          example: invalid_token
          type: string
        error_description:
          example: Invalid access token
          type: string
      type: object
    Error:
      properties:
        type:
          description: "A URI reference that identifies the problem type. When this\
            \ member is not present, its value is assumed to be \"about:blank\"."
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem.
          type: string
      type: object
    EndpointAgentToServerTestRequest:
      allOf:
      - $ref: '#/components/schemas/EndpointAgentToServerInstantTest'
      - properties:
          interval:
            $ref: '#/components/schemas/TestInterval'
        required:
        - interval
        type: object
    EndpointAgentToServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/EndpointInstantTest'
      - properties:
          serverName:
            description: A server address without a protocol or IP address.
            example: www.example.com
            type: string
        required:
        - serverName
        type: object
    EndpointInstantTest:
      properties:
        agentSelectorType:
          $ref: '#/components/schemas/EndpointTestAgentSelectorType'
        agents:
          description: List of endpoint agent IDs (obtained from `/endpoint/agents`
            endpoint). Required when `agentSelectorType` is set to `specific-agent`.
          example:
          - 0a3b9998-dc3a-4ff2-b50d-ac4a7cd986e1
          - 66eec0f1-72b4-4755-aa83-3aed61d17f3c
          items:
            format: uuid
            type: string
          type: array
        hasPing:
          default: true
          description: Optional flag indicating if the test should run ping.
          type: boolean
        hasTraceroute:
          default: true
          description: Optional flag indicating if the test should run traceroute.
          type: boolean
        endpointAgentLabels:
          description: "List of endpoint agent label IDs (obtained from `/endpoint/labels`\
            \ endpoint), required when `agentSelectorType` is set to `agent-labels`."
          example:
          - "567"
          - "214"
          items:
            type: string
          type: array
        maxMachines:
          description: Maximum number of agents which can execute the test.
          example: 10
          maximum: 5000
          minimum: 1
          type: integer
        port:
          description: "Port number, if not specified, the port is selected based\
            \ on a protocol (HTTP 80, HTTPS 443)."
          example: 80
          type: integer
        testName:
          description: Name of the test.
          example: Test name
          type: string
      required:
      - agentSelectorType
      - maxMachines
      - testName
      type: object
    EndpointTestAgentSelectorType:
      description: "Retrieve either all available agents, a specific list of agents,\
        \ or a list of agent labels."
      enum:
      - all-agents
      - specific-agents
      - agent-labels
      example: all-agents
      type: string
    EndpointTestAgents:
      description: List of endpoint agent IDs (obtained from `/endpoint/agents` endpoint).
        Required when `agentSelectorType` is set to `specific-agent`.
      example:
      - 0a3b9998-dc3a-4ff2-b50d-ac4a7cd986e1
      - 66eec0f1-72b4-4755-aa83-3aed61d17f3c
      items:
        format: uuid
        type: string
      type: array
    TestHasPing:
      default: true
      description: Optional flag indicating if the test should run ping.
      type: boolean
    TestHasTraceRoute:
      default: true
      description: Optional flag indicating if the test should run traceroute.
      type: boolean
    EndpointAgentLabels:
      description: "List of endpoint agent label IDs (obtained from `/endpoint/labels`\
        \ endpoint), required when `agentSelectorType` is set to `agent-labels`."
      example:
      - "567"
      - "214"
      items:
        type: string
      type: array
    EndpointTestMaxMachines:
      description: Maximum number of agents which can execute the test.
      example: 10
      maximum: 5000
      minimum: 1
      type: integer
    EndpointTestPort:
      description: "Port number, if not specified, the port is selected based on a\
        \ protocol (HTTP 80, HTTPS 443)."
      example: 80
      type: integer
    TestName:
      description: Name of the test.
      example: Test name
      type: string
    TestInterval:
      description: Interval between test runs in seconds.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1800
      - 3600
      example: 120
      type: integer
    EndpointAgentToServerTest:
      allOf:
      - $ref: '#/components/schemas/EndpointTest'
      - properties:
          type:
            $ref: '#/components/schemas/EndpointAgentToServerType'
        type: object
    EndpointTest:
      properties:
        _links:
          $ref: '#/components/schemas/EndpointTestLinks'
        agentSelectorConfig:
          $ref: '#/components/schemas/EndpointAgentSelectorConfig'
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        interval:
          $ref: '#/components/schemas/TestInterval'
        isEnabled:
          default: true
          description: Indicates if test is enabled.
          example: true
          readOnly: true
          type: boolean
        isSavedEvent:
          description: Indicates if the test is a saved event.
          example: false
          readOnly: true
          type: boolean
        hasPathTraceInSession:
          description: "Enables \"in session\" path trace. When enabled, this option\
            \ initiates a TCP session with the target server and sends path trace\
            \ packets within the established TCP session."
          example: true
          type: boolean
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        networkMeasurements:
          default: true
          description: Enable or disable network measurements. Set to true to enable
            or false to disable network measurements.
          type: boolean
        port:
          description: "Port number, if not specified, the port is selected based\
            \ on a protocol (HTTP 80, HTTPS 443)."
          example: 80
          type: integer
        protocol:
          $ref: '#/components/schemas/EndpointTestProtocol'
        server:
          description: Target domain name or IP address.
          example: www.example.com
          type: string
        testId:
          description: Each test is assigned a unique ID to access test data from
            other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        aid:
          $ref: '#/components/schemas/EndpointTest_aid'
        testName:
          description: Name of the test.
          example: Test name
          type: string
        type:
          $ref: '#/components/schemas/EndpointScheduledTestType'
      type: object
    EndpointTestLinks:
      description: A list of links that can be accessed to get more information.
      properties:
        self:
          $ref: '#/components/schemas/EndpointTestLinks_self'
        testResults:
          $ref: '#/components/schemas/EndpointTestLinks_testResults'
      type: object
    TestResults:
      description: Reference to the test results.
      items:
        $ref: '#/components/schemas/Link'
      type: array
    EndpointAgentSelectorConfig:
      description: Agents selection object based on agentSelectorType.
      discriminator:
        mapping:
          all-agents: '#/components/schemas/EndpointAllAgentsSelectorConfig'
          specific-agents: '#/components/schemas/EndpointSpecificAgentsSelectorConfig'
          agent-labels: '#/components/schemas/EndpointAgentLabelsSelectorConfig'
        propertyName: agentSelectorType
      oneOf:
      - $ref: '#/components/schemas/EndpointAllAgentsSelectorConfig'
      - $ref: '#/components/schemas/EndpointAgentLabelsSelectorConfig'
      - $ref: '#/components/schemas/EndpointSpecificAgentsSelectorConfig'
      readOnly: true
      type: object
    EndpointAllAgentsSelectorConfig:
      description: Any agent selection object.
      properties:
        agentSelectorType:
          $ref: '#/components/schemas/AllAgentsSelectorType'
        maxMachines:
          description: Maximum number of agents which can execute the test.
          example: 10
          maximum: 5000
          minimum: 1
          type: integer
      readOnly: true
      type: object
    AllAgentsSelectorType:
      default: all-agents
      enum:
      - all-agents
      type: string
    EndpointAgentLabelsSelectorConfig:
      description: Agent labels selection object.
      properties:
        agentSelectorType:
          $ref: '#/components/schemas/AgentLabelsSelectorType'
        maxMachines:
          description: Maximum number of agents which can execute the test.
          example: 10
          maximum: 5000
          minimum: 1
          type: integer
        endpointAgentLabels:
          description: "List of endpoint agent label IDs (obtained from `/endpoint/labels`\
            \ endpoint), required when `agentSelectorType` is set to `agent-labels`."
          example:
          - "567"
          - "214"
          items:
            type: string
          type: array
      readOnly: true
      type: object
    AgentLabelsSelectorType:
      default: agent-labels
      enum:
      - agent-labels
      type: string
    EndpointSpecificAgentsSelectorConfig:
      description: Specific agents selection object.
      properties:
        agentSelectorType:
          $ref: '#/components/schemas/SpecificAgentsSelectorType'
        maxMachines:
          description: Maximum number of agents which can execute the test.
          example: 10
          maximum: 5000
          minimum: 1
          type: integer
        agents:
          description: List of endpoint agent IDs (obtained from `/endpoint/agents`
            endpoint). Required when `agentSelectorType` is set to `specific-agent`.
          example:
          - 0a3b9998-dc3a-4ff2-b50d-ac4a7cd986e1
          - 66eec0f1-72b4-4755-aa83-3aed61d17f3c
          items:
            format: uuid
            type: string
          type: array
      readOnly: true
      type: object
    SpecificAgentsSelectorType:
      default: specific-agents
      enum:
      - specific-agents
      type: string
    TestCreatedDate:
      description: UTC created date (ISO date-time format).
      example: 2022-07-17T22:00:54Z
      format: date-time
      readOnly: true
      type: string
    TestIsEnabled:
      default: true
      description: Indicates if test is enabled.
      example: true
      readOnly: true
      type: boolean
    TestIsSavedEvent:
      description: Indicates if the test is a saved event.
      example: false
      readOnly: true
      type: boolean
    TestHasPathTraceInSession:
      description: "Enables \"in session\" path trace. When enabled, this option initiates\
        \ a TCP session with the target server and sends path trace packets within\
        \ the established TCP session."
      example: true
      type: boolean
    TestNetworkMeasurements:
      default: true
      description: Enable or disable network measurements. Set to true to enable or
        false to disable network measurements.
      type: boolean
    EndpointTestProtocol:
      default: icmp
      description: Protocol used to perform the test.
      enum:
      - icmp
      - icmp-with-tcp-connect
      - tcp
      - prefer-tcp
      - ast-autodetect
      - autodetect
      type: string
    EndpointScheduledTestType:
      description: Type of test being queried.
      enum:
      - agent-to-server
      - http-server
      example: agent-to-server
      readOnly: true
      type: string
    EndpointAgentToServerType:
      description: Type of test being queried.
      enum:
      - agent-to-server
      example: agent-to-server
      readOnly: true
      type: string
    EndpointHttpServerTestRequest:
      allOf:
      - $ref: '#/components/schemas/EndpointHttpServerInstantTest'
      - $ref: '#/components/schemas/EndpointHttpServerBaseTest'
      - properties:
          interval:
            $ref: '#/components/schemas/TestInterval'
        required:
        - interval
        type: object
    EndpointHttpServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/EndpointInstantTest'
      - $ref: '#/components/schemas/EndpointHttpServerBaseTest'
      - properties:
          targetResponseTime:
            description: Response time target in milliseconds. Affects the colors
              of agents and legends on the view page. The value is compared with actual
              response time in order to determine the color scale (from green to red).
            example: 1000
            type: integer
          password:
            $ref: '#/components/schemas/TestPassword'
        required:
        - httpTimeLimit
        - sslVersionId
        - targetResponseTime
        - url
        - verifyCertificate
        type: object
    EndpointHttpServerBaseTest:
      properties:
        authType:
          $ref: '#/components/schemas/EndpointTestAuthType'
        hasPathTraceInSession:
          description: "Enables \"in session\" path trace. When enabled, this option\
            \ initiates a TCP session with the target server and sends path trace\
            \ packets within the established TCP session."
          example: true
          type: boolean
        httpTimeLimit:
          description: Maximum amount of time in milliseconds the agents wait before
            a request times out.
          example: 5000
          type: integer
        protocol:
          $ref: '#/components/schemas/EndpointTestProtocol'
        url:
          description: "Test target URL. Optionally, you can specify a protocol (http\
            \ or https). If no protocol is provided, the default `https` protocol\
            \ is used."
          example: www.example.com
          type: string
        username:
          description: Username for Basic/NTLM authentication.
          example: username
          type: string
        sslVersionId:
          $ref: '#/components/schemas/TestSslVersionId'
        tcpProbeMode:
          $ref: '#/components/schemas/TestProbeMode'
        verifyCertificate:
          description: Flag indicating if a certificate should be verified.
          example: false
          type: boolean
      type: object
    EndpointTestAuthType:
      default: none
      description: HTTP authentication type.
      enum:
      - none
      - basic
      - ntlm
      type: string
    TestUsername:
      description: Username for Basic/NTLM authentication.
      example: username
      type: string
    TestSslVersionId:
      description: |
        SSL version options:

        * Use '0' for automatic selection.
        * Use '3' for SSLv3.
        * Use '4' for TLS v1.0.
        * Use '5' for TLS v1.1.
        * Use '6' for TLS v1.2.
      enum:
      - "0"
      - "3"
      - "4"
      - "5"
      - "6"
      example: "0"
      type: string
    TestProbeMode:
      default: auto
      description: "Probe mode used by network test, only valid when the protocol\
        \ is set to TCP."
      enum:
      - auto
      - sack
      - syn
      type: string
    TestPassword:
      description: Password for Basic/NTLM authentication.
      example: password
      type: string
    EndpointHttpServerTest:
      allOf:
      - $ref: '#/components/schemas/EndpointTest'
      - $ref: '#/components/schemas/EndpointHttpServerBaseTest'
      - properties:
          type:
            $ref: '#/components/schemas/EndpointHttpServerType'
          contentRegex:
            description: "Content regex, this field does not require escaping."
            example: (regex)+
            type: string
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to false."
            type: boolean
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          interval:
            $ref: '#/components/schemas/TestInterval'
          postBody:
            description: "Enter the body for the HTTP POST request in this field.\
              \ No special escaping is necessary. If the post body is provided with\
              \ content, the `requestMethod` is automatically set to POST."
            example: body
            type: string
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
        type: object
    EndpointHttpServerType:
      description: Type of test being queried.
      enum:
      - http-server
      example: http-server
      readOnly: true
      type: string
    TestHttpTargetTime:
      description: "Target time for HTTP server completion, specified in milliseconds."
      example: 100
      maximum: 5000
      minimum: 100
      type: integer
    TestHttpVersion:
      default: 2
      description: "HTTP protocol version. Set to '2' to prefer HTTP/2, or '1' to\
        \ use only HTTP/1.1."
      maximum: 2
      minimum: 1
      type: integer
    TestSslVersion:
      description: Reflects the verbose SSL protocol version used by a test.
      example: Auto
      readOnly: true
      type: string
    TestUseNtlm:
      description: "Set to true to use NTLM, false to use Basic Authentication. Requires\
        \ username and password to be set."
      example: false
      type: boolean
    TestUserAgent:
      description: User-agent string to be provided during the test.
      example: curl
      type: string
    DynamicTestRequest:
      allOf:
      - $ref: '#/components/schemas/DynamicTest'
      - properties:
          agentSelectorType:
            $ref: '#/components/schemas/EndpointTestAgentSelectorType'
          agents:
            $ref: '#/components/schemas/EndpointTestAgents'
          endpointAgentLabels:
            $ref: '#/components/schemas/EndpointAgentLabels'
          maxMachines:
            description: Maximum number of agents which can execute this test.
            example: 250
            maximum: 100000
            minimum: 1
            type: integer
        type: object
    DynamicTest:
      properties:
        _links:
          $ref: '#/components/schemas/DynamicTestLinks'
        agentSelectorConfig:
          $ref: '#/components/schemas/EndpointAgentSelectorConfig'
        application:
          $ref: '#/components/schemas/DynamicTestApplication'
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        interval:
          $ref: '#/components/schemas/TestInterval'
        isEnabled:
          default: true
          description: Indicates if test is enabled.
          example: true
          readOnly: true
          type: boolean
        hasPathTraceInSession:
          allOf:
          - $ref: '#/components/schemas/TestHasPathTraceInSession'
          readOnly: true
        hasPing:
          default: true
          description: Optional flag indicating if the test should run ping.
          type: boolean
        hasTraceroute:
          default: true
          description: Optional flag indicating if the test should run traceroute.
          type: boolean
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        networkMeasurements:
          allOf:
          - $ref: '#/components/schemas/TestNetworkMeasurements'
          readOnly: true
        protocol:
          $ref: '#/components/schemas/EndpointTestProtocol'
        tcpProbeMode:
          allOf:
          - $ref: '#/components/schemas/TestProbeMode'
          readOnly: true
        testId:
          description: Each test is assigned a unique ID; this is used to access test
            information and results from other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        aid:
          $ref: '#/components/schemas/EndpointTest_aid'
        testName:
          description: Name of the test.
          example: Test name
          type: string
      type: object
    DynamicTestLinks:
      description: A list of links that can be accessed to get more information.
      properties:
        self:
          $ref: '#/components/schemas/DynamicTestLinks_self'
        testResults:
          $ref: '#/components/schemas/DynamicTestLinks_testResults'
      readOnly: true
      type: object
    DynamicTestApplication:
      description: Which supported application to monitor.
      enum:
      - microsoft-teams
      - webex
      - zoom
      example: webex
      type: string
    AccountGroupId:
      properties:
        aid:
          description: A unique identifier associated with your account group. You
            can retrieve your `AccountGroupId` from the `/account-groups` endpoint.
          example: "11"
          type: string
      type: object
    getEndpointTestsList_200_response:
      allOf:
      - $ref: '#/components/schemas/EndpointTests'
      - $ref: '#/components/schemas/SelfLinks'
    getEndpointAgentToserverTestsList_200_response:
      allOf:
      - $ref: '#/components/schemas/EndpointAgentToServerTests'
      - $ref: '#/components/schemas/SelfLinks'
    postEndpointAgentToServerTest_201_response:
      allOf:
      - $ref: '#/components/schemas/EndpointAgentToServerTest'
      - $ref: '#/components/schemas/SelfLinks'
    getEndpointHttpserverTestsList_200_response:
      allOf:
      - $ref: '#/components/schemas/EndpointHttpServerTests'
      - $ref: '#/components/schemas/SelfLinks'
    getEndpointHttpserverTestDetail_200_response:
      allOf:
      - $ref: '#/components/schemas/EndpointHttpServerTest'
      - $ref: '#/components/schemas/SelfLinks'
    getDynamicTestsList_200_response:
      allOf:
      - $ref: '#/components/schemas/DynamicTests'
      - $ref: '#/components/schemas/SelfLinks'
    getDynamicTestDetail_200_response:
      allOf:
      - $ref: '#/components/schemas/DynamicTest'
      - $ref: '#/components/schemas/SelfLinks'
    SelfLinks__links:
      description: A links object containing the self link.
      properties:
        self:
          $ref: '#/components/schemas/Link'
      readOnly: true
      type: object
    EndpointTest_aid:
      allOf:
      - $ref: '#/components/schemas/AccountGroupId'
      - readOnly: true
    EndpointTestLinks_self:
      allOf:
      - description: A reference to the test.
        example:
          href: "https://api.thousandeyes.com/v7/endpoint/tests/{type}/281474976710706"
      - $ref: '#/components/schemas/Link'
    EndpointTestLinks_testResults:
      example:
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/scheduled-tests/281474976710706/network/filter
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/scheduled-tests/281474976710706/pathvis
      oneOf:
      - $ref: '#/components/schemas/TestResults'
      - $ref: '#/components/schemas/Link'
    DynamicTestLinks_self:
      allOf:
      - description: The reference to the test.
        example:
          href: https://api.thousandeyes.com/v7/dynamic-tests/agent-to-server/281474976710706
      - $ref: '#/components/schemas/Link'
    DynamicTestLinks_testResults:
      example:
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/dynamic-tests/281474976710706/network/filter
      - href: https://api.thousandeyes.com/v7/endpoint/test-results/dynamic-tests/281474976710706/pathvis
      oneOf:
      - $ref: '#/components/schemas/TestResults'
      - $ref: '#/components/schemas/Link'
  securitySchemes:
    BearerAuth:
      description: Bearer authentication token
      scheme: bearer
      type: http

