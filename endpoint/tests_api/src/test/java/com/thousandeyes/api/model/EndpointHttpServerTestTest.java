/*
 * Endpoint Tests API
 *  ## Overview Manage endpoint agent dynamic and scheduled tests using the Endpoint Tests API.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.thousandeyes.api.model.EndpointAgentSelectorConfig;
import com.thousandeyes.api.model.EndpointHttpServerType;
import com.thousandeyes.api.model.EndpointTestAid;
import com.thousandeyes.api.model.EndpointTestAuthType;
import com.thousandeyes.api.model.EndpointTestLinks;
import com.thousandeyes.api.model.EndpointTestProtocol;
import com.thousandeyes.api.model.TestInterval;
import com.thousandeyes.api.model.TestProbeMode;
import com.thousandeyes.api.model.TestSslVersionId;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EndpointHttpServerTest
 */
public class EndpointHttpServerTestTest {
    private final EndpointHttpServerTest model = new EndpointHttpServerTest();

    /**
     * Model tests for EndpointHttpServerTest
     */
    @Test
    public void testEndpointHttpServerTest() {
        // TODO: test EndpointHttpServerTest
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'agentSelectorConfig'
     */
    @Test
    public void agentSelectorConfigTest() {
        // TODO: test agentSelectorConfig
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'interval'
     */
    @Test
    public void intervalTest() {
        // TODO: test interval
    }

    /**
     * Test the property 'isEnabled'
     */
    @Test
    public void isEnabledTest() {
        // TODO: test isEnabled
    }

    /**
     * Test the property 'isSavedEvent'
     */
    @Test
    public void isSavedEventTest() {
        // TODO: test isSavedEvent
    }

    /**
     * Test the property 'hasPathTraceInSession'
     */
    @Test
    public void hasPathTraceInSessionTest() {
        // TODO: test hasPathTraceInSession
    }

    /**
     * Test the property 'modifiedDate'
     */
    @Test
    public void modifiedDateTest() {
        // TODO: test modifiedDate
    }

    /**
     * Test the property 'networkMeasurements'
     */
    @Test
    public void networkMeasurementsTest() {
        // TODO: test networkMeasurements
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'server'
     */
    @Test
    public void serverTest() {
        // TODO: test server
    }

    /**
     * Test the property 'testId'
     */
    @Test
    public void testIdTest() {
        // TODO: test testId
    }

    /**
     * Test the property 'aid'
     */
    @Test
    public void aidTest() {
        // TODO: test aid
    }

    /**
     * Test the property 'testName'
     */
    @Test
    public void testNameTest() {
        // TODO: test testName
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'authType'
     */
    @Test
    public void authTypeTest() {
        // TODO: test authType
    }

    /**
     * Test the property 'httpTimeLimit'
     */
    @Test
    public void httpTimeLimitTest() {
        // TODO: test httpTimeLimit
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'sslVersionId'
     */
    @Test
    public void sslVersionIdTest() {
        // TODO: test sslVersionId
    }

    /**
     * Test the property 'tcpProbeMode'
     */
    @Test
    public void tcpProbeModeTest() {
        // TODO: test tcpProbeMode
    }

    /**
     * Test the property 'verifyCertificate'
     */
    @Test
    public void verifyCertificateTest() {
        // TODO: test verifyCertificate
    }

    /**
     * Test the property 'contentRegex'
     */
    @Test
    public void contentRegexTest() {
        // TODO: test contentRegex
    }

    /**
     * Test the property 'followRedirects'
     */
    @Test
    public void followRedirectsTest() {
        // TODO: test followRedirects
    }

    /**
     * Test the property 'httpTargetTime'
     */
    @Test
    public void httpTargetTimeTest() {
        // TODO: test httpTargetTime
    }

    /**
     * Test the property 'httpVersion'
     */
    @Test
    public void httpVersionTest() {
        // TODO: test httpVersion
    }

    /**
     * Test the property 'postBody'
     */
    @Test
    public void postBodyTest() {
        // TODO: test postBody
    }

    /**
     * Test the property 'sslVersion'
     */
    @Test
    public void sslVersionTest() {
        // TODO: test sslVersion
    }

    /**
     * Test the property 'useNtlm'
     */
    @Test
    public void useNtlmTest() {
        // TODO: test useNtlm
    }

    /**
     * Test the property 'userAgent'
     */
    @Test
    public void userAgentTest() {
        // TODO: test userAgent
    }

}
