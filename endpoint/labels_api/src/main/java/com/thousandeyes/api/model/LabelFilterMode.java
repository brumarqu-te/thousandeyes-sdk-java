/*
 * Endpoint Agent Labels API
 * Manage labels applied to endpoint agents using this API. 
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Type of matching to be applied for the values:  * &#x60;in&#x60;: The value on the agent must match one of the list of values provided. * &#x60;not-in&#x60;: The value on the agent must not match any of the list of values provided. 
 */
@JsonAdapter(LabelFilterMode.Adapter.class)
public enum LabelFilterMode {
  
  IN("in"),
  
  NOT_IN("not-in");

  private String value;

  LabelFilterMode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static LabelFilterMode fromValue(String value) {
    for (LabelFilterMode b : LabelFilterMode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<LabelFilterMode> {
    @Override
    public void write(final JsonWriter jsonWriter, final LabelFilterMode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public LabelFilterMode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return LabelFilterMode.fromValue(value);
    }
  }
}

