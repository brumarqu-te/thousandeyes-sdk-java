/*
 * Credentials API
 * ### Overview Manage credentials for transaction tests using the Credentials API.   The following permissions are required to access Credentials API endpoints:  * `Settings Tests Read` for read operations.  * `Settings Tests Update` for write operations.  * `View sensitive data in web transaction scripts` to view the encrypted value property of credentials.  * `Settings Tests Create Transaction (Tx) Tests` to create credentials.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api;

import com.thousandeyes.ApiException;
import com.thousandeyes.api.model.Credential;
import com.thousandeyes.api.model.CredentialRequest;
import com.thousandeyes.api.model.CredentialWithoutValue;
import com.thousandeyes.api.model.Error;
import com.thousandeyes.api.model.GetTransactionTestsCredentialsList200Response;
import java.net.URI;
import com.thousandeyes.api.model.UnauthorizedError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CredentialsApi
 */
@Disabled
public class CredentialsApiTest {

    private final CredentialsApi api = new CredentialsApi();

    /**
     * Create credential
     *
     * Creates a new credential for ThousandEyes transaction tests, based on properties provided in the request data. To create a new credential, you must have permission to update tests.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTransactionTestsCredentialTest() throws ApiException {
        CredentialRequest credentialRequest = null;
        String aid = null;
        CredentialWithoutValue response = api.createTransactionTestsCredential(credentialRequest, aid);
        // TODO: test validations
    }

    /**
     * Delete credential
     *
     * Deletes a ThousandEyes transaction test credential, using the request parameters. To delete a credential, you must have permission to update tests and access to the credential based on its default or provided account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTransactionTestsCredentialTest() throws ApiException {
        String id = null;
        String aid = null;
        api.deleteTransactionTestsCredential(id, aid);
        // TODO: test validations
    }

    /**
     * Retrieve credential
     *
     * Retrieves detailed information about a ThousandEyes transaction test credential. To access this information, you must have access to the credential based on its default or provided account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionTestsCredentialDetailsTest() throws ApiException {
        String id = null;
        String aid = null;
        Credential response = api.getTransactionTestsCredentialDetails(id, aid);
        // TODO: test validations
    }

    /**
     * List credentials
     *
     * Retrieves a list of credentials configured in ThousandEyes. Users have access to the list of credentials based on the default settings or the specified account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionTestsCredentialsListTest() throws ApiException {
        String aid = null;
        GetTransactionTestsCredentialsList200Response response = api.getTransactionTestsCredentialsList(aid);
        // TODO: test validations
    }

    /**
     * Update credential
     *
     * Updates the credential for ThousandEyes transaction tests, based on properties provided in the request data. To update a credential, you must have permission to update tests and access to the credential based on its default or provided account ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTransactionTestsCredentialTest() throws ApiException {
        String id = null;
        CredentialRequest credentialRequest = null;
        String aid = null;
        CredentialWithoutValue response = api.updateTransactionTestsCredential(id, credentialRequest, aid);
        // TODO: test validations
    }

}
