/*
 * Tags API
 * The ThousandEyes Tags API provides a tagging system with key/value pairs. It allows you to tag assets within the ThousandEyes platform (such as agents, tests, or alert rules) with meaningful metadata. For example: `branch:sfo`, `branch:nyc`, and `team:netops`.  This feature allows for: * Better support for automation. * Powerful and flexible reports/dashboards. * Support for third-party integrations.  Things to note with the ThousandEyes Tags API: * Tags are backwards-compatible with existing labels. * Tags are separated by Tests (CEA), Agents (CEA), Endpoint Agents, Scheduled Endpoint Tests, and Reports. A single tag can only apply to one type of target object, so each tag must specify the target type of object via a `type` field. * Tags are defined in a single table so that they can be represented using a single model - `Tag`.     
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api;

import com.thousandeyes.ApiException;
import com.thousandeyes.api.model.ApiError;
import com.thousandeyes.api.model.BulkTagAssignments;
import com.thousandeyes.api.model.Error;
import com.thousandeyes.api.model.TagAssignment;
import com.thousandeyes.api.model.UnauthorizedError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagAssignmentApi
 */
@Disabled
public class TagAssignmentApiTest {

    private final TagAssignmentApi api = new TagAssignmentApi();

    /**
     * Assign tag to multiple objects
     *
     * Assigns a tag to one or more objects. This endpoint has cumulative behavior: The tag is assigned to the specified objects, and the previous assignments persist. No unassignment takes place.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignTagTest() throws ApiException {
        String id = null;
        TagAssignment tagAssignment = null;
        String aid = null;
        api.assignTag(id, tagAssignment, aid);
        // TODO: test validations
    }

    /**
     * Assign multiple tags to multiple objects
     *
     * Assigns the specified tags to the specified objects. This endpoint has cumulative behavior: The tags are assigned to the specified objects, and the previous assignments persist. No unassignment takes place.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkAssignTagTest() throws ApiException {
        BulkTagAssignments bulkTagAssignments = null;
        String aid = null;
        BulkTagAssignments response = api.bulkAssignTag(bulkTagAssignments, aid);
        // TODO: test validations
    }

    /**
     * Remove multiple tags from multiple objects
     *
     * Removes the specified tags from one or more objects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkUnAssignTagTest() throws ApiException {
        BulkTagAssignments bulkTagAssignments = null;
        String aid = null;
        BulkTagAssignments response = api.bulkUnAssignTag(bulkTagAssignments, aid);
        // TODO: test validations
    }

    /**
     * Remove tag from multiple objects
     *
     * Removes a tag from one or more objects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unassignTagTest() throws ApiException {
        String id = null;
        TagAssignment tagAssignment = null;
        String aid = null;
        api.unassignTag(id, tagAssignment, aid);
        // TODO: test validations
    }

}
