/*
 * Administrative API
 * ## Overview Manage users, accounts, and account groups in the ThousandEyes platform using the Administrative API.  This API provides the following endpoints that define the operations to manage your organization:     * `/account-groups`: Account groups are used to divide an organization into different sections. These endpoints can be used to create, retrieve, update and delete account groups.   * `/users`: Create, retrieve, update and delete users within an organization.    * `/roles`: Create, retrieve and update roles for the current user.    * `/permissions`: Retrieve all assignable permissions. Used in the context of modifying roles.    * `/audit-user-events`: Retrieve all activity log events.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api;

import com.thousandeyes.ApiException;
import com.thousandeyes.api.model.AccountGroupRequestBody;
import com.thousandeyes.api.model.CreateAccountGroup201Response;
import com.thousandeyes.api.model.Error;
import com.thousandeyes.api.model.Expand;
import com.thousandeyes.api.model.GetAccountGroup200Response;
import com.thousandeyes.api.model.GetAccountGroups200Response;
import java.net.URI;
import com.thousandeyes.api.model.UnauthorizedError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountGroupsApi
 */
@Disabled
public class AccountGroupsApiTest {

    private final AccountGroupsApi api = new AccountGroupsApi();

    /**
     * Create account group
     *
     * Creates a new account group. This operation requires the &#x60;Edit all account groups&#x60; permission.  **Note:** Any user assigned to &#x60;All Account Groups&#x60; is automatically assigned to the new account group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccountGroupTest() throws ApiException {
        AccountGroupRequestBody accountGroupRequestBody = null;
        List<Expand> expand = null;
        CreateAccountGroup201Response response = api.createAccountGroup(accountGroupRequestBody, expand);
        // TODO: test validations
    }

    /**
     * Delete account group
     *
     * Deletes an account group using its ID. This operation requires the following permissions:    * Assign management permissions   * Delete account   * Edit all account groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountGroupTest() throws ApiException {
        String id = null;
        api.deleteAccountGroup(id);
        // TODO: test validations
    }

    /**
     * Retrieve account group
     *
     * Retrieves detailed information about an account group using its ID.  This operation requires the &#x60;View all account groups settings&#x60; permission.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountGroupTest() throws ApiException {
        String id = null;
        List<Expand> expand = null;
        GetAccountGroup200Response response = api.getAccountGroup(id, expand);
        // TODO: test validations
    }

    /**
     * List account groups
     *
     * Retrieves a list of account groups available to the current user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountGroupsTest() throws ApiException {
        String aid = null;
        GetAccountGroups200Response response = api.getAccountGroups(aid);
        // TODO: test validations
    }

    /**
     * Update account group
     *
     * Updates an account group using its ID. You can modify the account groupâ€™s name or the list of agents assigned to the account group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountGroupTest() throws ApiException {
        String id = null;
        AccountGroupRequestBody accountGroupRequestBody = null;
        List<Expand> expand = null;
        GetAccountGroup200Response response = api.updateAccountGroup(id, accountGroupRequestBody, expand);
        // TODO: test validations
    }

}
