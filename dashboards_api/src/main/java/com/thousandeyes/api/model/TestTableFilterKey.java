/*
 * Dashboards API
 * Manage ThousandEyes Dashboards
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets TestTableFilterKey
 */
@JsonAdapter(TestTableFilterKey.Adapter.class)
public enum TestTableFilterKey {
  
  ANYTHING("Anything"),
  
  TEST_NAME("Test Name"),
  
  TARGET("Target"),
  
  TEST_ID("Test ID"),
  
  TEST_TYPE("Test type"),
  
  LABEL_ID("Label ID");

  private String value;

  TestTableFilterKey(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TestTableFilterKey fromValue(String value) {
    for (TestTableFilterKey b : TestTableFilterKey.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TestTableFilterKey> {
    @Override
    public void write(final JsonWriter jsonWriter, final TestTableFilterKey enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TestTableFilterKey read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TestTableFilterKey.fromValue(value);
    }
  }
}

