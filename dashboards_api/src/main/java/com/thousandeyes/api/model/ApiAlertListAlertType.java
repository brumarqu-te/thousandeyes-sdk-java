/*
 * Dashboards API
 * Manage ThousandEyes Dashboards
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Name of the alert type
 */
@JsonAdapter(ApiAlertListAlertType.Adapter.class)
public enum ApiAlertListAlertType {
  
  NETWORK_END_TO_END_SERVER_("Network - End-to-End (Server)"),
  
  NETWORK_END_TO_END_SERVER("network-end-to-end-server"),
  
  NETWORK_END_TO_END_AGENT_("Network - End-to-End (Agent)"),
  
  NETWORK_END_TO_END_AGENT("network-end-to-end-agent"),
  
  NETWORK_PATH_TRACE("Network - Path Trace"),
  
  NETWORK_PATH_TRACE2("network-path-trace"),
  
  DNS_SERVER("DNS Server"),
  
  DNS_SERVER2("dns-server"),
  
  DNS_TRACE("DNS Trace"),
  
  DNS_TRACE2("dns-trace"),
  
  DNSSEC("DNSSEC"),
  
  DNSSEC2("dnssec"),
  
  DNS_DOMAIN("DNS+ Domain"),
  
  DNS_PLUS_DOMAIN("dns-plus-domain"),
  
  DNS_SERVER3("DNS+ Server"),
  
  DNS_PLUS_SERVER("dns-plus-server"),
  
  WEB_HTTP_SERVER("Web - HTTP Server"),
  
  WEB_HTTP_SERVER2("web-http-server"),
  
  WEB_PAGE_LOAD("Web - Page Load"),
  
  WEB_PAGE_LOAD2("web-page-load"),
  
  WEB_TRANSACTION_CLASSIC_("Web - Transaction (Classic)"),
  
  WEB_TRANSACTION_CLASSIC("web-transaction-classic"),
  
  WEB_TRANSACTION("Web - Transaction"),
  
  WEB_TRANSACTION2("web-transaction"),
  
  WEB_FTP_SERVER("Web - FTP Server"),
  
  WEB_FTP_SERVER2("web-ftp-server"),
  
  VOICE_SIP_SERVER("Voice - SIP Server"),
  
  VOICE_SIP_SERVER2("voice-sip-server"),
  
  VOICE_RTP_STREAM("Voice - RTP Stream"),
  
  VOICE_RTP_STREAM2("voice-rtp-stream"),
  
  DEVICE("Device"),
  
  DEVICE2("device"),
  
  DEVICE_INTERFACE("Device Interface"),
  
  DEVICE_INTERFACE2("device-interface"),
  
  ENDPOINT_END_TO_END_SERVER_("Endpoint - End-to-End (Server)"),
  
  ENDPOINT_END_TO_END_SERVER("endpoint-end-to-end-server"),
  
  ENDPOINTWEB_HTTP_SERVER("EndpointWeb - HTTP Server"),
  
  ENDPOINT_WEB_HTTP_SERVER("endpoint-web-http-server"),
  
  ENDPOINT_PATH_TRACE("Endpoint - Path Trace"),
  
  ENDPOINT_PATH_TRACE2("endpoint-path-trace"),
  
  BROWSER_SESSIONS_AGENT("Browser Sessions - Agent"),
  
  BROWSER_SESSION_AGENT("browser-session-agent"),
  
  BROWSER_SESSIONS_APPLICATION("Browser Sessions - Application"),
  
  BROWSER_SESSION_APPLICATION("browser-session-application"),
  
  ROUTING_BGP("Routing - BGP"),
  
  ROUTING_BGP2("routing-bgp");

  private String value;

  ApiAlertListAlertType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ApiAlertListAlertType fromValue(String value) {
    for (ApiAlertListAlertType b : ApiAlertListAlertType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ApiAlertListAlertType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ApiAlertListAlertType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ApiAlertListAlertType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ApiAlertListAlertType.fromValue(value);
    }
  }
}

