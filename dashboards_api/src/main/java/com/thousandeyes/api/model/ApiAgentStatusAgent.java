/*
 * Dashboards API
 * Manage ThousandEyes Dashboards
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.thousandeyes.api.model.ApiAgentLocation;
import com.thousandeyes.api.model.ApiAgentStatusIpInfo;
import com.thousandeyes.api.model.EnterpriseAgentState;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.thousandeyes.JSON;

/**
 * Agent shown in agent status widget.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-30T09:45:19.739212Z[Europe/London]")
public class ApiAgentStatusAgent {
  public static final String SERIALIZED_NAME_AGENT_ID = "agentId";
  @SerializedName(SERIALIZED_NAME_AGENT_ID)
  private String agentId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EnterpriseAgentState status;

  public static final String SERIALIZED_NAME_IP_INFO = "ipInfo";
  @SerializedName(SERIALIZED_NAME_IP_INFO)
  private ApiAgentStatusIpInfo ipInfo;

  public static final String SERIALIZED_NAME_AGENT_NAME = "agentName";
  @SerializedName(SERIALIZED_NAME_AGENT_NAME)
  private String agentName;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private ApiAgentLocation location;

  public ApiAgentStatusAgent() {
  }

  public ApiAgentStatusAgent agentId(String agentId) {
    
    this.agentId = agentId;
    return this;
  }

   /**
   * Identifier of the agent.
   * @return agentId
  **/
  @javax.annotation.Nullable
  public String getAgentId() {
    return agentId;
  }


  public void setAgentId(String agentId) {
    this.agentId = agentId;
  }


  public ApiAgentStatusAgent status(EnterpriseAgentState status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public EnterpriseAgentState getStatus() {
    return status;
  }


  public void setStatus(EnterpriseAgentState status) {
    this.status = status;
  }


  public ApiAgentStatusAgent ipInfo(ApiAgentStatusIpInfo ipInfo) {
    
    this.ipInfo = ipInfo;
    return this;
  }

   /**
   * Get ipInfo
   * @return ipInfo
  **/
  @javax.annotation.Nullable
  public ApiAgentStatusIpInfo getIpInfo() {
    return ipInfo;
  }


  public void setIpInfo(ApiAgentStatusIpInfo ipInfo) {
    this.ipInfo = ipInfo;
  }


  public ApiAgentStatusAgent agentName(String agentName) {
    
    this.agentName = agentName;
    return this;
  }

   /**
   * Name of the agent
   * @return agentName
  **/
  @javax.annotation.Nullable
  public String getAgentName() {
    return agentName;
  }


  public void setAgentName(String agentName) {
    this.agentName = agentName;
  }


  public ApiAgentStatusAgent location(ApiAgentLocation location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  public ApiAgentLocation getLocation() {
    return location;
  }


  public void setLocation(ApiAgentLocation location) {
    this.location = location;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiAgentStatusAgent apiAgentStatusAgent = (ApiAgentStatusAgent) o;
    return Objects.equals(this.agentId, apiAgentStatusAgent.agentId) &&
        Objects.equals(this.status, apiAgentStatusAgent.status) &&
        Objects.equals(this.ipInfo, apiAgentStatusAgent.ipInfo) &&
        Objects.equals(this.agentName, apiAgentStatusAgent.agentName) &&
        Objects.equals(this.location, apiAgentStatusAgent.location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentId, status, ipInfo, agentName, location);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiAgentStatusAgent {\n");
    sb.append("    agentId: ").append(toIndentedString(agentId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    ipInfo: ").append(toIndentedString(ipInfo)).append("\n");
    sb.append("    agentName: ").append(toIndentedString(agentName)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agentId");
    openapiFields.add("status");
    openapiFields.add("ipInfo");
    openapiFields.add("agentName");
    openapiFields.add("location");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ApiAgentStatusAgent
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiAgentStatusAgent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiAgentStatusAgent is not found in the empty JSON string", ApiAgentStatusAgent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiAgentStatusAgent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiAgentStatusAgent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("agentId") != null && !jsonObj.get("agentId").isJsonNull()) && !jsonObj.get("agentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agentId").toString()));
      }
      // validate the optional field `ipInfo`
      if (jsonObj.get("ipInfo") != null && !jsonObj.get("ipInfo").isJsonNull()) {
        ApiAgentStatusIpInfo.validateJsonElement(jsonObj.get("ipInfo"));
      }
      if ((jsonObj.get("agentName") != null && !jsonObj.get("agentName").isJsonNull()) && !jsonObj.get("agentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agentName").toString()));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        ApiAgentLocation.validateJsonElement(jsonObj.get("location"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiAgentStatusAgent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiAgentStatusAgent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiAgentStatusAgent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiAgentStatusAgent.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiAgentStatusAgent>() {
           @Override
           public void write(JsonWriter out, ApiAgentStatusAgent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiAgentStatusAgent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApiAgentStatusAgent given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApiAgentStatusAgent
  * @throws IOException if the JSON string is invalid with respect to ApiAgentStatusAgent
  */
  public static ApiAgentStatusAgent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiAgentStatusAgent.class);
  }

 /**
  * Convert an instance of ApiAgentStatusAgent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

