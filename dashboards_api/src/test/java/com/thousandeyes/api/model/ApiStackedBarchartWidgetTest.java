/*
 * Dashboards API
 * Manage ThousandEyes Dashboards
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.thousandeyes.api.model.ApiAggregateProperty;
import com.thousandeyes.api.model.ApiDuration;
import com.thousandeyes.api.model.ApiWidgetMeasure;
import com.thousandeyes.api.model.DashboardMetric;
import com.thousandeyes.api.model.DashboardMetricDirection;
import com.thousandeyes.api.model.MetricGroup;
import com.thousandeyes.api.model.SelfLinksLinks;
import com.thousandeyes.api.model.StackedBarChartDatasource;
import com.thousandeyes.api.model.VisualMode;
import com.thousandeyes.api.model.WidgetSortDirection;
import com.thousandeyes.api.model.WidgetSortProperty;
import com.thousandeyes.api.model.WidgetType;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApiStackedBarchartWidget
 */
public class ApiStackedBarchartWidgetTest {
    private final ApiStackedBarchartWidget model = new ApiStackedBarchartWidget();

    /**
     * Model tests for ApiStackedBarchartWidget
     */
    @Test
    public void testApiStackedBarchartWidget() {
        // TODO: test ApiStackedBarchartWidget
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'visualMode'
     */
    @Test
    public void visualModeTest() {
        // TODO: test visualMode
    }

    /**
     * Test the property 'embedUrl'
     */
    @Test
    public void embedUrlTest() {
        // TODO: test embedUrl
    }

    /**
     * Test the property 'isEmbedded'
     */
    @Test
    public void isEmbeddedTest() {
        // TODO: test isEmbedded
    }

    /**
     * Test the property 'metricGroup'
     */
    @Test
    public void metricGroupTest() {
        // TODO: test metricGroup
    }

    /**
     * Test the property 'direction'
     */
    @Test
    public void directionTest() {
        // TODO: test direction
    }

    /**
     * Test the property 'metric'
     */
    @Test
    public void metricTest() {
        // TODO: test metric
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'measure'
     */
    @Test
    public void measureTest() {
        // TODO: test measure
    }

    /**
     * Test the property 'fixedTimespan'
     */
    @Test
    public void fixedTimespanTest() {
        // TODO: test fixedTimespan
    }

    /**
     * Test the property 'apiLink'
     */
    @Test
    public void apiLinkTest() {
        // TODO: test apiLink
    }

    /**
     * Test the property 'shouldExcludeAlertSuppressionWindows'
     */
    @Test
    public void shouldExcludeAlertSuppressionWindowsTest() {
        // TODO: test shouldExcludeAlertSuppressionWindows
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'axisGroupBy'
     */
    @Test
    public void axisGroupByTest() {
        // TODO: test axisGroupBy
    }

    /**
     * Test the property 'sortBy'
     */
    @Test
    public void sortByTest() {
        // TODO: test sortBy
    }

    /**
     * Test the property 'sortDirection'
     */
    @Test
    public void sortDirectionTest() {
        // TODO: test sortDirection
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'showLabels'
     */
    @Test
    public void showLabelsTest() {
        // TODO: test showLabels
    }

    /**
     * Test the property 'isHorizontalBarChart'
     */
    @Test
    public void isHorizontalBarChartTest() {
        // TODO: test isHorizontalBarChart
    }

    /**
     * Test the property 'dataSource'
     */
    @Test
    public void dataSourceTest() {
        // TODO: test dataSource
    }

}
