/*
 * Dashboards API
 * Manage ThousandEyes Dashboards
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api;

import com.thousandeyes.ApiException;
import com.thousandeyes.api.model.ApiDashboard;
import java.math.BigDecimal;
import com.thousandeyes.api.model.DashboardOrder;
import com.thousandeyes.api.model.Error;
import com.thousandeyes.api.model.GetDashboardData200Response;
import java.time.OffsetDateTime;
import java.net.URI;
import com.thousandeyes.api.model.UnauthorizedError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DashboardsApi
 */
@Disabled
public class DashboardsApiTest {

    private final DashboardsApi api = new DashboardsApi();

    /**
     * Create dashboard
     *
     * Creates a new dashboard in your account group. To create a dashboard,  you must have one of the following permissions: * &#x60;Edit dashboard templates for all users in account group&#x60; permission (Account Admin).  * &#x60;Edit own dashboard templates&#x60; premission (Regular User). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDashboardTest() throws ApiException {
        ApiDashboard apiDashboard = null;
        String aid = null;
        ApiDashboard response = api.createDashboard(apiDashboard, aid);
        // TODO: test validations
    }

    /**
     * Delete dashboard
     *
     * Deletes a dashboard using the &#x60;dashboardId&#x60; provided in the request.  **Note**: * Users with the &#x60;Edit dashboard templates for all users in account group&#x60; permission (Account Admin) can delete any dashboard. * Users with the &#x60;Edit own dashboard templates&#x60; permission (Regular User) can only delete the dashboards they have created themselves. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDashboardTest() throws ApiException {
        String dashboardId = null;
        String aid = null;
        api.deleteDashboard(dashboardId, aid);
        // TODO: test validations
    }

    /**
     * Retrieve dashboard
     *
     * Returns a list of widgets within a dashboard, along with the dashboard&#39;s metadata. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDashboardByIdTest() throws ApiException {
        String dashboardId = null;
        String aid = null;
        ApiDashboard response = api.getDashboardById(dashboardId, aid);
        // TODO: test validations
    }

    /**
     * Retrieve dashboard widget data
     *
     * Returns the raw data displayed within a widget in the dashboard. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDashboardDataTest() throws ApiException {
        String dashboardId = null;
        String widgetId = null;
        String aid = null;
        String window = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        BigDecimal max = null;
        String cursor = null;
        String sort = null;
        DashboardOrder order = null;
        GetDashboardData200Response response = api.getDashboardData(dashboardId, widgetId, aid, window, startDate, endDate, max, cursor, sort, order);
        // TODO: test validations
    }

    /**
     * List dashboards
     *
     * Returns a list of dashboards and their settings within your account group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDashboardsForUserTest() throws ApiException {
        String aid = null;
        List<ApiDashboard> response = api.getDashboardsForUser(aid);
        // TODO: test validations
    }

    /**
     * Update dashboard
     *
     * Updates an existing dashboard in your account group.   **Note**:  * Users with the &#x60;Edit dashboard templates for all users in account group&#x60; permission (Account Admin) can update any dashboard. * Users with the &#x60;Edit own dashboard templates&#x60; permission (Regular User) can only update the dashboards they have created themselves. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDashboardTest() throws ApiException {
        String dashboardId = null;
        ApiDashboard apiDashboard = null;
        String aid = null;
        ApiDashboard response = api.updateDashboard(dashboardId, apiDashboard, aid);
        // TODO: test validations
    }

}
