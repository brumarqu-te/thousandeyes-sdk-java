openapi: 3.0.1
info:
  description: |2-

    ### Overview
    The Instant Tests API endpoint lets you create and run new instant tests. You will need to be a regular user or have the following permissions:
      * `API Access`
      * `View tests`

    The response does not include the immediate test results. Use the Test Results endpoints to get test results after creating and executing an instant test. You can find the URLs for these endpoints in the _links section of the test definition that is returned when you create the instant test.
  title: Instant Tests API
  version: 7.0.0
externalDocs:
  description: Find out more about Instant Tests.
  url: https://docs.thousandeyes.com/product-documentation/internet-and-wan-monitoring/tests/working-with-instant-tests
servers:
- description: Thousandeyes API production URL
  url: https://api.thousandeyes.com
security:
- BearerAuth:
  - read
paths:
  /v7/tests/agent-to-agent/instant:
    post:
      description: Creates and runs a new agent-to-agent instant test.
      operationId: postInstantTestAgentToAgent
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentToAgentInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToAgentInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create agent-to-agent instant test
      tags:
      - Agent to Agent
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/agent-to-server/instant:
    post:
      description: Creates and runs a new agent-to-server instant test.
      operationId: postInstantAgentToServer
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentToServerInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToServerInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create agent-to-server instant test
      tags:
      - Agent to Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dns-server/instant:
    post:
      description: Creates and runs a new DNS server instant test.
      operationId: postInstantDnsServer
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServerInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsServerInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNS server instant test
      tags:
      - DNS Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dns-trace/instant:
    post:
      description: Creates and runs a new DNS trace instant test.
      operationId: postInstantDnsTrace
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsTraceInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsTraceInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNS trace instant test
      tags:
      - DNS Trace
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/dnssec/instant:
    post:
      description: Creates and runs a new DNS security instant test.
      operationId: postInstantDnsSec
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsSecInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsSecInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNS security instant test
      tags:
      - DNS Security
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/http-server/instant:
    post:
      description: Creates and runs a new HTTP server instant test.
      operationId: postInstantHTTPServer
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpServerInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HttpServerInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create HTTP server instant test
      tags:
      - HTTP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/page-load/instant:
    post:
      description: Creates and runs a new HTTP page load instant test.
      operationId: postInstantHTTPPageLoad
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageLoadInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageLoadInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create HTTP page load instant test
      tags:
      - HTTP Page Load
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/web-transactions/instant:
    post:
      description: Creates and runs a new Web transactions instant test.
      operationId: postInstantWebTransactions
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebTransactionInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WebTransactionInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create web transactions instant test
      tags:
      - Web Transaction
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/ftp-server/instant:
    post:
      description: Creates and runs a new FTP server instant test.
      operationId: postInstantFtpServer
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FtpServerInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create FTP server instant test
      tags:
      - FTP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/sip-server/instant:
    post:
      description: Creates and runs a new SIP server instant test.
      operationId: postInstantSIPServer
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipServerInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SipServerInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create SIP server instant test
      tags:
      - SIP Server
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/voice/instant:
    post:
      description: Creates and runs a voice instant test.
      operationId: postInstantVoice
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: "(Optional) Indicates if the test sub-resources should be expanded.\
          \ Defaults to no expansion. To expand the `agents` sub-resource, use the\
          \ query `?expand=agent`."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          items:
            $ref: '#/components/schemas/Expand'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceInstantTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoiceInstantTest'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Invalid field value for field `expand`
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create voice instant test
      tags:
      - Voice
      x-content-type: application/json
      x-accepts: "application/hal+json,application/problem+json"
  /v7/tests/{testId}/run:
    post:
      description: Run an existing instant test.
      operationId: postInstantRun
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "2067"
          type: string
      - description: Identifier for the instant test you wish to rerun.
        explode: false
        in: path
        name: testId
        required: true
        schema:
          example: "105"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Run instant test
      tags:
      - Run
      x-accepts: application/json
components:
  headers:
    Location:
      description: The absolute path to created resource.
      schema:
        example: https://api.thousandeyes.com/v7/link/to/resource/id
        format: uri
        type: string
  parameters:
    expand:
      description: "(Optional) Indicates if the test sub-resources should be expanded.\
        \ Defaults to no expansion. To expand the `agents` sub-resource, use the query\
        \ `?expand=agent`."
      explode: false
      in: query
      name: expand
      required: false
      schema:
        example:
        - agent
        items:
          $ref: '#/components/schemas/Expand'
        type: array
      style: form
    AccountGroupId:
      description: A unique identifier associated with your account group. You can
        retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note that
        you must be assigned to the target account group. Specifying this parameter
        without being assigned to the target account group will result in an error
        response.
      in: query
      name: aid
      required: false
      schema:
        example: "2067"
        type: string
  responses:
    "400":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Request validation failed. There are invalid or missing fields
            status: 400
            detail: Invalid field value for field `expand`
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Insufficient permissions to query endpoint
    "404":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: URI Resource Not Found
            status: 404
            detail: Details explaining if the 404 error is related to an invalid URI
              or a wrong ID
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Not found
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Exhausted rate limit for the organization
    "500":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Internal server error
            status: 500
            detail: Optional detail about the internal error message.
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    "502":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Gateway
    GeneralError:
      description: An error occurred
  schemas:
    InstantTestRequest:
      properties:
        labels:
          description: A list of test label identifiers (get `labelId` from `/labels`
            endpoint).
          example:
          - "9842"
          - "1283"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
        sharedWithAccounts:
          description: A list of account group identifiers that the test is shared
            with (get `aid` from `/account-groups` endpoint).
          example:
          - "2087"
          - "100"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
        agents:
          description: A list of objects with `agentId` (required) and `sourceIpAddress`
            (optional).
          items:
            $ref: '#/components/schemas/InstantTestRequest_agents_inner'
          readOnly: false
          type: array
          writeOnly: true
      type: object
    DnsServersRequest:
      properties:
        dnsServers:
          description: A list of DNS server FQDN.
          example:
          - dns-example.net
          - 8.8.8.8
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
      type: object
    AgentToAgentInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/AgentToAgentInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    AgentToServerInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/AgentToServerInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    DnsServerInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/DnsServerInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      - $ref: '#/components/schemas/DnsServersRequest'
      type: object
    DnsTraceInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/DnsTraceInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    DnsSecInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/DnsSecInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    HttpServerInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/HttpServerInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    PageLoadInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/PageLoadInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    WebTransactionInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/WebTransactionInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    ServerInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/FtpServerInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    SipServerInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/SipServerInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    VoiceInstantTestRequest:
      allOf:
      - $ref: '#/components/schemas/VoiceInstantTest'
      - $ref: '#/components/schemas/InstantTestRequest'
      type: object
    Expand:
      enum:
      - agent
      - label
      - shared-with-account
      type: string
    AgentToAgentInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          direction:
            $ref: '#/components/schemas/TestDirection'
          dscp:
            $ref: '#/components/schemas/TestDscp'
          dscpId:
            $ref: '#/components/schemas/TestDscpId'
          mss:
            description: "Maximum segment size, in bytes."
            maximum: 1400
            minimum: 20
            type: integer
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          port:
            $ref: '#/components/schemas/TestPort'
          protocol:
            $ref: '#/components/schemas/AgentToAgentTestProtocol'
          targetAgentId:
            description: '`agentId` of the target agent for the test.'
            example: "2954"
            type: string
          throughputMeasurements:
            default: false
            description: Enable or disable throughput measurements. Throughput measurements
              cannot be enabled when the source or target of the test is a cloud agent.
            type: boolean
          throughputDuration:
            default: 10000
            description: The throughput duration.
            maximum: 30000
            minimum: 5000
            type: integer
          throughputRate:
            description: "The throughput rate, only applicable for UDP protocol."
            maximum: 1000
            minimum: 8
            type: integer
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: agent-to-agent
            readOnly: true
            type: string
        required:
        - agents
        - targetAgentId
        type: object
    InstantTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - properties:
          labels:
            $ref: '#/components/schemas/TestLabels'
          sharedWithAccounts:
            $ref: '#/components/schemas/TestSharedAccounts'
        type: object
    UnexpandedInstantTest:
      properties:
        createdBy:
          description: User that created the test.
          example: user@user.com
          readOnly: true
          type: string
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: A description of the test.
          example: ThousandEyes Test
          type: string
        liveShare:
          description: Indicates if the test is shared with the account group.
          example: false
          readOnly: true
          type: boolean
        modifiedBy:
          description: User that modified the test.
          example: user@user.com
          readOnly: true
          type: string
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        savedEvent:
          description: Indicates if the test is a saved event.
          readOnly: true
          type: boolean
        testId:
          description: Each test is assigned an unique ID; this is used to access
            test information and results from other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        testName:
          description: The name of the test. Test name must be unique.
          example: ThousandEyes Test
          type: string
        type:
          $ref: '#/components/schemas/TestType'
        _links:
          $ref: '#/components/schemas/UnexpandedInstantTest__links'
      type: object
    TestCreatedBy:
      description: User that created the test.
      example: user@user.com
      readOnly: true
      type: string
    TestCreatedDate:
      description: UTC created date (ISO date-time format).
      example: 2022-07-17T22:00:54Z
      format: date-time
      readOnly: true
      type: string
    TestType:
      description: "This is a read only value, as test type is implicit in the test\
        \ creation url."
      enum:
      - agent-to-agent
      - agent-to-server
      - bgp
      - http-server
      - page-load
      - web-transactions
      - ftp-server
      - dns-trace
      - dns-server
      - dnssec
      - sip-server
      - voice
      example: agent-to-server
      readOnly: true
      type: string
    TestResults:
      description: Reference to the test results.
      items:
        $ref: '#/components/schemas/Link'
      type: array
    TestLabels:
      items:
        $ref: '#/components/schemas/TestLabels_inner'
      readOnly: true
      type: array
    TestSharedAccounts:
      items:
        $ref: '#/components/schemas/TestSharedAccounts_inner'
      readOnly: true
      type: array
    TestAgents:
      description: Contains list of agents.
      items:
        $ref: '#/components/schemas/Agent'
      readOnly: true
      type: array
    TestDirection:
      default: to-target
      description: "Direction of the test, which affects how results are shown."
      enum:
      - to-target
      - from-target
      - bidirectional
      type: string
    TestDscp:
      description: DSCP label.
      example: Best Effort (DSCP 0)
      readOnly: true
      type: string
    TestDscpId:
      default: "0"
      description: "DSCP ID [to see list for acceptable values](https://docs.thousandeyes.com/product-documentation/tests/dscp-options-in-network-tests)"
      enum:
      - "0"
      - "8"
      - "16"
      - "24"
      - "32"
      - "40"
      - "48"
      - "56"
      - "10"
      - "12"
      - "14"
      - "18"
      - "20"
      - "22"
      - "26"
      - "28"
      - "30"
      - "34"
      - "36"
      - "38"
      - "46"
      - "44"
      type: string
    TestNumPathTraces:
      default: 3
      description: Number of path traces executed by the agent.
      maximum: 10
      minimum: 3
      type: integer
    TestPathTraceMode:
      default: classic
      description: Select `inSession` to perform the path trace within a TCP session.
      enum:
      - classic
      - in-session
      type: string
    TestPort:
      default: 49153
      description: Target port.
      maximum: 65535
      minimum: 1
      type: integer
    AgentToAgentTestProtocol:
      default: tcp
      enum:
      - tcp
      - udp
      type: string
    TestFixedPacketRate:
      description: Sets packets rate sent to measure the network in packets per second.
      example: 50
      maximum: 100
      minimum: 0
      type: integer
    Error:
      properties:
        type:
          description: "A URI reference that identifies the problem type. When this\
            \ member is not present, its value is assumed to be \"about:blank\"."
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem.
          type: string
      type: object
    UnauthorizedError:
      properties:
        error:
          example: invalid_token
          type: string
        error_description:
          example: Invalid access token
          type: string
      type: object
    AgentToServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          continuousMode:
            description: "To enable continuous monitoring, set this parameter to `true`\
              \ to. \nWhen continuous monitoring is enabled, the following actions\
              \ occur:\n* `fixedPacketRate` is enforced\n* `bandwidthMeasurements`\
              \ are disabled\n* If the `protocol` is set to `tcp`, `probeMode` is\
              \ set to `syn`.\n"
            example: false
            type: boolean
          fixedPacketRate:
            description: "If continuousMode is `false`, set the fixedPacketRate to\
              \ a value between 10-100. If `continuousMode` is `true`, set the `fixedPacketRate`\
              \ to `1`"
            example: 25
            maximum: 100
            minimum: 0
            type: integer
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          port:
            $ref: '#/components/schemas/TestPort'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          server:
            description: Target name or IP address.
            example: www.thousandeyes.com
            type: string
          dscp:
            $ref: '#/components/schemas/TestDscp'
          dscpId:
            $ref: '#/components/schemas/TestDscpId'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          pingPayloadSize:
            description: "Payload size (not total packet size) for the end-to-end\
              \ metric's probes, ping payload size allows values from 0 to 1400 bytes.\
              \ When set to null, payload sizes are 0 bytes for ICMP-based tests and\
              \ 1 byte for TCP-based tests."
            maximum: 1400
            minimum: 0
            type: integer
          networkMeasurements:
            default: false
            description: View packet loss in 1-second intervals. This is only available
              for 1-minute interval tests. Set to `true` to enable network measurements.
            type: boolean
          type:
            example: agent-to-server
            readOnly: true
            type: string
        required:
        - agents
        - server
        type: object
    TestBandwidthMeasurements:
      description: "Set to `true` to enable bandwidth measurements, only applies to\
        \ Enterprise agents assigned to the test."
      example: true
      type: boolean
    TestMtuMeasurements:
      description: Set `true` to measure MTU sizes on network from agents to the target.
      example: false
      type: boolean
    TestProbeMode:
      default: auto
      description: "Probe mode used by network test, only valid when the protocol\
        \ is set to TCP."
      enum:
      - auto
      - sack
      - syn
      type: string
    TestProtocol:
      default: tcp
      description: "Protocol used by dependent network tests (end-to-end, path trace,\
        \ PMTUD)."
      enum:
      - tcp
      - icmp
      type: string
    TestIpv6Policy:
      default: use-agent-policy
      description: IP version policy. Overrides the IPv6 policy configured at the
        agent level.
      enum:
      - force-ipv4
      - prefer-ipv6
      - force-ipv6
      - use-agent-policy
      type: string
    DnsServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          dnsServers:
            items:
              $ref: '#/components/schemas/TestDnsServer'
            type: array
          dnsTransportProtocol:
            $ref: '#/components/schemas/TestDnsTransportProtocol'
          domain:
            $ref: '#/components/schemas/TestDomain'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          recursiveQueries:
            description: Set true to run query with RD (recursion desired) flag enabled.
            example: true
            type: boolean
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          dnsQueryClass:
            $ref: '#/components/schemas/DnsQueryClass'
          type:
            example: dns-server
            readOnly: true
            type: string
        required:
        - agents
        - dnsServers
        - domain
        type: object
    TestDnsServer:
      properties:
        serverId:
          description: Unique identifier of the DNS server.
          example: "1447"
          type: string
        serverName:
          description: Fully qualified domain name (FQDN) of DNS server.
          example: dns-example.net
          type: string
      type: object
    TestDnsTransportProtocol:
      default: udp
      description: Transport protocol used for DNS requests.
      enum:
      - udp
      - tcp
      type: string
    TestDomain:
      description: "The target record for the test, with the record type suffixed.\
        \ If no record type is specified, the test defaults to an ANY record."
      example: www.thousandeyes.com
      type: string
    TestNetworkMeasurements:
      default: true
      description: Enable or disable network measurements. Set to true to enable or
        false to disable network measurements.
      type: boolean
    DnsQueryClass:
      description: "Domain class used by this test. 'in' stands for Internet, while\
        \ 'ch' stands for Chaos."
      enum:
      - in
      - ch
      type: string
    DnsTraceInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          dnsTransportProtocol:
            $ref: '#/components/schemas/TestDnsTransportProtocol'
          domain:
            $ref: '#/components/schemas/TestDomain'
          dnsQueryClass:
            $ref: '#/components/schemas/DnsQueryClass'
          type:
            example: dns-trace
            readOnly: true
            type: string
        required:
        - agents
        - domain
        type: object
    DnsSecInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          domain:
            $ref: '#/components/schemas/TestDomain'
          dnsQueryClass:
            $ref: '#/components/schemas/DnsQueryClass'
          type:
            example: dnssec
            readOnly: true
            type: string
        required:
        - agents
        - domain
        type: object
    HttpServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authType:
            $ref: '#/components/schemas/TestAuthType'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          clientCertificate:
            $ref: '#/components/schemas/TestClientCertificate'
          contentRegex:
            description: "Content regex, this field does not require escaping."
            example: (regex)+
            type: string
          headers:
            $ref: '#/components/schemas/TestHeaders'
          customHeaders:
            $ref: '#/components/schemas/TestCustomHeaders'
          desiredStatusCode:
            default: "200"
            description: Specify the HTTP status code value that indicates a successful
              response.
            type: string
          downloadLimit:
            description: Specifies maximum number of bytes to download from the target
              object.
            example: 2048
            type: integer
          dnsOverride:
            description: IP address to use for DNS override.
            example: 8.8.8.8
            format: ipv4
            type: string
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpTimeLimit:
            $ref: '#/components/schemas/TestHttpTimeLimit'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          includeHeaders:
            $ref: '#/components/schemas/TestIncludeHeaders'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          postBody:
            description: "Enter the body for the HTTP POST request in this field.\
              \ No special escaping is necessary. If the post body is provided with\
              \ content, the `requestMethod` is automatically set to POST."
            example: "{ \"example\" : \"value\"}"
            type: string
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          sslVersionId:
            $ref: '#/components/schemas/TestSslVersionId'
          url:
            $ref: '#/components/schemas/TestUrl'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
          username:
            $ref: '#/components/schemas/TestUsername'
          verifyCertificate:
            $ref: '#/components/schemas/TestVerifyCertificate'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to `false`."
            type: boolean
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: http-server
            readOnly: true
            type: string
        required:
        - agents
        - url
        type: object
    TestAuthType:
      default: none
      description: HTTP authentication type.
      enum:
      - none
      - basic
      - ntlm
      - kerberos
      type: string
    TestClientCertificate:
      description: "String representation (containing newline characters) of client\
        \ certificate, the private key must be placed first, then the certificate."
      example: |
        -----BEGIN PRIVATE KEY-----
        MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
        -----END PRIVATE KEY-----
        -----BEGIN CERTIFICATE-----
        MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
        -----END CERTIFICATE-----
      type: string
    TestHeaders:
      description: HTTP request headers used.
      example:
      - "header1: value1"
      - "header2: value2"
      items:
        type: string
      type: array
    TestCustomHeaders:
      example:
        root:
          header1: value1
        domains:
          domain1.com:
            header2: value2
        all:
          header3: value3
      properties:
        root:
          $ref: '#/components/schemas/TestCustomHeaders_root'
        domains:
          additionalProperties:
            $ref: '#/components/schemas/MapItem'
          description: Use these HTTP headers for the specified domains.
          type: object
        all:
          $ref: '#/components/schemas/TestCustomHeaders_all'
      type: object
    MapItem:
      properties:
        key:
          type: string
        value:
          type: string
    TestHttpTargetTime:
      description: "Target time for HTTP server completion, specified in milliseconds."
      example: 100
      maximum: 5000
      minimum: 100
      type: integer
    TestHttpTimeLimit:
      default: 5
      description: HTTP time limit in seconds.
      maximum: 60
      minimum: 5
      type: integer
    TestHttpVersion:
      default: 2
      description: "HTTP protocol version. Set to '2' to prefer HTTP/2, or '1' to\
        \ use only HTTP/1.1."
      maximum: 2
      minimum: 1
      type: integer
    TestIncludeHeaders:
      default: true
      description: Set to `true` to capture response headers for objects loaded by
        the test.
      type: boolean
    TestPassword:
      description: Password for Basic/NTLM authentication.
      example: password
      type: string
    TestSslVersion:
      description: Reflects the verbose SSL protocol version used by a test.
      example: Auto
      readOnly: true
      type: string
    TestSslVersionId:
      description: |
        SSL version options:

        * Use '0' for automatic selection.
        * Use '3' for SSLv3.
        * Use '4' for TLS v1.0.
        * Use '5' for TLS v1.1.
        * Use '6' for TLS v1.2.
      enum:
      - "0"
      - "3"
      - "4"
      - "5"
      - "6"
      example: "0"
      type: string
    TestUrl:
      description: Target for the test.
      example: www.thousandeyes.com
      type: string
    TestUseNtlm:
      description: "Set to true to use NTLM, false to use Basic Authentication. Requires\
        \ username and password to be set."
      example: false
      type: boolean
    TestUserAgent:
      description: User-agent string to be provided during the test.
      example: curl
      type: string
    TestUsername:
      description: Username for Basic/NTLM authentication.
      example: username
      type: string
    TestVerifyCertificate:
      default: false
      description: Ignore or acknowledge certificate errors. Set to false to ignore
        certificate errors.
      type: boolean
    PageLoadInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authType:
            $ref: '#/components/schemas/TestAuthType'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          clientCertificate:
            $ref: '#/components/schemas/TestClientCertificate'
          contentRegex:
            description: Verify content using a regular expression. This field does
              not require escaping.
            example: (regex)+
            type: string
          customHeaders:
            $ref: '#/components/schemas/TestCustomHeaders'
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to false."
            type: boolean
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpTimeLimit:
            $ref: '#/components/schemas/TestHttpTimeLimit'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          includeHeaders:
            $ref: '#/components/schemas/TestIncludeHeaders'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          pageLoadTargetTime:
            description: "Target time for page load completion, specified in seconds\
              \ and cannot exceed the `pageLoadTimeLimit`."
            example: 10
            maximum: 30
            minimum: 1
            type: integer
          pageLoadTimeLimit:
            default: 10
            description: Page load time limit. Must be larger than the `httpTimeLimit`.
            maximum: 60
            minimum: 5
            type: integer
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          sslVersionId:
            $ref: '#/components/schemas/TestSslVersionId'
          url:
            $ref: '#/components/schemas/TestUrl'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
          username:
            $ref: '#/components/schemas/TestUsername'
          verifyCertificate:
            $ref: '#/components/schemas/TestVerifyCertificate'
          blockDomains:
            $ref: '#/components/schemas/TestBlockDomains'
          disableScreenshot:
            $ref: '#/components/schemas/TestDisableScreenshot'
          allowMicAndCamera:
            $ref: '#/components/schemas/TestAllowMicAndCamera'
          allowGeolocation:
            $ref: '#/components/schemas/TestAllowGeolocation'
          browserLanguage:
            $ref: '#/components/schemas/TestBrowserLanguage'
          pageLoadingStrategy:
            $ref: '#/components/schemas/TestPageLoadingStrategy'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: page-load
            readOnly: true
            type: string
        required:
        - agents
        - url
        type: object
    TestBlockDomains:
      description: Domains or full object URLs to be excluded from metrics and waterfall
        data for transaction tests.
      example: domain.com/
      type: string
    TestDisableScreenshot:
      default: false
      description: Enables or disables screenshots on error. Set true to not capture
      type: boolean
    TestAllowMicAndCamera:
      default: false
      description: Set true allow the use of a fake mic and camera in the browser.
      type: boolean
    TestAllowGeolocation:
      default: false
      description: Set true to use the agent’s geolocation by the web page.
      type: boolean
    TestBrowserLanguage:
      description: Set one of the available browser language that you want to use
        to configure the browser.
      example: en-US
      type: string
    TestPageLoadingStrategy:
      default: normal
      description: "* `normal`: The test waits until the entire page is fully loaded,\
        \ including the downloading and parsing of HTML content as well as all associated\
        \ resources, before advancing to the next action in the transaction test script.\
        \ \n* `eager`: The test waits for the DOMContentLoaded event, indicating that\
        \ HTML content is downloaded and parsed, and the document reaches the \"interactive\"\
        \ readiness state, before proceeding to the next action in the test script.\n\
        * `none`: The test only waits for the download of HTML content. Once the HTML\
        \ is downloaded, the test continues to the next action in the transaction\
        \ test script without waiting for additional resources.\n"
      enum:
      - normal
      - eager
      - none
      type: string
    WebTransactionInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authType:
            $ref: '#/components/schemas/TestAuthType'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          clientCertificate:
            $ref: '#/components/schemas/TestClientCertificate'
          contentRegex:
            description: Verify content using a regular expression. This field does
              not require escaping.
            example: (regex)+
            type: string
          credentials:
            description: Contains a list of credential IDs (get `credentialId` from
              `/credentials` endpoint).
            example:
            - "3247"
            - "1051"
            items:
              type: string
            type: array
          customHeaders:
            $ref: '#/components/schemas/TestCustomHeaders'
          desiredStatusCode:
            default: "200"
            description: Specify the HTTP status code value that indicates a successful
              response.
            type: string
          followRedirects:
            default: true
            description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
              \ set this parameter to false."
            type: boolean
          httpTargetTime:
            $ref: '#/components/schemas/TestHttpTargetTime'
          httpTimeLimit:
            $ref: '#/components/schemas/TestHttpTimeLimit'
          httpVersion:
            $ref: '#/components/schemas/TestHttpVersion'
          includeHeaders:
            $ref: '#/components/schemas/TestIncludeHeaders'
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          sslVersion:
            $ref: '#/components/schemas/TestSslVersion'
          sslVersionId:
            $ref: '#/components/schemas/TestSslVersionId'
          targetTime:
            description: "Target time for completion, defaults to 50% of time limit\
              \ specified in seconds."
            example: 1
            maximum: 60
            minimum: 1
            type: integer
          timeLimit:
            default: 30
            description: Time limit for transaction in seconds.
            maximum: 180
            minimum: 5
            type: integer
          transactionScript:
            description: JavaScript of a web transaction test. Quotes must be escaped
              (precede " characters with \ ).
            example: "if (true) { return true; }"
            type: string
          url:
            $ref: '#/components/schemas/TestUrl'
          useNtlm:
            $ref: '#/components/schemas/TestUseNtlm'
          userAgent:
            $ref: '#/components/schemas/TestUserAgent'
          username:
            $ref: '#/components/schemas/TestUsername'
          verifyCertificate:
            $ref: '#/components/schemas/TestVerifyCertificate'
          blockDomains:
            $ref: '#/components/schemas/TestBlockDomains'
          disableScreenshot:
            $ref: '#/components/schemas/TestDisableScreenshot'
          allowMicAndCamera:
            $ref: '#/components/schemas/TestAllowMicAndCamera'
          allowGeolocation:
            $ref: '#/components/schemas/TestAllowGeolocation'
          browserLanguage:
            $ref: '#/components/schemas/TestBrowserLanguage'
          pageLoadingStrategy:
            $ref: '#/components/schemas/TestPageLoadingStrategy'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          type:
            example: web-transactions
            readOnly: true
            type: string
        required:
        - agents
        - transactionScript
        - url
        type: object
    FtpServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          bandwidthMeasurements:
            $ref: '#/components/schemas/TestBandwidthMeasurements'
          downloadLimit:
            description: Specify maximum number of bytes to download from the target
              object.
            example: 1048576
            type: integer
          ftpTargetTime:
            description: Target time for operation completion; specified in milliseconds.
            maximum: 6000
            minimum: 1000
            type: integer
          ftpTimeLimit:
            default: 10
            description: Set the time limit for the test in seconds.
            maximum: 60
            minimum: 10
            type: integer
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          probeMode:
            $ref: '#/components/schemas/TestProbeMode'
          protocol:
            $ref: '#/components/schemas/TestProtocol'
          requestType:
            $ref: '#/components/schemas/FtpServerRequestType'
          url:
            $ref: '#/components/schemas/TestUrl'
          useActiveFtp:
            default: false
            description: Explicitly set the flag to use active FTP.
            type: boolean
          useExplicitFtps:
            description: "Use explicit FTPS (ftp over SSL). By default, tests will\
              \ autodetect when it is appropriate to use FTPS."
            example: false
            type: boolean
          username:
            $ref: '#/components/schemas/TestUsername'
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          type:
            example: ftp-server
            readOnly: true
            type: string
        required:
        - agents
        - password
        - requestType
        - url
        - username
        type: object
    FtpServerRequestType:
      description: Set the type of activity for the test.
      enum:
      - download
      - upload
      - list
      type: string
    SipServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          authUser:
            description: Username for authentication with SIP server.
            example: username
            type: string
          mtuMeasurements:
            $ref: '#/components/schemas/TestMtuMeasurements'
          networkMeasurements:
            $ref: '#/components/schemas/TestNetworkMeasurements'
          optionsRegex:
            description: "Options regex, this field does not require escaping."
            example: "[\"a-z\"]"
            type: string
          password:
            $ref: '#/components/schemas/TestPassword'
          pathTraceMode:
            $ref: '#/components/schemas/TestPathTraceMode'
          port:
            $ref: '#/components/schemas/TestPort'
          protocol:
            $ref: '#/components/schemas/SipTestProtocol'
          registerEnabled:
            default: false
            description: Set to true to perform SIP registration on the test target
              with the SIP REGISTER command.
            type: boolean
          sipRegistrar:
            description: "SIP server to be tested, specified by domain name or IP\
              \ address."
            example: voice.thousandeyes.com
            type: string
          sipTargetTime:
            description: Target time for test completion in milliseconds.
            maximum: 5000
            minimum: 100
            type: integer
          sipTimeLimit:
            default: 5
            description: Time limit in milliseconds.
            maximum: 10
            minimum: 5
            type: integer
          targetSipCredentials:
            $ref: '#/components/schemas/TestSipCredentials'
          user:
            description: "Username for SIP registration, should be unique within a\
              \ ThousandEyes account group."
            example: username
            type: string
          fixedPacketRate:
            $ref: '#/components/schemas/TestFixedPacketRate'
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          type:
            example: sip-server
            readOnly: true
            type: string
        required:
        - agents
        - port
        - targetSipCredentials
        type: object
    SipTestProtocol:
      default: tcp
      description: Transport layer for SIP communication.
      enum:
      - tcp
      - tls
      - udp
      type: string
    TestSipCredentials:
      properties:
        authUser:
          description: Username for authentication with SIP server.
          example: username
          type: string
        password:
          description: Password for authentication with SIP server.
          example: password
          type: string
        port:
          description: Port number for the chosen protocol.
          example: 1024
          maximum: 65535
          minimum: 1024
          type: integer
        protocol:
          $ref: '#/components/schemas/SipTestProtocol'
        sipRegistrar:
          description: "SIP server to be tested, specified by domain name or IP address."
          example: sip.thousandeyes.com
          type: string
        user:
          description: "Username for SIP registration, should be unique within a ThousandEyes\
            \ account group."
          example: username
          type: string
      required:
      - port
      type: object
    VoiceInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgents'
          codec:
            description: Codec label
            example: G.711 @ 64 Kbps
            readOnly: true
            type: string
          codecId:
            description: "Coded ID, [see the list of acceptable values](https://docs.thousandeyes.com/product-documentation/internet-and-wan-monitoring/tests/working-with-test-settings#rtp-stream-advanced-settings-tab)"
            example: "0"
            type: string
          dscp:
            $ref: '#/components/schemas/TestDscp'
          dscpId:
            $ref: '#/components/schemas/TestDscpId'
          duration:
            default: 5
            description: Duration of the test in seconds.
            maximum: 30
            minimum: 5
            type: integer
          jitterBuffer:
            default: 40
            description: De-jitter buffer size in seconds.
            maximum: 150
            minimum: 0
            type: integer
          numPathTraces:
            $ref: '#/components/schemas/TestNumPathTraces'
          port:
            description: Port number for the chosen protocol.
            example: 1024
            maximum: 65535
            minimum: 1024
            type: integer
          targetAgentId:
            description: Agent ID of the target agent for the test.
            example: "281474976710706"
            type: string
          type:
            example: voice
            readOnly: true
            type: string
        required:
        - agents
        - targetAgentId
        type: object
    Link:
      description: A hyperlink from the containing resource to a URI.
      properties:
        href:
          description: "Its value is either a URI [RFC3986] or a URI template [RFC6570]."
          example: https://api.thousandeyes.com/v7/link/to/resource/id
          type: string
        templated:
          description: Should be true when the link object's "href" property is a
            URI template.
          type: boolean
        type:
          description: Used as a hint to indicate the media type expected when dereferencing
            the target resource.
          type: string
        deprecation:
          description: Its presence indicates that the link is to be deprecated at
            a future date. Its value is a URL that should provide further information
            about the deprecation.
          type: string
        name:
          description: Its value may be used as a secondary key for selecting link
            objects that share the same relation type.
          type: string
        profile:
          description: A URI that hints about the profile of the target resource.
          type: string
        title:
          description: Intended for labelling the link with a human-readable identifier
          type: string
        hreflang:
          description: Indicates the language of the target resource
          type: string
      required:
      - href
      type: object
    Agent:
      allOf:
      - $ref: '#/components/schemas/AgentBase'
      - properties:
          agentId:
            description: Unique ID of the agent.
            example: "281474976710706"
            readOnly: true
            type: string
          agentName:
            description: Name of the agent.
            example: thousandeyes-stg-va-254
            type: string
          agentType:
            $ref: '#/components/schemas/CloudEnterpriseAgentType'
          location:
            description: Location of the agent.
            example: San Francisco Bay Area
            readOnly: true
            type: string
          countryId:
            description: 2-digit ISO country code
            example: US
            readOnly: true
            type: string
          enabled:
            description: Flag indicating if the agent is enabled.
            example: true
            type: boolean
          verifySslCertificates:
            description: Flag indicating if has normal SSL operations or  if instead
              it's set to ignore SSL errors on browserbot-based tests.
            example: true
            readOnly: true
            type: boolean
        type: object
      type: object
    AgentBase:
      properties:
        ipAddresses:
          description: Array of private IP addresses.
          example:
          - 99.139.65.220
          - 99.139.65.221
          items:
            format: ipv4
            type: string
          readOnly: true
          type: array
        publicIpAddresses:
          description: Array of public IP addresses.
          example:
          - 192.168.1.78
          - 192.168.1.79
          items:
            format: ipv4
            type: string
          readOnly: true
          type: array
        network:
          description: Network (including ASN) of agent’s public IP.
          example: "AT&T Services, Inc. (AS 7018)"
          readOnly: true
          type: string
      type: object
    CloudEnterpriseAgentType:
      description: Type of the agent.
      enum:
      - cloud
      - enterprise-cluster
      - enterprise
      example: enterprise-cluster
      readOnly: true
      type: string
    InstantTestRequest_agents_inner:
      example:
        agentId: "125"
        sourceIpAddress: 1.1.1.1
      properties:
        agentId:
          description: Identifier for the agent (get `agentId` from `/agents` endpoint).
          type: string
        sourceIpAddress:
          description: IP address from the agent's `ipAddresses` field (get `ipAddresses`
            from `/agents` endpoint). Used for interface selection.
          type: string
      type: object
    UnexpandedInstantTest__links_self:
      allOf:
      - description: Reference to the test.
        example:
          href: "https://api.thousandeyes.com/v7/tests/{type}/281474976710706"
      - $ref: '#/components/schemas/Link'
    UnexpandedInstantTest__links_testResults:
      example:
      - href: https://api.thousandeyes.com/v7/test-results/281474976710706/network
      - href: https://api.thousandeyes.com/v7/test-results/281474976710706/pathvis
      oneOf:
      - $ref: '#/components/schemas/TestResults'
      - $ref: '#/components/schemas/Link'
    UnexpandedInstantTest__links:
      description: A list of links that can be accessed to get more information
      properties:
        self:
          $ref: '#/components/schemas/UnexpandedInstantTest__links_self'
        testResults:
          $ref: '#/components/schemas/UnexpandedInstantTest__links_testResults'
      readOnly: true
      type: object
    TestLabels_inner:
      example:
        labelId: "961"
        name: Artem label
        isBuiltIn: false
      properties:
        labelId:
          description: Label ID.
          type: string
        name:
          description: Name of the label.
          type: string
        isBuiltIn:
          description: "Value indicating if the label in question is BuiltIn (Account\
            \ Admin, Organization Admin, Regular User)."
          type: boolean
      type: object
    TestSharedAccounts_inner:
      properties:
        aid:
          description: Account group ID.
          example: "105"
          type: string
        name:
          description: Account group name.
          example: Account name
          type: string
      type: object
    TestCustomHeaders_root:
      allOf:
      - description: Use these HTTP headers for root server request.
      - $ref: '#/components/schemas/MapItem'
    TestCustomHeaders_all:
      allOf:
      - description: Use these HTTP headers for all domains.
      - $ref: '#/components/schemas/MapItem'
  securitySchemes:
    BearerAuth:
      description: Bearer authentication token
      scheme: bearer
      type: http

