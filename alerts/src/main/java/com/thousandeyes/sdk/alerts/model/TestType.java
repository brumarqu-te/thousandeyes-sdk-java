/*
 * Alerts API
 * You can manage the following alert functionalities on the ThousandEyes platform using the Alerts API:  * **Alerts**: Retrieve alert details. Alerts are assigned to tests through alert rules.  * **Alert Rules**: Conditions that you configure in order to highlight or be notified of events of interest in your ThousandEyes tests. When an alert ruleâ€™s conditions are met, the associated alert is triggered and the alert becomes active. It remains active until the alert is cleared. Alert rules are reusable across multiple tests..  * **Alert Suppression Windows**: Suppress alerts for tests during periods such as planned maintenance. Windows can be one-time events or recurring events to handle periodic occurrences such as monthly downtime for maintenance.  For more information about the alerts, see [Alerts](https://docs.thousandeyes.com/product-documentation/alerts). 
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.sdk.alerts.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * This is a read only value, as test type is implicit in the test creation url.
 */
public enum TestType {
  
  API("api"),
  
  AGENT_TO_AGENT("agent-to-agent"),
  
  AGENT_TO_SERVER("agent-to-server"),
  
  BGP("bgp"),
  
  HTTP_SERVER("http-server"),
  
  PAGE_LOAD("page-load"),
  
  WEB_TRANSACTIONS("web-transactions"),
  
  FTP_SERVER("ftp-server"),
  
  DNS_TRACE("dns-trace"),
  
  DNS_SERVER("dns-server"),
  
  DNSSEC("dnssec"),
  
  SIP_SERVER("sip-server"),
  
  VOICE("voice"),
  
  UNKNOWN("unknown");

  private String value;

  TestType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static TestType fromValue(String value) {
    for (TestType b : TestType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN;
  }

}

